{"version":3,"sources":["components/colors.js","components/Button/Button.js","components/Button/index.js","components/Container/Container.js","components/Container/index.js","components/Footer/Footer.js","components/Footer/index.js","components/Introduction/Introduction.js","components/Introduction/index.js","strava.js","components/Header/Header.js","components/Header/index.js","components/Highlight/Highlight.js","components/Highlight/index.js","hooks/useHasElementEntered.js","components/Highlights/Highlights.js","components/Highlights/index.js","contexts/SelectedItemContext.js","components/ChartTopKudosers/ChartTopKudosers.js","components/ChartTopKudosers/index.js","components/ReferenceList/ReferenceList.js","components/ReferenceList/index.js","components/ChartRunsByFrequency/ChartRunsByFrequency.js","components/ChartRunsByFrequency/index.js","components/Summary/Summary.js","components/Summary/index.js","components/ChartEvolutionOverTime/ChartEvolutionOverTime.js","components/ChartEvolutionOverTime/index.js","components/ChartDistanceComparison/ChartDistanceComparison.js","components/ChartDistanceComparison/index.js","components/ChartPaceComparison/ChartPaceComparison.js","components/ChartPaceComparison/index.js","components/RunComparison/RunComparison.js","components/RunComparison/index.js","contexts/SelectedItemProvider.js","components/Main/index.js","components/Main/Main.js","hooks/useStrava.js","i18n.js","Router.js","serviceWorker.js","index.js"],"names":["bgSecondary","primary","secondary","active","styled","Button","button","_templateObject","Container","div","Container_templateObject","Footer","footer","Footer_templateObject","Link","a","_templateObject2","react_default","createElement","href","index_es","id","ContainerBase","Introduction_templateObject","Content","main","Introduction_templateObject2","Introduction","_ref","onStart","Introduction_Container","components_Button","onClick","components_Footer","StravaAPI","kudos","laps","init","code","fetch","body","JSON","stringify","client_id","process","client_secret","grant_type","method","headers","Content-Type","then","res","json","access_token","refresh_token","athlete","expires_at","_this","accessToken","refreshToken","tokenExpiresAt","currentAthlete","statsRequest","getAthleteStats","_ref2","all_run_totals","totalRuns","activitiesRequest","getActivities","activities","Promise","all","filter","activity","type","map","getActivityDetails","activityDetail","Object","objectSpread","defineProperty","getKudosers","kudosers","createStravaRequest","path","options","arguments","length","undefined","concat","Authorization","getAuthenticatedAthelete","getZones","page","activityId","getLaps","getRoutes","getRaces","HeaderContainer","header","Header_templateObject","ProfilePicture","Header_templateObject2","Main","_templateObject3","Title","h1","_templateObject4","Header","profilePicture","fullName","es_Link","to","src","alt","Header_Main","values","name","defaultProps","athleteId","HighlightContainer","Highlight_templateObject","HighlightTop","Highlight_templateObject2","HightlightStat","Highlight_templateObject3","HightlightBottom","Highlight_templateObject4","Highlight","url","renderTitle","renderHighlight","renderSubtitle","target","useHasElementEntered","ref","_useState","useState","_useState2","slicedToArray","hasElementEntered","setHasElementEntered","useEffect","listener","e","_e$getBoundingClientR","getBoundingClientRect","top","right","bottom","left","window","innerHeight","document","documentElement","clientHeight","innerWidth","clientWidth","error","checkIfVisible","current","addEventListener","removeEventListener","HighlightsContainer","Highlights_templateObject","borderThickness","props","showBorders","Highlights","longestRun","mostFrequentRun","biggestFan","containerRef","useRef","components_Highlight","run","truncate","separator","distance","toPrecision","value","Date","date","day","weekday","month","year","count","fan","picture","runs","createContext","setSelectedItem","Chart","ChartTopKudosers_templateObject","ChartTopKudosers","_useContext","useContext","SelectedItemContext","selectedItem","objectWithoutProperties","chart","xScaleRef","xAxisRef","yScaleRef","xAxisContainerRef","take","margin","width","height","svg","select","append","attr","container","scaleLinear","range","scaleBand","padding","axisBottom","xScale","yScale","xAxis","xAxisContainer","domain","maxBy","kudosCount","d","scale","call","selectAll","g","data","enter","on","open","bandwidth","transition","duration","ease","easeQuadOut","textContainer","delay","i","easeQuadInOut","text","firstname","lastname","selectedKudoser","find","k","update","classed","exit","className","OList","ol","ReferenceList_templateObject","UList","ul","ReferenceList_templateObject2","ListItem","li","ReferenceList_templateObject3","ReferenceList_templateObject4","Text","span","_templateObject5","ReferenceList","items","ordered","key","label","onMouseOver","onMouseOut","ReferenceList_Link","assign","ChartRunsByFrequency_templateObject","ChartRunsByFrequency","matchingRunsBySegmentGroups","matchingRunsByHighestBestEfforts","matchingRunsBySegments","showSegmentGroupRuns","showSegmentRuns","showBestEffortRuns","yAxisRef","radiusScaleRef","yAxisContainerRef","runsBySegmentGroupsWithType","useMemo","r","runsByHighestBestEffortsWithType","runsBySegmentsWithType","allRuns","toConsumableArray","scaleTime","scaleQuantize","axisLeft","ticks","radiusScale","yAxis","yAxisContainer","now","dateSubYears","minBy","_ref3","_ref4","_ref5","axisTransition","t","remove","random","runsToScan","selectedRun","ChartRunsByFrequency_Chart","matchingRunsPerSegmentGroups","matchingRunsPerSegments","Section","section","Summary_templateObject","SectionTitle","h2","Summary_templateObject2","SectionGraph","Summary_templateObject3","SectionList","Summary_templateObject4","Summary","topKudosers","history","chartDataForSegmentGroups","mapValues","v","_head","head","start_date","chartDataForSegments","_find$segment","segment_efforts","segE","segment","toString","chartDataForBestEfforts","pickBy","isEmpty","_find","best_efforts","be","_useMemo","mostFrequentRuns","last","_useMemo2","mostFrequentCount","components_Highlights","toISOString","profile","components_ChartRunsByFrequency","components_ReferenceList","orderBy","push","components_ChartTopKudosers","matchingRunsByBestEfforts","ChartEvolutionOverTime_templateObject","ChartDistanceComparison","runsWithColors","color","getTotalTime","sumBy","time","getTotalDistance","areaGradient","keys","dateAddHours","getTime","splits","lineFn","line","x","y","curve","curveCardinal","speed","split","reduce","acc","cur","totalLength","this","getTotalLength","easeLinear","areaFn","area","y1","y0","ChartEvolutionOverTime_Chart","ChartDistanceComparison_templateObject","intl","formatMessage","ChartDistanceComparison_Chart","injectIntl","ChartPaceComparison_templateObject","ChartPaceComparison","mode","convertMPSToKMPH","mps","convertMPSToMinPKM","max_speed","average_speed","ChartPaceComparison_Chart","RunComparison_templateObject","ChartList","nav","RunComparison_templateObject2","ChartListItem","RunComparison_templateObject3","MainView","RunComparison_templateObject4","Graph","RunComparison_templateObject5","List","_templateObject6","RunComparison","title","charts","currentChart","setChart","RunComparison_Title","c","components_ChartEvolutionOverTime","splits_metric","elapsed_time","components_ChartPaceComparison","pick","components_ChartDistanceComparison","SelectedItemProvider","children","item","Provider","_useStrava","token","stravaApi","_useState3","_useState4","isReady","setIsReady","_useState5","_useState6","setLongestRun","_useState7","_useState8","fastestRun","setFastestRun","_useState9","_useState10","setTopKudosers","_useState11","_useState12","setBiggestFan","_useState13","_useState14","setProfilePicture","_useState15","_useState16","setFullName","_useState17","_useState18","setTotalRuns","_useState19","_useState20","setAthleteId","_useState21","_useState22","setMatchingRunsByBestEfforts","_useState23","_useState24","setMatchingRunsByHighestBestEfforts","_useState25","_useState26","setMatchingRunsBySegments","_useState27","_useState28","setMatchingRunsBySegmentGroups","allKudosers","uniqBy","flatten","kudoser","_topKudosers","countBy","allBestEfforts","b","mapKeys","be2","some","allSegments","_ref6","_ref7","seg","_ref8","seg2","activitiesPool","groups","doesActivitySegmentsMatch","activity1","activity2","segments1","segments2","uniqueSegments","_ref9","differenceBy","_ref10","_ref11","_ref12","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","a1","newGroup","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","a2","err","return","without","apply","useStrava","contexts_SelectedItemProvider","components_Container","components_Header","Switch","Route","exact","render","components_Summary","match","params","firstRun","components_RunComparison","flattenMessages","nestedMessages","prefix","messages","prefixedKey","i18n","en-US","introduction","description","getStartedButton","hello","source","summary","mostFrequentRunsTitle","topKudosersTitle","highlights","longestRunTitle","longestRunHighlight","longestRunSubtitle","mostFrequentRunTitle","mostFrequentRunHighlight","mostFrequentRunSubtitle","biggestFanTitle","biggestFanSubtitle","totalRunsTitle","totalRunsHighlight","totalRunsSubtitle","runComparison","evolutionOverTime","speedComparison","distanceComparison","chartDistanceComparison","meters","fr-FR","addLocaleData","en","fr","locale","navigator","language","languages","userLanguage","Boolean","location","hostname","ReactDOM","searchParams","URLSearchParams","search","get","BrowserRouter","basename","components_Main","components_Introduction","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a031fb86.chunk.js","sourcesContent":["export const bgPrimary = 'rgba(252, 230, 118, 1)';\r\nexport const bgSecondary = 'rgba(252, 169, 2, 1)';\r\nexport const primary = 'rgba(12, 8, 1, 1)';\r\nexport const secondary = 'rgba(79, 19, 3, 1)';\r\nexport const active = 'rgba(140, 18, 0, 1)';\r\n","import { active, secondary } from '../colors';\r\nimport styled from 'styled-components';\r\n\r\nexport default styled.button`\r\n  background: ${secondary};\r\n  padding: 5px 10px;\r\n  margin: 5px;\r\n\r\n  border: none;\r\n  border-radius: 5px;\r\n\r\n  color: white;\r\n\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    background: ${active};\r\n  }\r\n`;\r\n","import Button from './Button';\r\n\r\nexport default Button;\r\n","import styled from 'styled-components';\r\nimport { bgPrimary, primary } from '../colors';\r\n\r\nexport default styled.div`\r\n  background: ${bgPrimary};\r\n  width: 100%;\r\n  height: 100%;\r\n  margin: auto;\r\n  max-width: 980px;\r\n\r\n  color: ${primary};\r\n`;\r\n","import Container from './Container';\r\n\r\nexport default Container;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { primary, secondary } from '../colors';\r\n\r\nconst Footer = styled.footer`\r\n  padding: 50px;\r\n  text-align: center;\r\n`;\r\n\r\nconst Link = styled.a`\r\n  font-size: 24px;\r\n  color: ${primary};\r\n  margin: 30px;\r\n\r\n  &:hover {\r\n    color: ${secondary};\r\n  }\r\n`;\r\n\r\nexport default () => (\r\n  <Footer>\r\n    <Link href=\"https://github.com/lith-light-g/hook3\">\r\n      <FormattedMessage id=\"footer.source\" />\r\n    </Link>\r\n    -\r\n    <Link href=\"https://lith-light-g.github.io/hook3/storybook\">Storybook</Link>\r\n  </Footer>\r\n);\r\n","import Footer from './Footer';\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport { FormattedMessage, FormattedHTMLMessage } from 'react-intl';\r\nimport Button from '../Button';\r\nimport ContainerBase from '../Container';\r\nimport Footer from '../Footer';\r\n\r\nconst Container = styled(ContainerBase)`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Content = styled.main`\r\n  text-align: center;\r\n`;\r\n\r\nconst Introduction = ({ onStart }) => (\r\n  <Container>\r\n    <Content>\r\n      <div>\r\n        <h1>\r\n          <FormattedMessage id=\"introduction.title\" />\r\n        </h1>\r\n        <article>\r\n          <FormattedHTMLMessage id=\"introduction.description\" />\r\n        </article>\r\n        <Button onClick={onStart}>\r\n          <FormattedMessage id=\"introduction.getStartedButton\" />\r\n        </Button>\r\n      </div>\r\n    </Content>\r\n    <Footer />\r\n  </Container>\r\n);\r\n\r\nIntroduction.propTypes = {\r\n  onStart: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Introduction;\r\n","import Introduction from './Introduction';\r\n\r\nexport default Introduction;\r\n","const targetApi = 'https://www.strava.com/api/v3';\r\n\r\nexport default class StravaAPI {\r\n  kudos = {};\r\n  laps = {};\r\n  init = code =>\r\n    fetch('https://www.strava.com/oauth/token', {\r\n      body: JSON.stringify({\r\n        client_id: process.env.REACT_APP_STRAVA_ID,\r\n        client_secret: process.env.REACT_APP_STRAVA_SECRET,\r\n        code,\r\n        grant_type: 'authorization_code',\r\n      }),\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    })\r\n      .then(res => res.json())\r\n      .then(({ access_token, refresh_token, athlete, expires_at }) => {\r\n        this.accessToken = access_token;\r\n        this.refreshToken = refresh_token;\r\n        this.tokenExpiresAt = expires_at * 1000;\r\n        this.currentAthlete = athlete;\r\n\r\n        const statsRequest = this.getAthleteStats().then(\r\n          ({ all_run_totals }) => {\r\n            this.totalRuns = all_run_totals;\r\n          }\r\n        );\r\n\r\n        const activitiesRequest = this.getActivities().then(activities =>\r\n          Promise.all(\r\n            activities\r\n              .filter(activity => activity.type === 'Run')\r\n              .map(activity =>\r\n                this.getActivityDetails(activity.id).then(activityDetail => {\r\n                  this.activities = {\r\n                    ...this.activities,\r\n                    [activityDetail.id]: activityDetail,\r\n                  };\r\n                  return this.getKudosers(activityDetail.id).then(kudosers => {\r\n                    this.kudos = {\r\n                      ...this.kudos,\r\n                      [activityDetail.id]: kudosers,\r\n                    };\r\n                  });\r\n                })\r\n              )\r\n          )\r\n        );\r\n\r\n        return Promise.all([statsRequest, activitiesRequest]).then(() => ({\r\n          currentAthlete: athlete,\r\n          totalRuns: this.totalRuns,\r\n          activities: this.activities,\r\n          kudos: this.kudos,\r\n        }));\r\n      });\r\n\r\n  createStravaRequest = (path, options = {}) =>\r\n    fetch(`${targetApi}${path}`, {\r\n      ...options,\r\n      headers: {\r\n        ...options.headers,\r\n        Authorization: `Bearer ${this.accessToken}`,\r\n      },\r\n    }).then(res => res.json());\r\n\r\n  getAuthenticatedAthelete = () => this.createStravaRequest('/athlete');\r\n\r\n  getZones = () => this.createStravaRequest('/athlete/zones');\r\n\r\n  getAthleteStats = () =>\r\n    this.createStravaRequest(`/athletes/${this.currentAthlete.id}/stats`);\r\n\r\n  getActivities = (page = 1) =>\r\n    this.createStravaRequest(`/athlete/activities?page=${page}&per_page=100`);\r\n\r\n  getActivityDetails = id => this.createStravaRequest(`/activities/${id}`);\r\n\r\n  getKudosers = activityId =>\r\n    this.createStravaRequest(`/activities/${activityId}/kudos`);\r\n\r\n  getLaps = activityId =>\r\n    this.createStravaRequest(`/activities/${activityId}/laps`);\r\n\r\n  getRoutes = () =>\r\n    this.createStravaRequest(`/athletes/${this.currentAthlete.id}/routes`);\r\n\r\n  getRaces = () => this.createStravaRequest('/running_races');\r\n}\r\n","import React from 'react';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\nimport { bgSecondary, primary } from '../colors';\r\n\r\nconst HeaderContainer = styled.header`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: flex-start;\r\n  align-items: flex-start;\r\n`;\r\n\r\nconst ProfilePicture = styled.div`\r\n  background: ${bgSecondary};\r\n  padding: 10px;\r\n  flex: 0;\r\n\r\n  & img {\r\n    border: 5px solid ${primary};\r\n  }\r\n`;\r\n\r\nconst Main = styled.div`\r\n  padding: 10px 30px;\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: space-between;\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  font-size: 48px;\r\n`;\r\n\r\nconst Header = ({ profilePicture, fullName }) => (\r\n  <HeaderContainer>\r\n    <ProfilePicture>\r\n      <Link to=\"/\">\r\n        <img src={profilePicture} alt=\"\" />\r\n      </Link>\r\n    </ProfilePicture>\r\n    <Main>\r\n      <Title>\r\n        <FormattedMessage id=\"header.hello\" values={{ name: fullName }} />\r\n      </Title>\r\n    </Main>\r\n  </HeaderContainer>\r\n);\r\n\r\nHeader.propTypes = {\r\n  athleteId: PropTypes.number,\r\n  profilePicture: PropTypes.string,\r\n  fullName: PropTypes.string,\r\n};\r\n\r\nHeader.defaultProps = {\r\n  athleteId: undefined,\r\n  profilePicture: '',\r\n  fullName: '',\r\n};\r\n\r\nexport default Header;\r\n","import Header from './Header';\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport { primary, bgSecondary } from '../colors';\r\n\r\nconst HighlightContainer = styled.a`\r\n  width: 50%;\r\n  min-height: 200px;\r\n  text-align: center;\r\n  float: left;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-direction: column;\r\n\r\n  color: ${primary};\r\n  line-height: 48px;\r\n  text-decoration: none;\r\n`;\r\n\r\nconst HighlightTop = styled.div``;\r\n\r\nconst HightlightStat = styled.div`\r\n  font-size: 48px;\r\n  font-weight: bold;\r\n  padding: 5px;\r\n  transition: all 0.2s ease-in-out;\r\n  background: ${bgSecondary};\r\n\r\n  &:hover {\r\n    transform: scale(1.1);\r\n  }\r\n`;\r\n\r\nconst HightlightBottom = styled.div``;\r\n\r\nconst Highlight = ({ url, renderTitle, renderHighlight, renderSubtitle }) => (\r\n  <HighlightContainer href={url} target=\"_blank\">\r\n    <HighlightTop>{renderTitle()}</HighlightTop>\r\n    <HightlightStat>{renderHighlight()}</HightlightStat>\r\n    <HightlightBottom>{renderSubtitle()}</HightlightBottom>\r\n  </HighlightContainer>\r\n);\r\n\r\nHighlight.defaultProps = {\r\n  renderTitle: () => undefined,\r\n  renderHighlight: () => undefined,\r\n  renderSubtitle: () => undefined,\r\n  url: undefined,\r\n};\r\n\r\nHighlight.propTypes = {\r\n  renderTitle: PropTypes.func,\r\n  renderHighlight: PropTypes.func,\r\n  renderSubtitle: PropTypes.func,\r\n  url: PropTypes.string,\r\n};\r\n\r\nexport default Highlight;\r\n","import Highlight from './Highlight';\r\n\r\nexport default Highlight;\r\n","import { useState, useEffect } from 'react';\r\n\r\nexport default ref => {\r\n  const [hasElementEntered, setHasElementEntered] = useState(false);\r\n  const checkIfVisible = e => {\r\n    try {\r\n      const { top, right, bottom, left } = e.getBoundingClientRect();\r\n      return (\r\n        top >= 0 &&\r\n        left >= 0 &&\r\n        bottom <=\r\n          (window.innerHeight || document.documentElement.clientHeight) &&\r\n        right <= (window.innerWidth || document.documentElement.clientWidth)\r\n      );\r\n    } catch (error) {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  useEffect(\r\n    () => {\r\n      const listener = () => {\r\n        if (checkIfVisible(ref.current)) {\r\n          setHasElementEntered(true);\r\n          return true;\r\n        }\r\n        return false;\r\n      };\r\n      if (!listener()) {\r\n        if (ref) {\r\n          window.addEventListener('scroll', listener);\r\n          window.addEventListener('resize', listener);\r\n        }\r\n        return () => {\r\n          window.removeEventListener('scroll', listener);\r\n          window.removeEventListener('resize', listener);\r\n        };\r\n      }\r\n      return () => undefined;\r\n    },\r\n    [ref]\r\n  );\r\n\r\n  return hasElementEntered;\r\n};\r\n","import { truncate } from 'lodash-es';\r\nimport React, { useRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport {\r\n  FormattedMessage,\r\n  FormattedHTMLMessage,\r\n  FormattedDate,\r\n} from 'react-intl';\r\nimport Highlight from '../Highlight';\r\nimport useHasElementEntered from '../../hooks/useHasElementEntered';\r\nimport { primary } from '../colors';\r\n\r\nconst borderThickness = 5;\r\nconst singleBorderThickness = borderThickness / 2;\r\n\r\nconst HighlightsContainer = styled.div`\r\n  min-height: 500px;\r\n  padding: 50px 20px;\r\n  position: relative;\r\n\r\n  & > *:nth-child(1) {\r\n    position: relative;\r\n  }\r\n  & > *:nth-child(1):after {\r\n    content: '';\r\n    background: ${primary};\r\n    position: absolute;\r\n    bottom: 25%;\r\n    right: -${singleBorderThickness}px;\r\n    height: ${props => (props.showBorders ? 50 : 0)}%;\r\n    width: ${borderThickness}px;\r\n    transition: all 1s ease-in-out;\r\n  }\r\n  & > *:nth-child(1):before {\r\n    content: '';\r\n    background: ${primary};\r\n    position: absolute;\r\n    right: 25%;\r\n    bottom: -${singleBorderThickness}px;\r\n    width: ${props => (props.showBorders ? 50 : 0)}%;\r\n    height: ${borderThickness}px;\r\n    transition: all 1s ease-in-out;\r\n  }\r\n\r\n  & > *:nth-child(2) {\r\n    position: relative;\r\n  }\r\n  & > *:nth-child(2):after {\r\n    content: '';\r\n    background: ${primary};\r\n    position: absolute;\r\n    left: 25%;\r\n    bottom: -${singleBorderThickness}px;\r\n    width: ${props => (props.showBorders ? 50 : 0)}%;\r\n    height: ${borderThickness}px;\r\n    transition: all 1s ease-in-out;\r\n  }\r\n\r\n  & > *:nth-child(3) {\r\n    position: relative;\r\n  }\r\n  & > *:nth-child(3):after {\r\n    content: '';\r\n    background: ${primary};\r\n    position: absolute;\r\n    top: 25%;\r\n    right: -${singleBorderThickness}px;\r\n    height: ${props => (props.showBorders ? 50 : 0)}%;\r\n    width: ${borderThickness}px;\r\n    transition: all 1s ease-in-out;\r\n  }\r\n\r\n  & > *:nth-child(4) {\r\n    position: relative;\r\n  }\r\n`;\r\n\r\nconst Highlights = ({ longestRun, mostFrequentRun, biggestFan, totalRuns }) => {\r\n  const containerRef = useRef();\r\n  const hasElementEntered = useHasElementEntered(containerRef);\r\n  return (\r\n    <HighlightsContainer ref={containerRef} showBorders={hasElementEntered}>\r\n      <Highlight\r\n        url={`https://www.strava.com/activities/${longestRun.id}`}\r\n        renderTitle={() => (\r\n          <FormattedHTMLMessage\r\n            id=\"highlights.longestRunTitle\"\r\n            values={{\r\n              run: truncate(longestRun.name, {\r\n                separator: /,? +/,\r\n              }),\r\n            }}\r\n          />\r\n        )}\r\n        renderHighlight={() => (\r\n          <strong>\r\n            <FormattedMessage\r\n              id=\"highlights.longestRunHighlight\"\r\n              values={{ distance: (longestRun.distance / 1000).toPrecision(3) }}\r\n            />\r\n          </strong>\r\n        )}\r\n        renderSubtitle={() => (\r\n          <span>\r\n            <FormattedMessage id=\"highlights.longestRunSubtitle\" />\r\n            <FormattedDate\r\n              value={new Date(longestRun.date)}\r\n              day=\"2-digit\"\r\n              weekday=\"long\"\r\n              month=\"long\"\r\n              year=\"numeric\"\r\n            />\r\n          </span>\r\n        )}\r\n      />\r\n      <Highlight\r\n        url={`https://www.strava.com/activities/${mostFrequentRun.id}`}\r\n        renderTitle={() => (\r\n          <FormattedHTMLMessage\r\n            id=\"highlights.mostFrequentRunTitle\"\r\n            values={{\r\n              run: truncate(mostFrequentRun.name, {\r\n                separator: /,? +/,\r\n              }),\r\n            }}\r\n          />\r\n        )}\r\n        renderHighlight={() => (\r\n          <strong>\r\n            <FormattedMessage\r\n              id=\"highlights.mostFrequentRunHighlight\"\r\n              values={{ count: mostFrequentRun.count }}\r\n            />\r\n          </strong>\r\n        )}\r\n        renderSubtitle={() => (\r\n          <span>\r\n            <FormattedMessage id=\"highlights.mostFrequentRunSubtitle\" />\r\n            <FormattedDate\r\n              value={new Date(mostFrequentRun.date)}\r\n              day=\"2-digit\"\r\n              weekday=\"long\"\r\n              month=\"long\"\r\n              year=\"numeric\"\r\n            />\r\n          </span>\r\n        )}\r\n      />\r\n      <Highlight\r\n        url={`https://www.strava.com/athletes/${biggestFan.id}`}\r\n        renderTitle={() => (\r\n          <FormattedHTMLMessage\r\n            id=\"highlights.biggestFanTitle\"\r\n            values={{ fan: biggestFan.name }}\r\n          />\r\n        )}\r\n        renderHighlight={() => <img src={biggestFan.picture} alt=\"\" />}\r\n        renderSubtitle={() => (\r\n          <strong>\r\n            <FormattedMessage\r\n              id=\"highlights.biggestFanSubtitle\"\r\n              values={{ kudos: biggestFan.count }}\r\n            />\r\n          </strong>\r\n        )}\r\n      />\r\n      <Highlight\r\n        url={`https://www.strava.com/athletes/${totalRuns.athleteId}`}\r\n        renderTitle={() => <FormattedMessage id=\"highlights.totalRunsTitle\" />}\r\n        renderHighlight={() => (\r\n          <strong>\r\n            <FormattedMessage\r\n              id=\"highlights.totalRunsHighlight\"\r\n              values={{ runs: totalRuns.count }}\r\n            />\r\n          </strong>\r\n        )}\r\n        renderSubtitle={() => (\r\n          <FormattedMessage id=\"highlights.totalRunsSubtitle\" />\r\n        )}\r\n      />\r\n    </HighlightsContainer>\r\n  );\r\n};\r\n\r\nHighlights.propTypes = {\r\n  longestRun: PropTypes.shape({\r\n    id: PropTypes.number,\r\n    name: PropTypes.string,\r\n    date: PropTypes.string,\r\n    distance: PropTypes.number,\r\n  }).isRequired,\r\n  mostFrequentRun: PropTypes.shape({\r\n    id: PropTypes.number,\r\n    name: PropTypes.string,\r\n    date: PropTypes.string,\r\n    count: PropTypes.number,\r\n  }).isRequired,\r\n  biggestFan: PropTypes.shape({\r\n    id: PropTypes.number,\r\n    name: PropTypes.string,\r\n    picture: PropTypes.string,\r\n    count: PropTypes.number,\r\n  }).isRequired,\r\n  totalRuns: PropTypes.shape({\r\n    athleteId: PropTypes.number,\r\n    count: PropTypes.number,\r\n  }),\r\n};\r\n\r\nexport default Highlights;\r\n","import Highlights from './Highlights';\r\n\r\nexport default Highlights;\r\n","import { createContext } from 'react';\r\n\r\nexport default createContext({\r\n  type: '',\r\n  id: undefined,\r\n  setSelectedItem: () => undefined,\r\n});\r\n","import React, { useRef, useEffect, useContext } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport { maxBy, take, find } from 'lodash-es';\r\nimport { select } from 'd3-selection';\r\nimport { scaleLinear, scaleBand } from 'd3-scale';\r\nimport { axisBottom } from 'd3-axis';\r\nimport { easeQuadOut, easeQuadInOut } from 'd3-ease';\r\nimport 'd3-transition';\r\nimport { secondary, bgSecondary, active } from '../colors';\r\nimport useHasElementEntered from '../../hooks/useHasElementEntered';\r\nimport SelectedItemContext from '../../contexts/SelectedItemContext';\r\n\r\nconst Chart = styled.div`\r\n  & .x-axis text {\r\n    font-size: 16px;\r\n    text-anchor: middle;\r\n    font-family: Acme;\r\n  }\r\n\r\n  & .bar {\r\n    fill: ${secondary};\r\n\r\n    &:hover,\r\n    &--selected {\r\n      fill: ${active};\r\n    }\r\n  }\r\n\r\n  & .kudoser {\r\n    cursor: pointer;\r\n\r\n    & .label {\r\n      text-anchor: start;\r\n      font-size: 24px;\r\n      fill: white;\r\n      pointer-events: none;\r\n    }\r\n  }\r\n`;\r\n\r\nconst ChartTopKudosers = props => {\r\n  const { setSelectedItem, ...selectedItem } = useContext(SelectedItemContext);\r\n  const chart = useRef();\r\n  const hasElementEntered = useHasElementEntered(chart);\r\n  const xScaleRef = useRef();\r\n  const xAxisRef = useRef();\r\n  const yScaleRef = useRef();\r\n  const containerRef = useRef();\r\n  const xAxisContainerRef = useRef();\r\n  const kudosers = take(props.kudosers, 10);\r\n\r\n  // SVG creation (only run once)\r\n  useEffect(\r\n    () => {\r\n      const margin = { top: 10, right: 10, bottom: 30, left: 10 };\r\n      const width = 600 - margin.left - margin.right;\r\n      const height = 500 - margin.top - margin.bottom;\r\n\r\n      const svg = select(chart.current)\r\n        .append('svg')\r\n        .attr(\r\n          'viewBox',\r\n          `0 0 ${width + margin.left + margin.right} ${height +\r\n            margin.top +\r\n            margin.bottom}`\r\n        );\r\n\r\n      // background\r\n      svg\r\n        .append('rect')\r\n        .attr('fill', bgSecondary)\r\n        .attr('x', 0)\r\n        .attr('y', 0)\r\n        .attr('width', width + margin.left + margin.right)\r\n        .attr('height', height + margin.top + margin.bottom);\r\n\r\n      // main container\r\n      const container = svg\r\n        .append('g')\r\n        .attr('class', 'container')\r\n        .attr('transform', `translate(${margin.left}, ${margin.top})`);\r\n      containerRef.current = container;\r\n\r\n      // x-axis container\r\n      xAxisContainerRef.current = container\r\n        .append('g')\r\n        .attr('class', 'x-axis')\r\n        .attr('transform', `translate(0, ${height})`);\r\n\r\n      xScaleRef.current = scaleLinear().range([0, width]);\r\n      yScaleRef.current = scaleBand()\r\n        .padding(0.2)\r\n        .range([0, height]);\r\n      xAxisRef.current = axisBottom(xScaleRef.current);\r\n    },\r\n    [chart]\r\n  );\r\n\r\n  // SVG drawing and update\r\n  useEffect(\r\n    () => {\r\n      if (hasElementEntered) {\r\n        const xScale = xScaleRef.current;\r\n        const yScale = yScaleRef.current;\r\n        const xAxis = xAxisRef.current;\r\n        const container = containerRef.current;\r\n        const xAxisContainer = xAxisContainerRef.current;\r\n\r\n        // set domains\r\n        xScale.domain([\r\n          0,\r\n          maxBy(kudosers, ({ kudosCount }) => kudosCount).kudosCount,\r\n        ]);\r\n        yScale.domain(kudosers.map(d => d.id));\r\n\r\n        // update scales\r\n        xAxis.scale(xScale);\r\n        xAxisContainer.call(xAxis).selectAll('text');\r\n\r\n        const enter = container\r\n          .selectAll('rect')\r\n          .data(kudosers)\r\n          .enter();\r\n\r\n        const g = enter\r\n          .append('g')\r\n          .attr('class', 'kudoser')\r\n          .on('click', d =>\r\n            window.open(`https://www.strava.com/athletes/${d.id}`, '_blank')\r\n          )\r\n          .on('mouseover', ({ id }) => setSelectedItem({ type: 'KUDOSER', id }))\r\n          .on('mouseout', () => setSelectedItem());\r\n        g.append('rect')\r\n          .attr('class', 'bar')\r\n          .attr('y', d => yScale(d.id))\r\n          .attr('height', yScale.bandwidth())\r\n          .transition()\r\n          .duration(750)\r\n          .ease(easeQuadOut)\r\n          .attr('x', () => 0)\r\n          .attr('width', d => xScale(d.kudosCount));\r\n        const textContainer = g.append('g');\r\n        textContainer\r\n          .attr('opacity', 0)\r\n          .transition()\r\n          .duration(500)\r\n          .delay((d, i) => 750 + i * 50)\r\n          .ease(easeQuadInOut)\r\n          .attr('opacity', 1);\r\n        textContainer\r\n          .append('text')\r\n          .attr('class', 'label')\r\n          .attr('y', d => yScale(d.id) + 28)\r\n          .transition()\r\n          .duration(500)\r\n          .delay((d, i) => 750 + i * 50)\r\n          .ease(easeQuadInOut)\r\n          .attr('x', () => 5)\r\n          .text(d => `${d.firstname} ${d.lastname}`);\r\n      }\r\n    },\r\n    [kudosers, chart, hasElementEntered]\r\n  );\r\n\r\n  // selected item\r\n  useEffect(\r\n    () => {\r\n      if (hasElementEntered) {\r\n        const { id, type } = selectedItem;\r\n\r\n        let selectedKudoser;\r\n        switch (type) {\r\n          case 'KUDOSER':\r\n            selectedKudoser = find(kudosers, k => k.id === id);\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n        const container = containerRef.current;\r\n        const update = container\r\n          .selectAll('.bar')\r\n          .data(selectedKudoser ? [selectedKudoser] : [], d => d.id);\r\n        update.classed('bar--selected', true);\r\n        update.exit().classed('bar--selected', false);\r\n      }\r\n    },\r\n    [selectedItem, kudosers, hasElementEntered, chart]\r\n  );\r\n\r\n  return <Chart className=\"ChartTopKudosers\" ref={chart} />;\r\n};\r\n\r\nChartTopKudosers.propTypes = {\r\n  kudosers: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number,\r\n      firstname: PropTypes.string,\r\n      lastname: PropTypes.string,\r\n      kudosCount: PropTypes.number,\r\n    })\r\n  ),\r\n};\r\n\r\nChartTopKudosers.defaultProps = {\r\n  kudosers: [],\r\n};\r\n\r\nexport default ChartTopKudosers;\r\n","import ChartTopKudosers from './ChartTopKudosers';\r\n\r\nexport default ChartTopKudosers;\r\n","import React, { useContext } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport SelectedItemContext from '../../contexts/SelectedItemContext';\r\nimport { primary, secondary, active } from '../colors';\r\n\r\nconst OList = styled.ol``;\r\n\r\nconst UList = styled.ul``;\r\n\r\nconst ListItem = styled.li`\r\n  font-size: 24px;\r\n  line-height: 32px;\r\n`;\r\n\r\nconst Link = styled.a`\r\n  color: ${primary};\r\n  text-decoration: underline;\r\n\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    color: ${secondary};\r\n  }\r\n\r\n  &:active,\r\n  &.selected {\r\n    color: ${active};\r\n  }\r\n`;\r\n\r\nconst Text = styled.span`\r\n  &.selected {\r\n    color: ${active};\r\n  }\r\n`;\r\n\r\nconst ReferenceList = ({ items, ordered }) => {\r\n  const { setSelectedItem, ...selectedItem } = useContext(SelectedItemContext);\r\n  const ReferenceList = ordered ? OList : UList;\r\n  return (\r\n    <ReferenceList>\r\n      {items.map(({ label, onClick, id, type }, key) => {\r\n        const props = {\r\n          onMouseOver: () => setSelectedItem({ type, id }),\r\n          onMouseOut: () => setSelectedItem(),\r\n          className:\r\n            selectedItem.type === type && id === selectedItem.id\r\n              ? 'selected'\r\n              : '',\r\n        };\r\n        return (\r\n          <ListItem key={key}>\r\n            {onClick ? (\r\n              <Link {...props} onClick={onClick}>\r\n                {label}\r\n              </Link>\r\n            ) : (\r\n              <Text {...props}>{label}</Text>\r\n            )}\r\n          </ListItem>\r\n        );\r\n      })}\r\n    </ReferenceList>\r\n  );\r\n};\r\n\r\nReferenceList.propTypes = {\r\n  items: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      label: PropTypes.string,\r\n      onClick: PropTypes.func,\r\n      id: PropTypes.number,\r\n      type: PropTypes.string,\r\n    })\r\n  ),\r\n  ordered: PropTypes.bool,\r\n};\r\n\r\nReferenceList.defaultProps = {\r\n  items: [],\r\n  ordered: false,\r\n};\r\n\r\nexport default ReferenceList;\r\n","import ReferenceList from './ReferenceList';\r\n\r\nexport default ReferenceList;\r\n","import { axisBottom, axisLeft } from 'd3-axis';\r\nimport { easeQuadOut } from 'd3-ease';\r\nimport { scaleLinear, scaleQuantize, scaleTime } from 'd3-scale';\r\nimport { select } from 'd3-selection';\r\nimport { transition } from 'd3-transition';\r\nimport dateSubYears from 'date-fns/sub_years';\r\nimport { maxBy, minBy, random, find } from 'lodash-es';\r\nimport PropTypes from 'prop-types';\r\nimport React, { useEffect, useMemo, useRef, useContext } from 'react';\r\nimport styled from 'styled-components';\r\nimport { active, bgSecondary, primary, secondary } from '../colors';\r\nimport useHasElementEntered from '../../hooks/useHasElementEntered';\r\nimport SelectedItemContext from '../../contexts/SelectedItemContext';\r\n\r\nconst Chart = styled.div`\r\n  font-size: 16px;\r\n\r\n  & .x-axis,\r\n  & .y-axis {\r\n    fill: ${bgSecondary};\r\n\r\n    & text {\r\n      font-size: 16px;\r\n      font-family: Acme;\r\n    }\r\n  }\r\n\r\n  & .runs {\r\n    cursor: pointer;\r\n\r\n    & .circle {\r\n      fill: ${secondary};\r\n      stroke: ${primary};\r\n      stroke-width: 1;\r\n      position: relative;\r\n      z-index: 5;\r\n\r\n      &:hover,\r\n      &--selected {\r\n        fill: ${active};\r\n\r\n        + .text {\r\n          visibility: visible;\r\n        }\r\n      }\r\n    }\r\n\r\n    & .text {\r\n      font-family: sans-serif;\r\n      text-anchor: middle;\r\n      fill: ${primary};\r\n      position: relative;\r\n      z-index: 10;\r\n      pointer-events: none;\r\n      visibility: hidden;\r\n    }\r\n  }\r\n`;\r\n\r\nconst ChartRunsByFrequency = ({\r\n  matchingRunsBySegmentGroups,\r\n  matchingRunsByHighestBestEfforts,\r\n  matchingRunsBySegments,\r\n  showSegmentGroupRuns,\r\n  showSegmentRuns,\r\n  showBestEffortRuns,\r\n}) => {\r\n  const margin = { top: 60, right: 60, bottom: 60, left: 60 };\r\n  const width = 800 - margin.left - margin.right;\r\n  const height = 600 - margin.top - margin.bottom;\r\n  const { setSelectedItem, ...selectedItem } = useContext(SelectedItemContext);\r\n  const chart = useRef();\r\n  const hasElementEntered = useHasElementEntered(chart);\r\n  const xScaleRef = useRef();\r\n  const xAxisRef = useRef();\r\n  const yScaleRef = useRef();\r\n  const yAxisRef = useRef();\r\n  const radiusScaleRef = useRef();\r\n  const containerRef = useRef();\r\n  const xAxisContainerRef = useRef();\r\n  const yAxisContainerRef = useRef();\r\n  const runsBySegmentGroupsWithType = useMemo(\r\n    () =>\r\n      showSegmentGroupRuns\r\n        ? matchingRunsBySegmentGroups.map(r => ({\r\n            ...r,\r\n            type: 'SEGMENT_GROUP',\r\n          }))\r\n        : [],\r\n    [matchingRunsBySegmentGroups, showSegmentGroupRuns]\r\n  );\r\n  const runsByHighestBestEffortsWithType = useMemo(\r\n    () =>\r\n      showBestEffortRuns\r\n        ? matchingRunsByHighestBestEfforts.map(r => ({\r\n            ...r,\r\n            type: 'HIGHEST_BEST_EFFORT',\r\n          }))\r\n        : [],\r\n    [matchingRunsByHighestBestEfforts, showBestEffortRuns]\r\n  );\r\n  const runsBySegmentsWithType = useMemo(\r\n    () =>\r\n      showSegmentRuns\r\n        ? matchingRunsBySegments.map(r => ({ ...r, type: 'SEGMENT' }))\r\n        : [],\r\n    [matchingRunsBySegments, showSegmentRuns]\r\n  );\r\n  const allRuns = useMemo(\r\n    () => [\r\n      ...runsByHighestBestEffortsWithType,\r\n      ...runsBySegmentGroupsWithType,\r\n      ...runsBySegmentsWithType,\r\n    ],\r\n    [\r\n      matchingRunsByHighestBestEfforts,\r\n      matchingRunsBySegmentGroups,\r\n      matchingRunsBySegments,\r\n      showBestEffortRuns,\r\n      showSegmentGroupRuns,\r\n      showSegmentRuns,\r\n    ]\r\n  );\r\n\r\n  // SVG creation\r\n  useEffect(\r\n    () => {\r\n      const svg = select(chart.current)\r\n        .append('svg')\r\n        .attr(\r\n          'viewBox',\r\n          `0 0 ${width + margin.left + margin.right} ${height +\r\n            margin.top +\r\n            margin.bottom}`\r\n        );\r\n\r\n      // main container\r\n      const container = svg\r\n        .append('g')\r\n        .attr('class', 'container')\r\n        .attr('transform', `translate(${margin.left}, ${margin.top})`);\r\n      containerRef.current = container;\r\n\r\n      // x-axis container\r\n      xAxisContainerRef.current = container\r\n        .append('g')\r\n        .attr('class', 'x-axis')\r\n        .attr('transform', `translate(0, ${height})`);\r\n\r\n      // y-axis container\r\n      yAxisContainerRef.current = container.append('g').attr('class', 'y-axis');\r\n\r\n      xScaleRef.current = scaleTime().range([0, width]);\r\n      yScaleRef.current = scaleLinear().range([0, height]);\r\n      radiusScaleRef.current = scaleQuantize().range([5, 10, 20, 30, 50]);\r\n      xAxisRef.current = axisBottom(xScaleRef.current);\r\n      yAxisRef.current = axisLeft(yAxisRef.current).ticks(10, '~s');\r\n    },\r\n    [chart]\r\n  );\r\n\r\n  // SVG drawing and updating\r\n  useEffect(\r\n    () => {\r\n      if (hasElementEntered) {\r\n        const xScale = xScaleRef.current;\r\n        const yScale = yScaleRef.current;\r\n        const radiusScale = radiusScaleRef.current;\r\n        const xAxis = xAxisRef.current;\r\n        const yAxis = yAxisRef.current;\r\n        const container = containerRef.current;\r\n        const xAxisContainer = xAxisContainerRef.current;\r\n        const yAxisContainer = yAxisContainerRef.current;\r\n\r\n        if (allRuns.length === 0) {\r\n          const now = Date.now();\r\n          xScale.domain([dateSubYears(now, 1), now]);\r\n          yScale.domain([21097, 0]);\r\n          radiusScale.domain([0, 5]);\r\n        } else {\r\n          xScale.domain([\r\n            minBy(allRuns, ({ date }) => date).date,\r\n            maxBy(allRuns, ({ date }) => date).date,\r\n          ]);\r\n          yScale.domain([\r\n            maxBy(allRuns, ({ distance }) => distance).distance,\r\n            0,\r\n          ]);\r\n          radiusScale.domain([0, maxBy(allRuns, ({ count }) => count).count]);\r\n        }\r\n\r\n        const axisTransition = transition()\r\n          .duration(750)\r\n          .ease(easeQuadOut);\r\n\r\n        xAxis.scale(xScale);\r\n        yAxis.scale(yScale);\r\n\r\n        xAxisContainer.transition(axisTransition).call(xAxis);\r\n\r\n        yAxisContainer.transition(axisTransition).call(yAxis);\r\n\r\n        const update = container.selectAll('g.runs').data(allRuns, d => d.id);\r\n        const enter = update.enter();\r\n        const exit = update.exit();\r\n\r\n        // fade away exit selection\r\n        const t = transition().duration(250);\r\n        exit\r\n          .select('circle')\r\n          .transition(t)\r\n          .attr('r', 0);\r\n        exit\r\n          .transition(t)\r\n          .attr('opacity', 0)\r\n          .remove();\r\n\r\n        // resize update selection\r\n        update\r\n          .select('circle')\r\n          .transition(t)\r\n          .attr('r', d => radiusScale(d.count));\r\n\r\n        // enter selection\r\n        const g = enter\r\n          .append('g')\r\n          .attr('opacity', 1)\r\n          .attr('class', 'runs')\r\n          .on('click', d => {\r\n            switch (d.type) {\r\n              case 'HIGHEST_BEST_EFFORT':\r\n                window.open(`/BestEffort/${d.id}`, '_self');\r\n                break;\r\n              case 'SEGMENT_GROUP':\r\n                window.open(`/SegmentGroup/${d.id}`, '_self');\r\n                break;\r\n              case 'SEGMENT':\r\n                window.open(`/Segment/${d.id}`, '_self');\r\n                break;\r\n              default:\r\n                break;\r\n            }\r\n          })\r\n          .on('mouseover', setSelectedItem)\r\n          .on('mouseout', () => setSelectedItem());\r\n        g.append('circle')\r\n          .attr('class', 'circle')\r\n          .attr('r', 0)\r\n          .attr('cx', d => xScale(d.date))\r\n          .attr('cy', d => yScale(d.distance))\r\n          .transition(t)\r\n          .delay(() => random(750))\r\n          .attr('r', d => radiusScale(d.count));\r\n        g.append('text')\r\n          .attr('class', 'text')\r\n          .attr('x', d => xScale(d.date))\r\n          .attr('y', d => yScale(d.distance))\r\n          .text(d => d.label);\r\n      }\r\n    },\r\n    [allRuns, chart, hasElementEntered]\r\n  );\r\n\r\n  // selected item\r\n  useEffect(\r\n    () => {\r\n      if (hasElementEntered) {\r\n        const yScale = yScaleRef.current;\r\n        const radiusScale = radiusScaleRef.current;\r\n        const container = containerRef.current;\r\n\r\n        const { type, id } = selectedItem;\r\n        let runsToScan = [];\r\n        switch (type) {\r\n          case 'HIGHEST_BEST_EFFORT':\r\n            runsToScan = runsByHighestBestEffortsWithType;\r\n            break;\r\n          case 'SEGMENT_GROUP':\r\n            runsToScan = runsBySegmentGroupsWithType;\r\n            break;\r\n          case 'SEGMENT':\r\n            runsToScan = runsBySegmentsWithType;\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n        const selectedRun = find(runsToScan, run => run.id === id);\r\n        const t = transition().duration(250);\r\n        const update = container\r\n          .selectAll('g.runs')\r\n          .data(selectedRun ? [selectedRun] : [], d => d.id);\r\n        update.select('.circle').classed('circle--selected', true);\r\n        update\r\n          .select('.text')\r\n          .transition(t)\r\n          .attr('y', d => yScale(d.distance) - radiusScale(d.count) - 5);\r\n\r\n        const exit = update.exit();\r\n        exit.select('.circle').classed('circle--selected', false);\r\n        exit.select('.text').attr('y', d => yScale(d.distance));\r\n      }\r\n    },\r\n    [allRuns, chart, hasElementEntered, selectedItem]\r\n  );\r\n\r\n  return <Chart className=\"ChartRunsByFrequency\" ref={chart} />;\r\n};\r\n\r\nChartRunsByFrequency.defaultProps = {\r\n  matchingRunsPerSegmentGroups: [],\r\n  matchingRunsByHighestBestEfforts: [],\r\n  matchingRunsPerSegments: [],\r\n  showBestEffortRuns: false,\r\n  showSegmentGroupRuns: false,\r\n  showSegmentRuns: false,\r\n};\r\n\r\nChartRunsByFrequency.propTypes = {\r\n  matchingRunsBySegmentGroups: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number,\r\n      count: PropTypes.number,\r\n      label: PropTypes.string,\r\n      distance: PropTypes.number,\r\n      date: PropTypes.instanceOf(Date),\r\n    })\r\n  ),\r\n  matchingRunsByHighestBestEfforts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number,\r\n      count: PropTypes.number,\r\n      label: PropTypes.string,\r\n      distance: PropTypes.number,\r\n      date: PropTypes.instanceOf(Date),\r\n    })\r\n  ),\r\n  matchingRunsBySegments: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number,\r\n      count: PropTypes.number,\r\n      label: PropTypes.string,\r\n      distance: PropTypes.number,\r\n      date: PropTypes.instanceOf(Date),\r\n    })\r\n  ),\r\n  showBestEffortRuns: PropTypes.bool,\r\n  showSegmentGroupRuns: PropTypes.bool,\r\n  showSegmentRuns: PropTypes.bool,\r\n};\r\n\r\nexport default ChartRunsByFrequency;\r\n","import ChartRunsByFrequency from './ChartRunsByFrequency';\r\n\r\nexport default ChartRunsByFrequency;\r\n","import {\r\n  values,\r\n  mapValues,\r\n  find,\r\n  maxBy,\r\n  pickBy,\r\n  isEmpty,\r\n  head,\r\n  last,\r\n  orderBy,\r\n  truncate,\r\n} from 'lodash-es';\r\nimport React, { useMemo } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport Highlights from '../Highlights';\r\nimport ChartTopKudosers from '../ChartTopKudosers';\r\nimport ReferenceList from '../ReferenceList';\r\nimport ChartRunsByFrequency from '../ChartRunsByFrequency';\r\n\r\nconst Section = styled.section`\r\n  margin: 50px 20px;\r\n  position: relative;\r\n  display: flex;\r\n`;\r\n\r\nconst SectionTitle = styled.h2`\r\n  font-size: 48px;\r\n  text-align: center;\r\n`;\r\n\r\nconst SectionGraph = styled.div`\r\n  flex: 2;\r\n  max-height: 600px;\r\n`;\r\n\r\nconst SectionList = styled.div`\r\n  flex: 1;\r\n`;\r\n\r\nexport const Summary = props => {\r\n  const {\r\n    athleteId,\r\n    longestRun,\r\n    biggestFan,\r\n    totalRuns,\r\n    topKudosers,\r\n    matchingRunsBySegmentGroups,\r\n    matchingRunsByHighestBestEfforts,\r\n    matchingRunsBySegments,\r\n    history,\r\n  } = props;\r\n  const chartDataForSegmentGroups = useMemo(\r\n    () =>\r\n      values(\r\n        mapValues(matchingRunsBySegmentGroups, (v, k) => {\r\n          const { distance } = maxBy(v, a => a.distance);\r\n          const { name, id } = head(v);\r\n\r\n          return {\r\n            id,\r\n            count: v.length,\r\n            label: name,\r\n            distance: distance,\r\n            date: new Date(maxBy(v, a => a.start_date).start_date),\r\n          };\r\n        })\r\n      ),\r\n    [matchingRunsBySegmentGroups]\r\n  );\r\n  const chartDataForSegments = useMemo(\r\n    () =>\r\n      values(\r\n        mapValues(matchingRunsBySegments, (v, k) => {\r\n          const { name, distance, id } = find(\r\n            v[0].segment_efforts,\r\n            segE => segE.segment.id.toString() === k\r\n          ).segment;\r\n\r\n          return {\r\n            id,\r\n            count: v.length,\r\n            label: name,\r\n            distance: distance,\r\n            date: new Date(maxBy(v, a => a.start_date).start_date),\r\n          };\r\n        })\r\n      ),\r\n    [matchingRunsBySegments]\r\n  );\r\n  const chartDataForBestEfforts = useMemo(\r\n    () =>\r\n      values(\r\n        mapValues(\r\n          pickBy(matchingRunsByHighestBestEfforts, v => !isEmpty(v)),\r\n          (v, k) => {\r\n            const { name, distance } = find(\r\n              v[0].best_efforts,\r\n              be => be.distance.toString() === k\r\n            );\r\n            return {\r\n              id: distance,\r\n              count: v.length,\r\n              label: name,\r\n              distance: distance,\r\n              date: new Date(maxBy(v, a => a.start_date).start_date),\r\n            };\r\n          }\r\n        )\r\n      ),\r\n    [matchingRunsByHighestBestEfforts]\r\n  );\r\n  const [mostFrequentRun, mostFrequentCount] = useMemo(\r\n    () => {\r\n      const mostFrequentRuns = maxBy(\r\n        values(matchingRunsBySegmentGroups),\r\n        v => v.length\r\n      );\r\n      return [last(mostFrequentRuns), mostFrequentRuns.length];\r\n    },\r\n    [matchingRunsBySegmentGroups]\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <Highlights\r\n        longestRun={{\r\n          id: longestRun.id,\r\n          name: longestRun.name,\r\n          distance: longestRun.distance,\r\n          date: longestRun.start_date,\r\n        }}\r\n        mostFrequentRun={{\r\n          id: mostFrequentRun.id,\r\n          name: mostFrequentRun.name,\r\n          count: mostFrequentCount,\r\n          date: new Date(mostFrequentRun.start_date).toISOString(),\r\n        }}\r\n        biggestFan={{\r\n          id: biggestFan.id,\r\n          name: `${biggestFan.firstname} ${biggestFan.lastname}`,\r\n          count: biggestFan.kudosCount,\r\n          picture: biggestFan.profile,\r\n        }}\r\n        totalRuns={{ athleteId, count: totalRuns.count }}\r\n      />\r\n      <SectionTitle>\r\n        <FormattedMessage id=\"summary.mostFrequentRunsTitle\" />\r\n      </SectionTitle>\r\n      <Section>\r\n        <SectionGraph>\r\n          <ChartRunsByFrequency\r\n            matchingRunsBySegmentGroups={chartDataForSegmentGroups}\r\n            matchingRunsByHighestBestEfforts={chartDataForBestEfforts}\r\n            matchingRunsBySegments={chartDataForSegments}\r\n            showBestEffortRuns\r\n            showSegmentGroupRuns\r\n          />\r\n        </SectionGraph>\r\n        <SectionList>\r\n          <ReferenceList\r\n            ordered\r\n            items={orderBy(\r\n              [\r\n                ...chartDataForSegmentGroups.map(v => ({\r\n                  ...v,\r\n                  type: 'SEGMENT_GROUP',\r\n                  onClick: () => history.push(`/SegmentGroup/${v.id}`),\r\n                })),\r\n                ...chartDataForBestEfforts.map(v => ({\r\n                  ...v,\r\n                  type: 'HIGHEST_BEST_EFFORT',\r\n                  onClick: () => history.push(`/HighestBestEffort/${v.id}`),\r\n                })),\r\n              ],\r\n              'count',\r\n              'desc'\r\n            ).map(({ label, count, id, type, onClick }) => ({\r\n              onClick,\r\n              label: `${truncate(label, {\r\n                separator: /,? +/,\r\n              })} (${count})`,\r\n              id,\r\n              type,\r\n            }))}\r\n          />\r\n        </SectionList>\r\n      </Section>\r\n      <SectionTitle>\r\n        <FormattedMessage id=\"summary.topKudosersTitle\" />\r\n      </SectionTitle>\r\n      <Section>\r\n        <SectionGraph>\r\n          <ChartTopKudosers kudosers={topKudosers} />\r\n        </SectionGraph>\r\n        <SectionList>\r\n          <ReferenceList\r\n            ordered\r\n            items={topKudosers.map(\r\n              ({ id, kudosCount, firstname, lastname }) => ({\r\n                onClick: () =>\r\n                  window.open(\r\n                    `https://www.strava.com/athletes/${id}`,\r\n                    '_blank'\r\n                  ),\r\n                label: `${firstname} ${lastname} (${kudosCount})`,\r\n                id,\r\n                type: 'KUDOSER',\r\n              })\r\n            )}\r\n          />\r\n        </SectionList>\r\n      </Section>\r\n    </div>\r\n  );\r\n};\r\n\r\nSummary.propTypes = {\r\n  athleteId: PropTypes.number,\r\n  longestRun: PropTypes.shape({\r\n    id: PropTypes.number,\r\n    name: PropTypes.string,\r\n    distance: PropTypes.number,\r\n    start_date: PropTypes.string,\r\n  }),\r\n  biggestFan: PropTypes.shape({\r\n    id: PropTypes.number,\r\n    kudosCount: PropTypes.number,\r\n    firstname: PropTypes.string,\r\n    lastname: PropTypes.string,\r\n    profile: PropTypes.string,\r\n  }),\r\n  totalRuns: PropTypes.shape({\r\n    count: PropTypes.number,\r\n  }),\r\n  topKudosers: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number,\r\n      kudosCount: PropTypes.number,\r\n      firstname: PropTypes.string,\r\n      lastname: PropTypes.string,\r\n    })\r\n  ),\r\n  matchingRunsBySegmentGroups: PropTypes.objectOf(\r\n    PropTypes.arrayOf(\r\n      PropTypes.shape({\r\n        id: PropTypes.number,\r\n        distance: PropTypes.number,\r\n        name: PropTypes.string,\r\n        start_date: PropTypes.string,\r\n      })\r\n    )\r\n  ),\r\n  matchingRunsByBestEfforts: PropTypes.objectOf(\r\n    PropTypes.arrayOf(\r\n      PropTypes.shape({\r\n        id: PropTypes.number,\r\n        distance: PropTypes.number,\r\n        name: PropTypes.string,\r\n        start_date: PropTypes.string,\r\n      })\r\n    )\r\n  ),\r\n  matchingRunsByHighestBestEfforts: PropTypes.objectOf(\r\n    PropTypes.arrayOf(\r\n      PropTypes.shape({\r\n        id: PropTypes.number,\r\n        distance: PropTypes.number,\r\n        name: PropTypes.string,\r\n        start_date: PropTypes.string,\r\n      })\r\n    )\r\n  ),\r\n  matchingRunsBySegments: PropTypes.objectOf(\r\n    PropTypes.arrayOf(\r\n      PropTypes.shape({\r\n        id: PropTypes.number,\r\n        distance: PropTypes.number,\r\n        name: PropTypes.string,\r\n        start_date: PropTypes.string,\r\n      })\r\n    )\r\n  ),\r\n  history: PropTypes.shape({\r\n    push: PropTypes.func,\r\n  }),\r\n};\r\n\r\nSummary.defaultProps = {\r\n  longestRun: undefined,\r\n  biggestFan: undefined,\r\n  totalRuns: undefined,\r\n  topKudosers: [],\r\n  matchingRunsBySegmentGroups: {},\r\n  matchingRunsByBestEfforts: {},\r\n  matchingRunsByHighestBestEfforts: {},\r\n  matchingRunsBySegments: {},\r\n  history: {\r\n    push: () => undefined,\r\n  },\r\n};\r\n\r\nexport default Summary;\r\n","import Summary from './Summary';\r\n\r\nexport default Summary;\r\n","import { axisBottom, axisLeft } from 'd3-axis';\r\nimport { easeLinear, easeQuadOut } from 'd3-ease';\r\nimport { scaleLinear } from 'd3-scale';\r\nimport { select } from 'd3-selection';\r\nimport { curveCardinal, line, area } from 'd3-shape';\r\nimport { transition } from 'd3-transition';\r\nimport dateAddHours from 'date-fns/add_hours';\r\nimport { find, maxBy, random, sumBy, take } from 'lodash-es';\r\nimport PropTypes from 'prop-types';\r\nimport React, { useContext, useEffect, useMemo, useRef } from 'react';\r\nimport styled from 'styled-components';\r\nimport SelectedItemContext from '../../contexts/SelectedItemContext';\r\nimport useHasElementEntered from '../../hooks/useHasElementEntered';\r\nimport { bgSecondary, secondary, active } from '../colors';\r\n\r\nconst Chart = styled.div`\r\n  font-size: 16px;\r\n\r\n  & .x-axis,\r\n  & .y-axis {\r\n    fill: ${bgSecondary};\r\n\r\n    & text {\r\n      font-size: 16px;\r\n      font-family: Acme;\r\n    }\r\n  }\r\n`;\r\n\r\nconst ChartDistanceComparison = ({ runs }) => {\r\n  const margin = { top: 60, right: 60, bottom: 60, left: 60 };\r\n  const width = 800 - margin.left - margin.right;\r\n  const height = 600 - margin.top - margin.bottom;\r\n  const { setSelectedItem, ...selectedItem } = useContext(SelectedItemContext);\r\n  const chart = useRef();\r\n  const hasElementEntered = useHasElementEntered(chart);\r\n  const xScaleRef = useRef();\r\n  const xAxisRef = useRef();\r\n  const yScaleRef = useRef();\r\n  const yAxisRef = useRef();\r\n  const containerRef = useRef();\r\n  const xAxisContainerRef = useRef();\r\n  const yAxisContainerRef = useRef();\r\n  const runsWithColors = useMemo(() =>\r\n    runs.map(\r\n      r => ({\r\n        ...r,\r\n        color: `rgb(${random(64)}, ${random(64)}, ${random(128)})`,\r\n      }),\r\n      [runs]\r\n    )\r\n  );\r\n\r\n  const getTotalTime = r => sumBy(r, ({ time }) => time);\r\n  const getTotalDistance = r => sumBy(r, ({ distance }) => distance);\r\n\r\n  // SVG creation\r\n  useEffect(\r\n    () => {\r\n      const svg = select(chart.current)\r\n        .append('svg')\r\n        .attr(\r\n          'viewBox',\r\n          `0 0 ${width + margin.left + margin.right} ${height +\r\n            margin.top +\r\n            margin.bottom}`\r\n        );\r\n\r\n      // gradient defs\r\n      const areaGradient = svg\r\n        .append('defs')\r\n        .append('linearGradient')\r\n        .attr('id', 'areaGradient');\r\n      areaGradient\r\n        .append('stop')\r\n        .attr('offset', '0%')\r\n        .attr('stop-color', bgSecondary);\r\n      areaGradient\r\n        .append('stop')\r\n        .attr('offset', '100%')\r\n        .attr('stop-color', active);\r\n\r\n      // main container\r\n      const container = svg\r\n        .append('g')\r\n        .attr('class', 'container')\r\n        .attr('transform', `translate(${margin.left}, ${margin.top})`);\r\n      containerRef.current = container;\r\n\r\n      // x-axis container\r\n      xAxisContainerRef.current = container\r\n        .append('g')\r\n        .attr('class', 'x-axis')\r\n        .attr('transform', `translate(0, ${height})`);\r\n\r\n      // y-axis container\r\n      yAxisContainerRef.current = container.append('g').attr('class', 'y-axis');\r\n\r\n      xScaleRef.current = scaleLinear().range([0, width]);\r\n      yScaleRef.current = scaleLinear().range([0, height]);\r\n      xAxisRef.current = axisBottom(xScaleRef.current);\r\n      yAxisRef.current = axisLeft(yAxisRef.current);\r\n    },\r\n    [chart]\r\n  );\r\n\r\n  // SVG drawing and updating\r\n  useEffect(\r\n    () => {\r\n      if (hasElementEntered) {\r\n        const xScale = xScaleRef.current;\r\n        const yScale = yScaleRef.current;\r\n        const xAxis = xAxisRef.current;\r\n        const yAxis = yAxisRef.current;\r\n        const container = containerRef.current;\r\n        const xAxisContainer = xAxisContainerRef.current;\r\n        const yAxisContainer = yAxisContainerRef.current;\r\n\r\n        if (Object.keys(runs).length === 0) {\r\n          xScale.domain([0, dateAddHours(new Date(0), 1).getTime()]);\r\n          yScale.domain([21097, 0]);\r\n        } else {\r\n          xScale.domain([\r\n            0,\r\n            getTotalTime(maxBy(runs.map(({ splits }) => splits), getTotalTime)),\r\n          ]);\r\n          yScale.domain([\r\n            getTotalDistance(\r\n              maxBy(runs.map(({ splits }) => splits), getTotalDistance)\r\n            ),\r\n            0,\r\n          ]);\r\n        }\r\n\r\n        const axisTransition = transition()\r\n          .duration(750)\r\n          .ease(easeQuadOut);\r\n\r\n        xAxis.scale(xScale);\r\n        yAxis.scale(yScale);\r\n\r\n        xAxisContainer.transition(axisTransition).call(xAxis);\r\n        yAxisContainer.transition(axisTransition).call(yAxis);\r\n\r\n        const lineFn = line()\r\n          .x(d => xScale(d.time))\r\n          .y(d => yScale(d.distance))\r\n          .curve(curveCardinal);\r\n\r\n        const update = container\r\n          .selectAll('g.runs')\r\n          .data(runsWithColors, d => d.id);\r\n        const enter = update.enter();\r\n        const exit = update.exit();\r\n\r\n        // enter selection\r\n        enter\r\n          .append('path')\r\n          .attr('class', 'line')\r\n          .attr('d', d =>\r\n            lineFn([\r\n              {\r\n                speed: 0,\r\n                distance: 0,\r\n                time: 0,\r\n              },\r\n              ...d.splits.map((split, i) =>\r\n                take(d.splits, i + 1).reduce((acc, cur) => ({\r\n                  ...acc,\r\n                  time: acc.time + cur.time,\r\n                  distance: acc.distance + cur.distance,\r\n                }))\r\n              ),\r\n            ])\r\n          )\r\n          .attr('stroke', d => d.color)\r\n          .attr('stroke-width', 2)\r\n          .attr('fill', 'none')\r\n          .attr('stroke-dasharray', function() {\r\n            const totalLength = this.getTotalLength();\r\n            return totalLength + ' ' + totalLength;\r\n          })\r\n          .attr('stroke-dashoffset', function() {\r\n            return this.getTotalLength();\r\n          })\r\n          .on('mouseover', d => setSelectedItem(d))\r\n          .on('mouseout', () => setSelectedItem())\r\n          .transition()\r\n          .duration(10000)\r\n          .ease(easeLinear)\r\n          .attr('stroke-dashoffset', 0);\r\n\r\n        // exit selection\r\n        exit.remove();\r\n      }\r\n    },\r\n    [runs, chart, hasElementEntered]\r\n  );\r\n\r\n  // selected item\r\n  useEffect(\r\n    () => {\r\n      if (hasElementEntered) {\r\n        const xScale = xScaleRef.current;\r\n        const yScale = yScaleRef.current;\r\n        const container = containerRef.current;\r\n\r\n        const { type, id } = selectedItem;\r\n        const selectedRun = find(\r\n          runs,\r\n          run => run.id === id && run.type === type\r\n        );\r\n        if (selectedRun) {\r\n          // stroke colors\r\n          const update = container\r\n            .selectAll('.line')\r\n            .data([selectedRun], d => d.id);\r\n          update.attr('stroke', 'white');\r\n          const exit = update.exit();\r\n          exit.attr('stroke', 'black');\r\n\r\n          // km areas\r\n          const areaFn = area()\r\n            .x(d => xScale(d.time))\r\n            .y1(0)\r\n            .y0(yScale(0));\r\n\r\n          let data = [\r\n            {\r\n              speed: 0,\r\n              distance: 0,\r\n              time: 0,\r\n            },\r\n            ...selectedRun.splits.map((split, i) =>\r\n              take(selectedRun.splits, i + 1).reduce((acc, cur) => ({\r\n                ...acc,\r\n                time: acc.time + cur.time,\r\n                distance: acc.distance + cur.distance,\r\n              }))\r\n            ),\r\n          ];\r\n\r\n          data = data\r\n            .map((split, i) => {\r\n              if (data[i + 1]) {\r\n                return [split, data[i + 1]];\r\n              }\r\n              return undefined;\r\n            })\r\n            .filter(v => v);\r\n          const enter = container\r\n            .selectAll('.area')\r\n            .data(data)\r\n            .enter();\r\n          const g = enter\r\n            .append('g')\r\n            .attr('class', 'area')\r\n            .attr('opacity', 0);\r\n          g.transition()\r\n            .duration(250)\r\n            .attr('opacity', 0.2);\r\n          g.append('path')\r\n            .attr('d', d => areaFn(d))\r\n            .attr('fill', 'url(#areaGradient)')\r\n            .attr('stroke', secondary);\r\n        } else {\r\n          container\r\n            .selectAll('.line')\r\n            .data(runsWithColors, d => d.id)\r\n            .attr('stroke', d => d.color);\r\n          container.selectAll('.area').remove();\r\n        }\r\n      }\r\n    },\r\n    [runs, chart, hasElementEntered, selectedItem]\r\n  );\r\n\r\n  return <Chart className=\"ChartEvolutionOverTime\" ref={chart} />;\r\n};\r\n\r\nChartDistanceComparison.defaultProps = {\r\n  runs: [],\r\n};\r\n\r\nChartDistanceComparison.propTypes = {\r\n  runs: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number,\r\n      type: PropTypes.string,\r\n      splits: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n          // speed in mps\r\n          speed: PropTypes.number,\r\n          // distance in m\r\n          distance: PropTypes.number,\r\n          // time in s\r\n          time: PropTypes.number,\r\n        })\r\n      ),\r\n    })\r\n  ),\r\n};\r\n\r\nexport default ChartDistanceComparison;\r\n","import ChartDistanceComparison from './ChartEvolutionOverTime';\r\n\r\nexport default ChartDistanceComparison;\r\n","import { axisLeft } from 'd3-axis';\r\nimport { easeQuadOut } from 'd3-ease';\r\nimport { scaleBand, scaleLinear } from 'd3-scale';\r\nimport { select } from 'd3-selection';\r\nimport { transition } from 'd3-transition';\r\nimport { find, maxBy } from 'lodash-es';\r\nimport PropTypes from 'prop-types';\r\nimport React, { useContext, useEffect, useRef } from 'react';\r\nimport { injectIntl } from 'react-intl';\r\nimport styled from 'styled-components';\r\nimport SelectedItemContext from '../../contexts/SelectedItemContext';\r\nimport useHasElementEntered from '../../hooks/useHasElementEntered';\r\nimport { active, primary, bgSecondary, secondary } from '../colors';\r\n\r\nconst Chart = styled.div`\r\n  font-size: 16px;\r\n\r\n  & .x-axis,\r\n  & .y-axis {\r\n    fill: ${bgSecondary};\r\n\r\n    & text {\r\n      font-size: 16px;\r\n      font-family: Acme;\r\n    }\r\n  }\r\n\r\n  & .bar {\r\n    rect {\r\n      fill: ${secondary};\r\n    }\r\n\r\n    text {\r\n      fill: white;\r\n\r\n      &.bar-label {\r\n        fill: ${primary};\r\n        opacity: 0;\r\n        text-anchor: middle;\r\n      }\r\n    }\r\n\r\n    &--selected,\r\n    &:hover,\r\n    &:focus {\r\n      rect {\r\n        fill: ${active};\r\n      }\r\n\r\n      text.bar-label {\r\n        opacity: 1;\r\n      }\r\n    }\r\n  }\r\n\r\n  & .bar-label {\r\n  }\r\n`;\r\n\r\nconst ChartDistanceComparison = ({ runs, intl }) => {\r\n  const margin = { top: 60, right: 60, bottom: 60, left: 60 };\r\n  const width = 800 - margin.left - margin.right;\r\n  const height = 600 - margin.top - margin.bottom;\r\n  const { setSelectedItem, ...selectedItem } = useContext(SelectedItemContext);\r\n  const chart = useRef();\r\n  const hasElementEntered = useHasElementEntered(chart);\r\n  const xScaleRef = useRef();\r\n  const yScaleRef = useRef();\r\n  const yAxisRef = useRef();\r\n  const containerRef = useRef();\r\n  const yAxisContainerRef = useRef();\r\n\r\n  // SVG creation\r\n  useEffect(\r\n    () => {\r\n      const svg = select(chart.current)\r\n        .append('svg')\r\n        .attr(\r\n          'viewBox',\r\n          `0 0 ${width + margin.left + margin.right} ${height +\r\n            margin.top +\r\n            margin.bottom}`\r\n        );\r\n\r\n      // background\r\n      // svg\r\n      //   .append('rect')\r\n      //   .attr('fill', bgSecondary)\r\n      //   .attr('x', 0)\r\n      //   .attr('y', 0)\r\n      //   .attr('width', width + margin.left + margin.right)\r\n      //   .attr('height', height + margin.top + margin.bottom);\r\n\r\n      // main container\r\n      const container = svg\r\n        .append('g')\r\n        .attr('class', 'container')\r\n        .attr('transform', `translate(${margin.left}, ${margin.top})`);\r\n      containerRef.current = container;\r\n\r\n      // y-axis container\r\n      yAxisContainerRef.current = container.append('g').attr('class', 'y-axis');\r\n\r\n      xScaleRef.current = scaleBand()\r\n        .padding(0.2)\r\n        .range([0, width]);\r\n      yScaleRef.current = scaleLinear().range([height, 0]);\r\n      yAxisRef.current = axisLeft(yAxisRef.current).ticks(10, '~s');\r\n    },\r\n    [chart]\r\n  );\r\n\r\n  // SVG drawing and updating\r\n  useEffect(\r\n    () => {\r\n      if (hasElementEntered) {\r\n        const xScale = xScaleRef.current;\r\n        const yScale = yScaleRef.current;\r\n        const yAxis = yAxisRef.current;\r\n        const container = containerRef.current;\r\n        const yAxisContainer = yAxisContainerRef.current;\r\n\r\n        if (Object.keys(runs).length === 0) {\r\n          xScale.domain([]);\r\n          yScale.domain([21097, 0]);\r\n        } else {\r\n          xScale.domain(runs.map(r => r.id));\r\n          yScale.domain([0, maxBy(runs, r => r.distance).distance]);\r\n        }\r\n\r\n        const axisTransition = transition()\r\n          .duration(750)\r\n          .ease(easeQuadOut);\r\n\r\n        yAxis.scale(yScale);\r\n\r\n        yAxisContainer.transition(axisTransition).call(yAxis);\r\n\r\n        const update = container.selectAll('g.bar').data(runs, d => d.id);\r\n        const enter = update.enter();\r\n\r\n        // enter selection\r\n        const g = enter.append('g').attr('class', 'bar');\r\n        g.append('rect')\r\n          .attr('x', d => xScale(d.id))\r\n          .attr('y', d => height - yScale(d.distance))\r\n          .attr('width', () => xScale.bandwidth())\r\n          .on('mouseover', setSelectedItem)\r\n          .on('mouseout', () => setSelectedItem())\r\n          .transition()\r\n          .duration(750)\r\n          .ease(easeQuadOut)\r\n          .attr('y', d => yScale(d.distance))\r\n          .attr('height', d => height - yScale(d.distance));\r\n        g.append('text')\r\n          .attr('class', 'bar-label')\r\n          .attr('x', d => xScale(d.id) + xScale.bandwidth() / 2)\r\n          .attr('y', d => height + 20)\r\n          .text(d => d.name);\r\n        g.append('text')\r\n          .attr('x', d => xScale(d.id) + xScale.bandwidth() - 5)\r\n          .attr('y', d => height)\r\n          .attr(\r\n            'transform',\r\n            d =>\r\n              `rotate(-90, ${xScale(d.id) + xScale.bandwidth() - 5}, ${height})`\r\n          )\r\n          .text(\r\n            d =>\r\n              `${d.distance} ${intl.formatMessage({\r\n                id: 'chartDistanceComparison.meters',\r\n              })}`\r\n          );\r\n      }\r\n    },\r\n    [runs, chart, hasElementEntered]\r\n  );\r\n\r\n  // selected item\r\n  useEffect(\r\n    () => {\r\n      if (hasElementEntered) {\r\n        const container = containerRef.current;\r\n        const { type, id } = selectedItem;\r\n        const selectedRun = find(\r\n          runs,\r\n          run => run.id === id && run.type === type\r\n        );\r\n        // stroke colors\r\n        const update = container\r\n          .selectAll('.bar')\r\n          .data(selectedRun ? [selectedRun] : [], d => d.id);\r\n        update.classed('bar--selected', true);\r\n        const exit = update.exit();\r\n        exit.classed('bar--selected', false);\r\n      }\r\n    },\r\n    [runs, chart, hasElementEntered, selectedItem]\r\n  );\r\n\r\n  return <Chart className=\"ChartDistanceComparison\" ref={chart} />;\r\n};\r\n\r\nChartDistanceComparison.defaultProps = {\r\n  runs: [],\r\n};\r\n\r\nChartDistanceComparison.propTypes = {\r\n  runs: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number,\r\n      name: PropTypes.string,\r\n      type: PropTypes.string,\r\n      distance: PropTypes.number,\r\n    })\r\n  ),\r\n};\r\n\r\nexport default injectIntl(ChartDistanceComparison);\r\n","import ChartDistanceComparison from './ChartDistanceComparison';\r\n\r\nexport default ChartDistanceComparison;\r\n","import { axisLeft } from 'd3-axis';\r\nimport { easeQuadOut } from 'd3-ease';\r\nimport { scaleBand, scaleLinear } from 'd3-scale';\r\nimport { select } from 'd3-selection';\r\nimport { transition } from 'd3-transition';\r\nimport { find, maxBy } from 'lodash-es';\r\nimport PropTypes from 'prop-types';\r\nimport React, { useContext, useEffect, useRef } from 'react';\r\nimport styled from 'styled-components';\r\nimport SelectedItemContext from '../../contexts/SelectedItemContext';\r\nimport useHasElementEntered from '../../hooks/useHasElementEntered';\r\nimport { active, primary, bgSecondary, secondary } from '../colors';\r\n\r\nconst Chart = styled.div`\r\n  font-size: 16px;\r\n\r\n  & .x-axis,\r\n  & .y-axis {\r\n    fill: ${bgSecondary};\r\n\r\n    & text {\r\n      font-size: 16px;\r\n      font-family: Acme;\r\n    }\r\n  }\r\n\r\n  & .bar {\r\n    rect {\r\n      &.average {\r\n        fill: black;\r\n      }\r\n      &.max {\r\n        fill: ${secondary};\r\n      }\r\n    }\r\n\r\n    text {\r\n      &.bar-label {\r\n        fill: ${primary};\r\n        opacity: 0;\r\n        text-anchor: middle;\r\n      }\r\n      &.speed {\r\n        fill: white;\r\n        font-size: 12px;\r\n      }\r\n    }\r\n\r\n    &--selected,\r\n    &:hover,\r\n    &:focus {\r\n      rect {\r\n        &.average,\r\n        &.max {\r\n          fill: ${active};\r\n        }\r\n      }\r\n\r\n      text.bar-label {\r\n        opacity: 1;\r\n      }\r\n    }\r\n  }\r\n\r\n  & .bar-label {\r\n  }\r\n`;\r\n\r\nconst ChartPaceComparison = ({ runs, mode }) => {\r\n  const margin = { top: 60, right: 60, bottom: 60, left: 60 };\r\n  const width = 800 - margin.left - margin.right;\r\n  const height = 600 - margin.top - margin.bottom;\r\n  const { setSelectedItem, ...selectedItem } = useContext(SelectedItemContext);\r\n  const chart = useRef();\r\n  const hasElementEntered = useHasElementEntered(chart);\r\n  const xScaleRef = useRef();\r\n  const yScaleRef = useRef();\r\n  const yAxisRef = useRef();\r\n  const containerRef = useRef();\r\n  const yAxisContainerRef = useRef();\r\n\r\n  const convertMPSToKMPH = mps => (mps * 3600) / 1000;\r\n  const convertMPSToMinPKM = mps => 16.666666666667 / mps;\r\n\r\n  // SVG creation\r\n  useEffect(\r\n    () => {\r\n      const svg = select(chart.current)\r\n        .append('svg')\r\n        .attr(\r\n          'viewBox',\r\n          `0 0 ${width + margin.left + margin.right} ${height +\r\n            margin.top +\r\n            margin.bottom}`\r\n        );\r\n\r\n      // main container\r\n      const container = svg\r\n        .append('g')\r\n        .attr('class', 'container')\r\n        .attr('transform', `translate(${margin.left}, ${margin.top})`);\r\n      containerRef.current = container;\r\n\r\n      // y-axis container\r\n      yAxisContainerRef.current = container.append('g').attr('class', 'y-axis');\r\n\r\n      xScaleRef.current = scaleBand()\r\n        .padding(0.2)\r\n        .range([0, width]);\r\n      yScaleRef.current = scaleLinear().range([height, 0]);\r\n      yAxisRef.current = axisLeft(yAxisRef.current).ticks(10, '~s');\r\n    },\r\n    [chart]\r\n  );\r\n\r\n  // SVG drawing and updating\r\n  useEffect(\r\n    () => {\r\n      if (hasElementEntered) {\r\n        const xScale = xScaleRef.current;\r\n        const yScale = yScaleRef.current;\r\n        const yAxis = yAxisRef.current;\r\n        const container = containerRef.current;\r\n        const yAxisContainer = yAxisContainerRef.current;\r\n\r\n        if (Object.keys(runs).length === 0) {\r\n          xScale.domain([]);\r\n          yScale.domain([0, 25]);\r\n        } else {\r\n          xScale.domain(runs.map(r => r.id));\r\n          yScale.domain([\r\n            0,\r\n            convertMPSToKMPH(maxBy(runs, r => r.max_speed).max_speed),\r\n          ]);\r\n        }\r\n\r\n        const axisTransition = transition()\r\n          .duration(750)\r\n          .ease(easeQuadOut);\r\n\r\n        yAxis.scale(yScale);\r\n\r\n        yAxisContainer.transition(axisTransition).call(yAxis);\r\n\r\n        const update = container.selectAll('g.bar').data(runs, d => d.id);\r\n        const enter = update.enter();\r\n\r\n        // enter selection\r\n        const g = enter.append('g').attr('class', 'bar');\r\n        // avg rect\r\n        g.append('rect')\r\n          .attr('class', 'average')\r\n          .attr('x', d => xScale(d.id))\r\n          .attr('y', d => yScale(convertMPSToKMPH(d.average_speed)))\r\n          .attr('width', () => xScale.bandwidth())\r\n          .on('mouseover', setSelectedItem)\r\n          .on('mouseout', () => setSelectedItem())\r\n          .transition()\r\n          .duration(750)\r\n          .ease(easeQuadOut)\r\n          .attr('y', d => yScale(convertMPSToKMPH(d.average_speed)))\r\n          .attr(\r\n            'height',\r\n            d => height - yScale(convertMPSToKMPH(d.average_speed))\r\n          );\r\n        // max rect\r\n        g.append('rect')\r\n          .attr('class', 'max')\r\n          .attr('x', d => xScale(d.id))\r\n          .attr(\r\n            'y',\r\n            d =>\r\n              height -\r\n              yScale(convertMPSToKMPH(d.max_speed)) +\r\n              yScale(convertMPSToKMPH(d.average_speed))\r\n          )\r\n          .attr('width', () => xScale.bandwidth())\r\n          .on('mouseover', setSelectedItem)\r\n          .on('mouseout', () => setSelectedItem())\r\n          .transition()\r\n          .duration(750)\r\n          .ease(easeQuadOut)\r\n          .attr('y', d => yScale(convertMPSToKMPH(d.max_speed)))\r\n          .attr(\r\n            'height',\r\n            d =>\r\n              height -\r\n              yScale(convertMPSToKMPH(d.max_speed)) -\r\n              (height - yScale(convertMPSToKMPH(d.average_speed)))\r\n          );\r\n        // name label\r\n        g.append('text')\r\n          .attr('class', 'bar-label')\r\n          .attr('x', d => xScale(d.id) + xScale.bandwidth() / 2)\r\n          .attr('y', () => height + 20)\r\n          .text(d => d.name);\r\n        // avg speed label\r\n        g.append('text')\r\n          .attr('class', 'speed')\r\n          .attr('x', d => xScale(d.id) + xScale.bandwidth() - 5)\r\n          .attr('y', () => height)\r\n          .attr(\r\n            'transform',\r\n            d =>\r\n              `rotate(-90, ${xScale(d.id) + xScale.bandwidth() - 5}, ${height})`\r\n          )\r\n          .text(\r\n            d =>\r\n              `${convertMPSToKMPH(d.average_speed).toPrecision(\r\n                2\r\n              )} km/h (${convertMPSToMinPKM(d.average_speed).toPrecision(\r\n                2\r\n              )} min/km)`\r\n          );\r\n        // max speed label\r\n        g.append('text')\r\n          .attr('class', 'speed')\r\n          .attr('x', d => xScale(d.id) + 16)\r\n          .attr(\r\n            'y',\r\n            d => height - (height - yScale(convertMPSToKMPH(d.average_speed)))\r\n          )\r\n          .attr(\r\n            'transform',\r\n            d =>\r\n              `rotate(-90, ${xScale(d.id) + 16}, ${height -\r\n                (height - yScale(convertMPSToKMPH(d.average_speed)))})`\r\n          )\r\n          .text(\r\n            d =>\r\n              `${convertMPSToKMPH(d.max_speed).toPrecision(\r\n                2\r\n              )} km/h (${convertMPSToMinPKM(d.max_speed).toPrecision(\r\n                2\r\n              )} min/km)`\r\n          );\r\n      }\r\n    },\r\n    [runs, chart, hasElementEntered, mode]\r\n  );\r\n\r\n  // selected item\r\n  useEffect(\r\n    () => {\r\n      if (hasElementEntered) {\r\n        const container = containerRef.current;\r\n        const { type, id } = selectedItem;\r\n        const selectedRun = find(\r\n          runs,\r\n          run => run.id === id && run.type === type\r\n        );\r\n        // stroke colors\r\n        const update = container\r\n          .selectAll('.bar')\r\n          .data(selectedRun ? [selectedRun] : [], d => d.id);\r\n        update.classed('bar--selected', true);\r\n        const exit = update.exit();\r\n        exit.classed('bar--selected', false);\r\n      }\r\n    },\r\n    [runs, chart, hasElementEntered, selectedItem]\r\n  );\r\n\r\n  return <Chart className=\"ChartPaceComparison\" ref={chart} />;\r\n};\r\n\r\nChartPaceComparison.defaultProps = {\r\n  runs: [],\r\n  mode: 'absolute',\r\n};\r\n\r\nChartPaceComparison.propTypes = {\r\n  runs: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number,\r\n      name: PropTypes.string,\r\n      max_speed: PropTypes.number,\r\n      average_speed: PropTypes.number,\r\n      type: PropTypes.string,\r\n    })\r\n  ),\r\n  mode: PropTypes.string,\r\n};\r\n\r\nexport default ChartPaceComparison;\r\n","import ChartPaceComparison from './ChartPaceComparison';\r\n\r\nexport default ChartPaceComparison;\r\n","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\nimport { orderBy, truncate, pick } from 'lodash-es';\r\nimport { injectIntl } from 'react-intl';\r\nimport ChartEvolutionOverTime from '../ChartEvolutionOverTime';\r\nimport ChartDistanceComparison from '../ChartDistanceComparison';\r\nimport ChartPaceComparison from '../ChartPaceComparison';\r\nimport ReferenceList from '../ReferenceList';\r\nimport { secondary, active, bgSecondary } from '../colors';\r\n\r\nconst Title = styled.h1`\r\n  text-align: center;\r\n`;\r\n\r\nconst ChartList = styled.nav`\r\n  margin: 20px 0;\r\n\r\n  text-align: center;\r\n`;\r\n\r\nconst ChartListItem = styled.a`\r\n  margin-left: 32px;\r\n  margin-right: 32px;\r\n  display: inline-block;\r\n  background: ${bgSecondary}\r\n\r\n  font-size: 48px;\r\n  font-style: oblique;\r\n  letter-spacing: 2px;\r\n  text-decoration: none;\r\n\r\n  cursor: pointer;\r\n\r\n  &:hover, &:active, &:focus, &.selected {\r\n    color: ${secondary};\r\n    text-decoration: underline;\r\n  }\r\n\r\n  &:active {\r\n    color: ${active};\r\n  }\r\n`;\r\n\r\nconst MainView = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nconst Graph = styled.div`\r\n  flex: 2;\r\n`;\r\n\r\nconst List = styled.div`\r\n  flex: 1;\r\n`;\r\n\r\nconst RunComparison = ({ title, runs, type, intl }) => {\r\n  const charts = [\r\n    {\r\n      label: intl.formatMessage({ id: 'runComparison.evolutionOverTime' }),\r\n    },\r\n    {\r\n      label: intl.formatMessage({ id: 'runComparison.speedComparison' }),\r\n    },\r\n    {\r\n      label: intl.formatMessage({ id: 'runComparison.distanceComparison' }),\r\n    },\r\n  ];\r\n  const [currentChart, setChart] = useState(charts[0]);\r\n  return (\r\n    <div>\r\n      <Title>{title}</Title>\r\n      <ChartList>\r\n        {charts.map((c, i) => (\r\n          <ChartListItem\r\n            key={i}\r\n            className={currentChart === c ? 'selected' : ''}\r\n            onClick={() => setChart(c)}\r\n          >\r\n            {c.label}\r\n          </ChartListItem>\r\n        ))}\r\n      </ChartList>\r\n      <MainView>\r\n        <Graph>\r\n          {currentChart === charts[0] && (\r\n            <ChartEvolutionOverTime\r\n              runs={runs.map(({ id, splits_metric }) => ({\r\n                id,\r\n                type,\r\n                splits: splits_metric.map(\r\n                  ({ average_speed, distance, elapsed_time }) => ({\r\n                    speed: average_speed,\r\n                    distance: distance,\r\n                    time: elapsed_time,\r\n                  })\r\n                ),\r\n              }))}\r\n            />\r\n          )}\r\n          {currentChart === charts[1] && (\r\n            <ChartPaceComparison\r\n              runs={runs.map(r => ({\r\n                ...pick(r, 'id', 'name', 'max_speed', 'average_speed'),\r\n                type,\r\n              }))}\r\n            />\r\n          )}\r\n          {currentChart === charts[2] && (\r\n            <ChartDistanceComparison\r\n              runs={runs.map(r => ({\r\n                ...pick(r, 'id', 'name', 'distance'),\r\n                type,\r\n              }))}\r\n            />\r\n          )}\r\n        </Graph>\r\n        <List>\r\n          <ReferenceList\r\n            ordered\r\n            items={orderBy(runs, 'start_date', 'desc').map(({ name, id }) => ({\r\n              label: truncate(name, {\r\n                separator: /,? +/,\r\n              }),\r\n              onClick: () =>\r\n                window.open(\r\n                  `https://www.strava.com/activities/${id}`,\r\n                  '_blank'\r\n                ),\r\n              id,\r\n              type,\r\n            }))}\r\n          />\r\n        </List>\r\n      </MainView>\r\n    </div>\r\n  );\r\n};\r\n\r\nRunComparison.propTypes = {\r\n  title: PropTypes.string,\r\n  type: PropTypes.string,\r\n  history: PropTypes.shape({}),\r\n  location: PropTypes.shape({}),\r\n  match: PropTypes.shape({}),\r\n  runs: PropTypes.arrayOf(PropTypes.object),\r\n};\r\n\r\nexport default injectIntl(RunComparison);\r\n","import RunComparison from './RunComparison';\r\n\r\nexport default RunComparison;\r\n","import React, { useState, useMemo } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport SelectedItemContext from './SelectedItemContext';\r\n\r\nconst SelectedItemProvider = ({ children }) => {\r\n  const [selectedItem, setSelectedItem] = useState({});\r\n  const value = useMemo(\r\n    () => ({\r\n      ...selectedItem,\r\n      setSelectedItem: item => {\r\n        // const nextItem = item\r\n        //   ? { id: item.id, type: item.type }\r\n        //   : { id: undefined, type: '' };\r\n        // if (nextItem.id) console.log(nextItem);\r\n        setSelectedItem(item ? item : { id: undefined, type: '' });\r\n      },\r\n    }),\r\n    [selectedItem]\r\n  );\r\n  return (\r\n    <SelectedItemContext.Provider value={value}>\r\n      {children}\r\n    </SelectedItemContext.Provider>\r\n  );\r\n};\r\n\r\nSelectedItemProvider.propTypes = {\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(PropTypes.node),\r\n    PropTypes.node,\r\n  ]),\r\n};\r\n\r\nSelectedItemProvider.defaultProps = {\r\n  children: undefined,\r\n};\r\n\r\nexport default SelectedItemProvider;\r\n","import Main from './Main';\r\n\r\nexport default Main;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport useStrava from '../../hooks/useStrava';\r\nimport Container from '../Container';\r\nimport Header from '../Header';\r\nimport Footer from '../Footer';\r\nimport Summary from '../Summary';\r\nimport RunComparison from '../RunComparison';\r\nimport SelectedItemProvider from '../../contexts/SelectedItemProvider';\r\n\r\nconst Main = ({ code }) => {\r\n  const {\r\n    isReady,\r\n    athleteId,\r\n    profilePicture,\r\n    fullName,\r\n    longestRun,\r\n    topKudosers,\r\n    biggestFan,\r\n    matchingRunsBySegmentGroups,\r\n    matchingRunsByHighestBestEfforts,\r\n    totalRuns,\r\n  } = useStrava(code);\r\n  return (\r\n    <SelectedItemProvider>\r\n      <Container>\r\n        <Header\r\n          athleteId={athleteId}\r\n          profilePicture={profilePicture}\r\n          fullName={fullName}\r\n        />\r\n        <Switch>\r\n          <Route\r\n            path=\"/\"\r\n            exact\r\n            render={props =>\r\n              isReady ? (\r\n                <Summary\r\n                  {...props}\r\n                  athleteId={athleteId}\r\n                  longestRun={longestRun}\r\n                  biggestFan={biggestFan}\r\n                  totalRuns={totalRuns}\r\n                  topKudosers={topKudosers}\r\n                  matchingRunsBySegmentGroups={matchingRunsBySegmentGroups}\r\n                  matchingRunsByHighestBestEfforts={\r\n                    matchingRunsByHighestBestEfforts\r\n                  }\r\n                />\r\n              ) : null\r\n            }\r\n          />\r\n          <Route\r\n            path=\"/SegmentGroup/:id\"\r\n            render={props => {\r\n              const runs = matchingRunsBySegmentGroups[props.match.params.id];\r\n              const [firstRun] = runs;\r\n              return (\r\n                <RunComparison\r\n                  {...props}\r\n                  runs={runs}\r\n                  title={firstRun && firstRun.name}\r\n                  type=\"SEGMENT_GROUP\"\r\n                />\r\n              );\r\n            }}\r\n          />\r\n          <Route\r\n            path=\"/HighestBestEffort/:id\"\r\n            render={props => {\r\n              const runs =\r\n                matchingRunsByHighestBestEfforts[props.match.params.id];\r\n              const [firstRun] = runs;\r\n              return (\r\n                <RunComparison\r\n                  {...props}\r\n                  runs={runs}\r\n                  title={firstRun && firstRun.name}\r\n                  type=\"HIGHEST_BEST_EFFORT\"\r\n                />\r\n              );\r\n            }}\r\n          />\r\n        </Switch>\r\n        <Footer />\r\n      </Container>\r\n    </SelectedItemProvider>\r\n  );\r\n};\r\n\r\nMain.propTypes = {\r\n  code: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Main;\r\n","import {\r\n  countBy,\r\n  differenceBy,\r\n  find,\r\n  flatten,\r\n  head,\r\n  map,\r\n  mapKeys,\r\n  mapValues,\r\n  maxBy,\r\n  orderBy,\r\n  uniqBy,\r\n  values,\r\n  without,\r\n} from 'lodash-es';\r\nimport { useEffect, useState } from 'react';\r\nimport StravaAPI from '../strava';\r\n\r\nexport default token => {\r\n  const [stravaApi] = useState(new StravaAPI());\r\n  const [isReady, setIsReady] = useState(false);\r\n  const [longestRun, setLongestRun] = useState(undefined);\r\n  const [fastestRun, setFastestRun] = useState(undefined);\r\n  const [topKudosers, setTopKudosers] = useState([]);\r\n  const [biggestFan, setBiggestFan] = useState(undefined);\r\n  const [profilePicture, setProfilePicture] = useState(undefined);\r\n  const [fullName, setFullName] = useState(undefined);\r\n  const [totalRuns, setTotalRuns] = useState(undefined);\r\n  const [athleteId, setAthleteId] = useState(undefined);\r\n  const [matchingRunsByBestEfforts, setMatchingRunsByBestEfforts] = useState(\r\n    undefined\r\n  );\r\n  const [\r\n    matchingRunsByHighestBestEfforts,\r\n    setMatchingRunsByHighestBestEfforts,\r\n  ] = useState(undefined);\r\n  const [matchingRunsBySegments, setMatchingRunsBySegments] = useState(\r\n    undefined\r\n  );\r\n  const [\r\n    matchingRunsBySegmentGroups,\r\n    setMatchingRunsBySegmentGroups,\r\n  ] = useState(undefined);\r\n\r\n  useEffect(\r\n    () => {\r\n      stravaApi\r\n        .init(token)\r\n        .then(({ currentAthlete, activities, kudos, totalRuns }) => {\r\n          // Strava ID\r\n          setAthleteId(currentAthlete.id);\r\n\r\n          // URL to Profile picture\r\n          setProfilePicture(currentAthlete.profile);\r\n\r\n          // Full name\r\n          setFullName(`${currentAthlete.firstname} ${currentAthlete.lastname}`);\r\n\r\n          // Total stats\r\n          setTotalRuns(totalRuns);\r\n\r\n          // Array of all kudosers\r\n          const allKudosers = uniqBy(\r\n            flatten(values(kudos)),\r\n            kudoser => kudoser.id\r\n          );\r\n\r\n          // All kudosers sorted by kudos count\r\n          const _topKudosers = orderBy(\r\n            map(\r\n              countBy(flatten(values(kudos)), kudoser => kudoser.id),\r\n              (value, key) => {\r\n                const kudoser = find(allKudosers, kudoser => {\r\n                  return kudoser.id.toString() === key;\r\n                });\r\n                return {\r\n                  ...kudoser,\r\n                  kudosCount: value,\r\n                };\r\n              }\r\n            ),\r\n            'kudosCount',\r\n            'desc'\r\n          );\r\n          setTopKudosers(_topKudosers);\r\n\r\n          // Biggest fan / Top kudoser\r\n          setBiggestFan(head(_topKudosers));\r\n\r\n          // Longest run (highest distance)\r\n          setLongestRun(head(orderBy(activities, 'distance', 'desc')));\r\n\r\n          // Fastest run (fastest pace)\r\n          setFastestRun(head(orderBy(activities, 'average_speed', 'desc')));\r\n\r\n          // Runs matched by highest best efforts\r\n          const allBestEfforts = orderBy(\r\n            uniqBy(\r\n              flatten(\r\n                map(activities, ({ best_efforts }) =>\r\n                  best_efforts.map(({ name, distance }) => ({\r\n                    name,\r\n                    distance,\r\n                  }))\r\n                )\r\n              ),\r\n              b => b.distance\r\n            ),\r\n            'distance',\r\n            'asc'\r\n          );\r\n          setMatchingRunsByHighestBestEfforts({\r\n            ...mapValues(mapKeys(allBestEfforts, v => v.distance), be =>\r\n              values(activities).filter(\r\n                ({ best_efforts }) =>\r\n                  maxBy(best_efforts, be2 => be2.distance).distance ===\r\n                  be.distance\r\n              )\r\n            ),\r\n          });\r\n          // Runs matched by best efforts\r\n          setMatchingRunsByBestEfforts({\r\n            ...mapValues(mapKeys(allBestEfforts, v => v.distance), be =>\r\n              values(activities).filter(({ best_efforts }) =>\r\n                best_efforts.some(be2 => be2.distance === be.distance)\r\n              )\r\n            ),\r\n          });\r\n\r\n          // Runs matched by segments\r\n          const allSegments = orderBy(\r\n            uniqBy(\r\n              flatten(\r\n                map(activities, ({ segment_efforts }) => segment_efforts)\r\n              ),\r\n              ({ segment: { id } }) => id\r\n            ),\r\n            'distance',\r\n            'asc'\r\n          );\r\n          setMatchingRunsBySegments({\r\n            ...mapValues(mapKeys(allSegments, v => v.segment.id), seg =>\r\n              values(activities).filter(({ segment_efforts }) =>\r\n                segment_efforts.some(seg2 => seg2.segment.id === seg.segment.id)\r\n              )\r\n            ),\r\n          });\r\n\r\n          // Runs matched by segment groups\r\n          let activitiesPool = [...values(activities)];\r\n          let groups = {};\r\n\r\n          const doesActivitySegmentsMatch = (activity1, activity2) => {\r\n            const segments1 = activity1.segment_efforts;\r\n            const segments2 = activity2.segment_efforts;\r\n            const uniqueSegments = uniqBy(\r\n              [...segments1, ...segments2],\r\n              ({ segment: { id } }) => id\r\n            );\r\n            const differences = uniqBy(\r\n              [\r\n                ...differenceBy(\r\n                  segments1,\r\n                  segments2,\r\n                  ({ segment: { id } }) => id\r\n                ),\r\n                ...differenceBy(\r\n                  segments2,\r\n                  segments1,\r\n                  ({ segment: { id } }) => id\r\n                ),\r\n              ],\r\n              ({ segment: { id } }) => id\r\n            );\r\n            return differences.length / uniqueSegments.length < 0.9;\r\n          };\r\n\r\n          for (const a1 of values(activities)) {\r\n            let newGroup = [];\r\n            for (const a2 of activitiesPool) {\r\n              if (doesActivitySegmentsMatch(a1, a2)) {\r\n                newGroup.push(a2);\r\n              }\r\n            }\r\n            activitiesPool = without(activitiesPool, ...newGroup);\r\n            if (newGroup.length > 0) {\r\n              groups[a1.id] = newGroup;\r\n            }\r\n          }\r\n          setMatchingRunsBySegmentGroups(groups);\r\n\r\n          // Strava loaded!\r\n          setIsReady(true);\r\n        });\r\n    },\r\n    [token]\r\n  );\r\n\r\n  return {\r\n    isReady,\r\n    athleteId,\r\n    profilePicture,\r\n    fullName,\r\n    longestRun,\r\n    fastestRun,\r\n    topKudosers,\r\n    biggestFan,\r\n    totalRuns,\r\n    matchingRunsByBestEfforts,\r\n    matchingRunsByHighestBestEfforts,\r\n    matchingRunsBySegments,\r\n    matchingRunsBySegmentGroups,\r\n  };\r\n};\r\n","const flattenMessages = (nestedMessages, prefix = '') => {\r\n  return Object.keys(nestedMessages).reduce((messages, key) => {\r\n    let value = nestedMessages[key];\r\n    let prefixedKey = prefix ? `${prefix}.${key}` : key;\r\n\r\n    if (typeof value === 'string') {\r\n      messages[prefixedKey] = value;\r\n    } else {\r\n      Object.assign(messages, flattenMessages(value, prefixedKey));\r\n    }\r\n\r\n    return messages;\r\n  }, {});\r\n};\r\n\r\nexport default {\r\n  'en-US': flattenMessages({\r\n    introduction: {\r\n      title:\r\n        'Welcome to Hook3! A Strava performance analyzer created using React hooks and D3!',\r\n      description:\r\n        'Get pointless statistics about you such as: <div>Your performance over time on matching group of segments!</div><div>Your name!</div>',\r\n      getStartedButton: \"Let's get started!\",\r\n    },\r\n    header: {\r\n      hello: 'Hi {name}!',\r\n    },\r\n    footer: {\r\n      source: 'Source code',\r\n    },\r\n    summary: {\r\n      mostFrequentRunsTitle: 'Your most frequent runs',\r\n      topKudosersTitle: 'People who give you the most kudos',\r\n    },\r\n    highlights: {\r\n      longestRunTitle: 'Your longest run was <strong>{run}</strong>',\r\n      longestRunHighlight: '{distance} kilometers',\r\n      longestRunSubtitle: 'Done on ',\r\n      mostFrequentRunTitle: 'Your most frequent run is <strong>{run}</strong>',\r\n      mostFrequentRunHighlight: '{count} times',\r\n      mostFrequentRunSubtitle: 'Last run on ',\r\n      biggestFanTitle: 'Your biggest fan is <strong>{fan}</strong>',\r\n      biggestFanSubtitle: '{kudos} total kudos!',\r\n      totalRunsTitle: 'You have a total of',\r\n      totalRunsHighlight: '{runs} runs',\r\n      totalRunsSubtitle: 'so far!',\r\n    },\r\n    runComparison: {\r\n      evolutionOverTime: 'Evolution over time',\r\n      speedComparison: 'Speed comparison',\r\n      distanceComparison: 'Distance comparison',\r\n    },\r\n    chartDistanceComparison: {\r\n      meters: 'meters',\r\n    },\r\n  }),\r\n  'fr-FR': flattenMessages({\r\n    introduction: {\r\n      title:\r\n        'Bienvenue Hook3! Un analyseur de performance Strava créé avec React hooks et D3!',\r\n      description:\r\n        \"Des statistiques inutiles pour toi comme: <div>Ta performance sur des groupes de segments (regroupés par cette sublime application) !</div><div>Ton nom (au cas où tu l'aurais oublié) !</div>\",\r\n      getStartedButton: \"C'est parti !\",\r\n    },\r\n    header: {\r\n      hello: 'Salut {name} !',\r\n    },\r\n    footer: {\r\n      source: 'Code source',\r\n    },\r\n    summary: {\r\n      mostFrequentRunsTitle: 'Tes courses les plus fréquentes',\r\n      topKudosersTitle: 'Ceux qui te donnent le plus de kudos !',\r\n    },\r\n    highlights: {\r\n      longestRunTitle: 'Ta plus longue course est <strong>{run}</strong>',\r\n      longestRunHighlight: '{distance} kilomètres',\r\n      longestRunSubtitle: 'Couru le ',\r\n      mostFrequentRunTitle:\r\n        'Ta course la plus fréquente est <strong>{run}</strong>',\r\n      mostFrequentRunHighlight: '{count} fois',\r\n      mostFrequentRunSubtitle: 'Couru pour la dernière fois le ',\r\n      biggestFanTitle: 'Ton plus grand fan est <strong>{fan}</strong>',\r\n      biggestFanSubtitle: 'Un total de {kudos} kudos!',\r\n      totalRunsTitle: 'Tu as couru',\r\n      totalRunsHighlight: '{runs} fois',\r\n      totalRunsSubtitle: 'au total !',\r\n    },\r\n    runComparison: {\r\n      evolutionOverTime: 'Evolution sur la durée',\r\n      speedComparison: 'Comparaison de vitesse',\r\n      distanceComparison: 'Comparaison de distance',\r\n    },\r\n    chartDistanceComparison: {\r\n      meters: 'mètres',\r\n    },\r\n  }),\r\n};\r\n","import React from 'react';\r\nimport { BrowserRouter, Route } from 'react-router-dom';\r\nimport { IntlProvider, addLocaleData } from 'react-intl';\r\nimport en from 'react-intl/locale-data/en';\r\nimport fr from 'react-intl/locale-data/fr';\r\nimport Introduction from './components/Introduction';\r\nimport Main from './components/Main';\r\nimport i18n from './i18n';\r\n\r\naddLocaleData([...en, ...fr]);\r\n\r\nconst locale =\r\n  (navigator.language && navigator.languages[0]) ||\r\n  navigator.language ||\r\n  navigator.userLanguage ||\r\n  'en-US';\r\n\r\nexport default () => {\r\n  const searchParams = new URLSearchParams(window.location.search);\r\n  const code = searchParams.get('code');\r\n  const error = searchParams.get('error');\r\n\r\n  return (\r\n    <IntlProvider locale={locale} messages={i18n['fr-FR'] || i18n['en-US']}>\r\n      {code && error !== 'access_denied' ? (\r\n        <BrowserRouter basename={process.env.REACT_APP_BASENAME || '/'}>\r\n          <Route render={() => <Main code={code} />} />\r\n        </BrowserRouter>\r\n      ) : (\r\n        <Introduction\r\n          onStart={() =>\r\n            window.open(\r\n              `https://www.strava.com/oauth/authorize?client_id=${\r\n                process.env.REACT_APP_STRAVA_ID\r\n              }&redirect_uri=${\r\n                process.env.REACT_APP_STRAVA_REDIRECT_URI\r\n              }&response_type=code&approval_prompt=auto&scope=profile:read_all,activity:read_all`,\r\n              '_self'\r\n            )\r\n          }\r\n        />\r\n      )}\r\n    </IntlProvider>\r\n  );\r\n};\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './Router';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'normalize.css';\r\nimport './styles.css';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}