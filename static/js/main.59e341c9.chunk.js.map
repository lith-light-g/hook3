{"version":3,"sources":["components/colors.js","components/Button/Button.js","components/Button/index.js","components/Container/Container.js","components/Container/index.js","components/Footer/Footer.js","components/Footer/index.js","components/Introduction/Introduction.js","components/Introduction/index.js","strava.js","components/Header/Header.js","components/Header/index.js","components/Highlight/Highlight.js","components/Highlight/index.js","hooks/useHasElementEntered.js","components/Highlights/Highlights.js","components/Highlights/index.js","contexts/SelectedItemContext.js","components/ChartTopKudosers/ChartTopKudosers.js","components/ChartTopKudosers/index.js","components/ReferenceList/ReferenceList.js","components/ReferenceList/index.js","components/ChartRunsByFrequency/ChartRunsByFrequency.js","components/ChartRunsByFrequency/index.js","components/Summary/Summary.js","components/Summary/index.js","components/ChartEvolutionOverTime/ChartEvolutionOverTime.js","components/ChartEvolutionOverTime/index.js","components/ChartDistanceComparison/ChartDistanceComparison.js","components/ChartDistanceComparison/index.js","components/ChartPaceComparison/ChartPaceComparison.js","components/ChartPaceComparison/index.js","components/RunComparison/RunComparison.js","components/RunComparison/index.js","contexts/SelectedItemProvider.js","components/Main/index.js","components/Main/Main.js","hooks/useStrava.js","serviceWorker.js","index.js","Router.js"],"names":["bgSecondary","primary","secondary","active","styled","Button","button","_templateObject","Container","div","Container_templateObject","Footer","footer","Footer_templateObject","Link","a","_templateObject2","react_default","createElement","href","ContainerBase","Introduction_templateObject","Content","main","Introduction_templateObject2","Introduction","_ref","onStart","Introduction_Container","components_Button","onClick","components_Footer","StravaAPI","kudos","laps","init","code","fetch","body","JSON","stringify","client_id","process","client_secret","grant_type","method","headers","Content-Type","then","res","json","access_token","refresh_token","athlete","expires_at","_this","accessToken","refreshToken","tokenExpiresAt","currentAthlete","statsRequest","getAthleteStats","_ref2","all_run_totals","totalRuns","activitiesRequest","getActivities","activities","Promise","all","filter","activity","type","map","getActivityDetails","id","activityDetail","Object","objectSpread","defineProperty","getKudosers","kudosers","createStravaRequest","path","options","arguments","length","undefined","concat","Authorization","getAuthenticatedAthelete","getZones","page","activityId","getLaps","getRoutes","getRaces","HeaderContainer","header","Header_templateObject","ProfilePicture","Header_templateObject2","Main","_templateObject3","Title","h1","_templateObject4","Header","profilePicture","fullName","es_Link","to","src","alt","Header_Main","defaultProps","athleteId","HighlightContainer","Highlight_templateObject","HighlightTop","Highlight_templateObject2","HightlightStat","Highlight_templateObject3","HightlightBottom","Highlight_templateObject4","Highlight","url","renderTitle","renderHighlight","renderSubtitle","target","useHasElementEntered","ref","_useState","useState","_useState2","slicedToArray","hasElementEntered","setHasElementEntered","useEffect","listener","e","_e$getBoundingClientR","getBoundingClientRect","top","right","bottom","left","window","innerHeight","document","documentElement","clientHeight","innerWidth","clientWidth","error","checkIfVisible","current","addEventListener","removeEventListener","HighlightsContainer","Highlights_templateObject","borderThickness","props","showBorders","Highlights","longestRun","mostFrequentRun","biggestFan","containerRef","useRef","components_Highlight","truncate","name","separator","distance","toPrecision","dateFormat","date","count","picture","createContext","setSelectedItem","Chart","ChartTopKudosers_templateObject","ChartTopKudosers","_useContext","useContext","SelectedItemContext","selectedItem","objectWithoutProperties","chart","xScaleRef","xAxisRef","yScaleRef","xAxisContainerRef","take","margin","width","height","svg","select","append","attr","container","scaleLinear","range","scaleBand","padding","axisBottom","xScale","yScale","xAxis","xAxisContainer","domain","maxBy","kudosCount","d","scale","call","selectAll","g","data","enter","on","open","bandwidth","transition","duration","ease","easeQuadOut","textContainer","delay","i","easeQuadInOut","text","firstname","lastname","selectedKudoser","find","k","update","classed","exit","className","OList","ol","ReferenceList_templateObject","UList","ul","ReferenceList_templateObject2","ListItem","li","ReferenceList_templateObject3","ReferenceList_templateObject4","Text","span","_templateObject5","ReferenceList","items","ordered","key","label","onMouseOver","onMouseOut","ReferenceList_Link","assign","ChartRunsByFrequency_templateObject","ChartRunsByFrequency","matchingRunsBySegmentGroups","matchingRunsByHighestBestEfforts","matchingRunsBySegments","showSegmentGroupRuns","showSegmentRuns","showBestEffortRuns","yAxisRef","radiusScaleRef","yAxisContainerRef","runsBySegmentGroupsWithType","useMemo","r","runsByHighestBestEffortsWithType","runsBySegmentsWithType","allRuns","toConsumableArray","scaleTime","scaleQuantize","axisLeft","ticks","radiusScale","yAxis","yAxisContainer","now","Date","dateSubYears","minBy","_ref3","_ref4","_ref5","axisTransition","t","remove","random","runsToScan","selectedRun","run","ChartRunsByFrequency_Chart","matchingRunsPerSegmentGroups","matchingRunsPerSegments","Section","section","Summary_templateObject","SectionTitle","h2","Summary_templateObject2","SectionGraph","Summary_templateObject3","SectionList","Summary_templateObject4","Summary","topKudosers","history","chartDataForSegmentGroups","values","mapValues","v","_head","head","start_date","chartDataForSegments","_find$segment","segment_efforts","segE","segment","toString","chartDataForBestEfforts","pickBy","isEmpty","_find","best_efforts","be","_useMemo","mostFrequentRuns","last","_useMemo2","mostFrequentCount","components_Highlights","toISOString","profile","components_ChartRunsByFrequency","components_ReferenceList","orderBy","push","components_ChartTopKudosers","matchingRunsByBestEfforts","ChartEvolutionOverTime_templateObject","ChartDistanceComparison","runs","runsWithColors","color","getTotalTime","sumBy","time","getTotalDistance","areaGradient","keys","dateAddHours","getTime","splits","lineFn","line","x","y","curve","curveCardinal","speed","split","reduce","acc","cur","totalLength","this","getTotalLength","easeLinear","console","log","areaFn","area","y1","y0","ChartEvolutionOverTime_Chart","ChartDistanceComparison_templateObject","ChartDistanceComparison_Chart","ChartPaceComparison_templateObject","ChartPaceComparison","mode","convertMPSToKMPH","mps","convertMPSToMinPKM","max_speed","average_speed","ChartPaceComparison_Chart","RunComparison_templateObject","ChartList","nav","RunComparison_templateObject2","ChartListItem","RunComparison_templateObject3","MainView","RunComparison_templateObject4","Graph","RunComparison_templateObject5","List","_templateObject6","charts","RunComparison","title","location","match","currentChart","setChart","RunComparison_Title","c","components_ChartEvolutionOverTime","splits_metric","elapsed_time","components_ChartPaceComparison","pick","components_ChartDistanceComparison","SelectedItemProvider","children","value","item","Provider","_useStrava","token","stravaApi","_useState3","_useState4","isReady","setIsReady","_useState5","_useState6","setLongestRun","_useState7","_useState8","fastestRun","setFastestRun","_useState9","_useState10","setTopKudosers","_useState11","_useState12","setBiggestFan","_useState13","_useState14","setProfilePicture","_useState15","_useState16","setFullName","_useState17","_useState18","setTotalRuns","_useState19","_useState20","setAthleteId","_useState21","_useState22","setMatchingRunsByBestEfforts","_useState23","_useState24","setMatchingRunsByHighestBestEfforts","_useState25","_useState26","setMatchingRunsBySegments","_useState27","_useState28","setMatchingRunsBySegmentGroups","allKudosers","uniqBy","flatten","kudoser","_topKudosers","countBy","allBestEfforts","b","mapKeys","be2","some","allSegments","_ref6","_ref7","seg","_ref8","seg2","activitiesPool","groups","doesActivitySegmentsMatch","activity1","activity2","segments1","segments2","uniqueSegments","_ref9","differenceBy","_ref10","_ref11","_ref12","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","a1","newGroup","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","a2","err","return","without","apply","useStrava","contexts_SelectedItemProvider","components_Container","components_Header","Switch","Route","exact","render","components_Summary","params","firstRun","components_RunComparison","Boolean","hostname","ReactDOM","searchParams","URLSearchParams","search","get","BrowserRouter","components_Main","components_Introduction","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.59e341c9.chunk.js","sourcesContent":["export const bgPrimary = 'rgba(252, 230, 118, 1)';\r\nexport const bgSecondary = 'rgba(252, 169, 2, 1)';\r\nexport const primary = 'rgba(12, 8, 1, 1)';\r\nexport const secondary = 'rgba(79, 19, 3, 1)';\r\nexport const active = 'rgba(140, 18, 0, 1)';\r\n","import { active, secondary } from '../colors';\r\nimport styled from 'styled-components';\r\n\r\nexport default styled.button`\r\n  background: ${secondary};\r\n  padding: 5px 10px;\r\n  margin: 5px;\r\n\r\n  border: none;\r\n  border-radius: 5px;\r\n\r\n  color: white;\r\n\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    background: ${active};\r\n  }\r\n`;\r\n","import Button from './Button';\r\n\r\nexport default Button;\r\n","import styled from 'styled-components';\r\nimport { bgPrimary, primary } from '../colors';\r\n\r\nexport default styled.div`\r\n  background: ${bgPrimary};\r\n  width: 100%;\r\n  height: 100%;\r\n  margin: auto;\r\n  max-width: 980px;\r\n\r\n  color: ${primary};\r\n`;\r\n","import Container from './Container';\r\n\r\nexport default Container;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { primary, secondary } from '../colors';\r\n\r\nconst Footer = styled.footer`\r\n  padding: 50px;\r\n  text-align: center;\r\n`;\r\n\r\nconst Link = styled.a`\r\n  font-size: 24px;\r\n  color: ${primary};\r\n  margin: 30px;\r\n\r\n  &:hover {\r\n    color: ${secondary};\r\n  }\r\n`;\r\n\r\nexport default () => (\r\n  <Footer>\r\n    <Link href=\"https://github.com/lith-light-g/hook3\">Source code</Link>-\r\n    <Link href=\"https://lith-light-g.github.io/hook3/storybook\">Storybook</Link>\r\n  </Footer>\r\n);\r\n","import Footer from './Footer';\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport Button from '../Button';\r\nimport ContainerBase from '../Container';\r\nimport Footer from '../Footer';\r\n\r\nconst Container = styled(ContainerBase)`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Content = styled.main`\r\n  text-align: center;\r\n`;\r\n\r\nconst Introduction = ({ onStart }) => (\r\n  <Container>\r\n    <Content>\r\n      <div>\r\n        <h1>\r\n          Welcome to Hook3! A Strava performance analyzer created using React\r\n          hooks and D3!\r\n        </h1>\r\n        <article>\r\n          Get pointless statistics about you such as:\r\n          <div>Your performance over time on matching group of segments!</div>\r\n          <div>Your name!</div>\r\n        </article>\r\n        <Button onClick={onStart}>Let's get started!</Button>\r\n      </div>\r\n    </Content>\r\n    <Footer />\r\n  </Container>\r\n);\r\n\r\nIntroduction.propTypes = {\r\n  onStart: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Introduction;\r\n","import Introduction from './Introduction';\r\n\r\nexport default Introduction;\r\n","const targetApi = 'https://www.strava.com/api/v3';\r\n\r\nexport default class StravaAPI {\r\n  kudos = {};\r\n  laps = {};\r\n  init = code =>\r\n    fetch('https://www.strava.com/oauth/token', {\r\n      body: JSON.stringify({\r\n        client_id: process.env.REACT_APP_STRAVA_ID,\r\n        client_secret: process.env.REACT_APP_STRAVA_SECRET,\r\n        code,\r\n        grant_type: 'authorization_code',\r\n      }),\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    })\r\n      .then(res => res.json())\r\n      .then(({ access_token, refresh_token, athlete, expires_at }) => {\r\n        this.accessToken = access_token;\r\n        this.refreshToken = refresh_token;\r\n        this.tokenExpiresAt = expires_at * 1000;\r\n        this.currentAthlete = athlete;\r\n\r\n        const statsRequest = this.getAthleteStats().then(\r\n          ({ all_run_totals }) => {\r\n            this.totalRuns = all_run_totals;\r\n          }\r\n        );\r\n\r\n        const activitiesRequest = this.getActivities().then(activities =>\r\n          Promise.all(\r\n            activities\r\n              .filter(activity => activity.type === 'Run')\r\n              .map(activity =>\r\n                this.getActivityDetails(activity.id).then(activityDetail => {\r\n                  this.activities = {\r\n                    ...this.activities,\r\n                    [activityDetail.id]: activityDetail,\r\n                  };\r\n                  return this.getKudosers(activityDetail.id).then(kudosers => {\r\n                    this.kudos = {\r\n                      ...this.kudos,\r\n                      [activityDetail.id]: kudosers,\r\n                    };\r\n                  });\r\n                })\r\n              )\r\n          )\r\n        );\r\n\r\n        return Promise.all([statsRequest, activitiesRequest]).then(() => ({\r\n          currentAthlete: athlete,\r\n          totalRuns: this.totalRuns,\r\n          activities: this.activities,\r\n          kudos: this.kudos,\r\n        }));\r\n      });\r\n\r\n  createStravaRequest = (path, options = {}) =>\r\n    fetch(`${targetApi}${path}`, {\r\n      ...options,\r\n      headers: {\r\n        ...options.headers,\r\n        Authorization: `Bearer ${this.accessToken}`,\r\n      },\r\n    }).then(res => res.json());\r\n\r\n  getAuthenticatedAthelete = () => this.createStravaRequest('/athlete');\r\n\r\n  getZones = () => this.createStravaRequest('/athlete/zones');\r\n\r\n  getAthleteStats = () =>\r\n    this.createStravaRequest(`/athletes/${this.currentAthlete.id}/stats`);\r\n\r\n  getActivities = (page = 1) =>\r\n    this.createStravaRequest(`/athlete/activities?page=${page}&per_page=100`);\r\n\r\n  getActivityDetails = id => this.createStravaRequest(`/activities/${id}`);\r\n\r\n  getKudosers = activityId =>\r\n    this.createStravaRequest(`/activities/${activityId}/kudos`);\r\n\r\n  getLaps = activityId =>\r\n    this.createStravaRequest(`/activities/${activityId}/laps`);\r\n\r\n  getRoutes = () =>\r\n    this.createStravaRequest(`/athletes/${this.currentAthlete.id}/routes`);\r\n\r\n  getRaces = () => this.createStravaRequest('/running_races');\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\nimport { bgSecondary, primary } from '../colors';\r\n\r\nconst HeaderContainer = styled.header`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: flex-start;\r\n  align-items: flex-start;\r\n`;\r\n\r\nconst ProfilePicture = styled.div`\r\n  background: ${bgSecondary};\r\n  padding: 10px;\r\n  flex: 0;\r\n\r\n  & img {\r\n    border: 5px solid ${primary};\r\n  }\r\n`;\r\n\r\nconst Main = styled.div`\r\n  padding: 10px 30px;\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: space-between;\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  font-size: 48px;\r\n`;\r\n\r\nconst Header = ({ profilePicture, fullName }) => (\r\n  <HeaderContainer>\r\n    <ProfilePicture>\r\n      <Link to=\"/\">\r\n        <img src={profilePicture} alt=\"\" />\r\n      </Link>\r\n    </ProfilePicture>\r\n    <Main>\r\n      <Title>Hi {fullName}!</Title>\r\n    </Main>\r\n  </HeaderContainer>\r\n);\r\n\r\nHeader.propTypes = {\r\n  athleteId: PropTypes.number,\r\n  profilePicture: PropTypes.string,\r\n  fullName: PropTypes.string,\r\n};\r\n\r\nHeader.defaultProps = {\r\n  athleteId: undefined,\r\n  profilePicture: '',\r\n  fullName: '',\r\n};\r\n\r\nexport default Header;\r\n","import Header from './Header';\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport { primary, bgSecondary } from '../colors';\r\n\r\nconst HighlightContainer = styled.a`\r\n  width: 50%;\r\n  min-height: 200px;\r\n  text-align: center;\r\n  float: left;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-direction: column;\r\n\r\n  color: ${primary};\r\n  line-height: 48px;\r\n  text-decoration: none;\r\n`;\r\n\r\nconst HighlightTop = styled.div``;\r\n\r\nconst HightlightStat = styled.div`\r\n  font-size: 48px;\r\n  font-weight: bold;\r\n  padding: 5px;\r\n  transition: all 0.2s ease-in-out;\r\n  background: ${bgSecondary};\r\n\r\n  &:hover {\r\n    transform: scale(1.1);\r\n  }\r\n`;\r\n\r\nconst HightlightBottom = styled.div``;\r\n\r\nconst Highlight = ({ url, renderTitle, renderHighlight, renderSubtitle }) => (\r\n  <HighlightContainer href={url} target=\"_blank\">\r\n    <HighlightTop>{renderTitle()}</HighlightTop>\r\n    <HightlightStat>{renderHighlight()}</HightlightStat>\r\n    <HightlightBottom>{renderSubtitle()}</HightlightBottom>\r\n  </HighlightContainer>\r\n);\r\n\r\nHighlight.defaultProps = {\r\n  renderTitle: () => undefined,\r\n  renderHighlight: () => undefined,\r\n  renderSubtitle: () => undefined,\r\n  url: undefined,\r\n};\r\n\r\nHighlight.propTypes = {\r\n  renderTitle: PropTypes.func,\r\n  renderHighlight: PropTypes.func,\r\n  renderSubtitle: PropTypes.func,\r\n  url: PropTypes.string,\r\n};\r\n\r\nexport default Highlight;\r\n","import Highlight from './Highlight';\r\n\r\nexport default Highlight;\r\n","import { useState, useEffect } from 'react';\r\n\r\nexport default ref => {\r\n  const [hasElementEntered, setHasElementEntered] = useState(false);\r\n  const checkIfVisible = e => {\r\n    try {\r\n      const { top, right, bottom, left } = e.getBoundingClientRect();\r\n      return (\r\n        top >= 0 &&\r\n        left >= 0 &&\r\n        bottom <=\r\n          (window.innerHeight || document.documentElement.clientHeight) &&\r\n        right <= (window.innerWidth || document.documentElement.clientWidth)\r\n      );\r\n    } catch (error) {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  useEffect(\r\n    () => {\r\n      const listener = () => {\r\n        if (checkIfVisible(ref.current)) {\r\n          setHasElementEntered(true);\r\n          return true;\r\n        }\r\n        return false;\r\n      };\r\n      if (!listener()) {\r\n        if (ref) {\r\n          window.addEventListener('scroll', listener);\r\n          window.addEventListener('resize', listener);\r\n        }\r\n        return () => {\r\n          window.removeEventListener('scroll', listener);\r\n          window.removeEventListener('resize', listener);\r\n        };\r\n      }\r\n      return () => undefined;\r\n    },\r\n    [ref]\r\n  );\r\n\r\n  return hasElementEntered;\r\n};\r\n","import dateFormat from 'date-fns/format';\r\nimport { truncate } from 'lodash-es';\r\nimport React, { useRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport Highlight from '../Highlight';\r\nimport useHasElementEntered from '../../hooks/useHasElementEntered';\r\nimport { primary } from '../colors';\r\n\r\nconst borderThickness = 5;\r\nconst singleBorderThickness = borderThickness / 2;\r\n\r\nconst HighlightsContainer = styled.div`\r\n  min-height: 500px;\r\n  padding: 50px 20px;\r\n  position: relative;\r\n\r\n  & > *:nth-child(1) {\r\n    position: relative;\r\n  }\r\n  & > *:nth-child(1):after {\r\n    content: '';\r\n    background: ${primary};\r\n    position: absolute;\r\n    bottom: 25%;\r\n    right: -${singleBorderThickness}px;\r\n    height: ${props => (props.showBorders ? 50 : 0)}%;\r\n    width: ${borderThickness}px;\r\n    transition: all 1s ease-in-out;\r\n  }\r\n  & > *:nth-child(1):before {\r\n    content: '';\r\n    background: ${primary};\r\n    position: absolute;\r\n    right: 25%;\r\n    bottom: -${singleBorderThickness}px;\r\n    width: ${props => (props.showBorders ? 50 : 0)}%;\r\n    height: ${borderThickness}px;\r\n    transition: all 1s ease-in-out;\r\n  }\r\n\r\n  & > *:nth-child(2) {\r\n    position: relative;\r\n  }\r\n  & > *:nth-child(2):after {\r\n    content: '';\r\n    background: ${primary};\r\n    position: absolute;\r\n    left: 25%;\r\n    bottom: -${singleBorderThickness}px;\r\n    width: ${props => (props.showBorders ? 50 : 0)}%;\r\n    height: ${borderThickness}px;\r\n    transition: all 1s ease-in-out;\r\n  }\r\n\r\n  & > *:nth-child(3) {\r\n    position: relative;\r\n  }\r\n  & > *:nth-child(3):after {\r\n    content: '';\r\n    background: ${primary};\r\n    position: absolute;\r\n    top: 25%;\r\n    right: -${singleBorderThickness}px;\r\n    height: ${props => (props.showBorders ? 50 : 0)}%;\r\n    width: ${borderThickness}px;\r\n    transition: all 1s ease-in-out;\r\n  }\r\n\r\n  & > *:nth-child(4) {\r\n    position: relative;\r\n  }\r\n`;\r\n\r\nconst Highlights = ({ longestRun, mostFrequentRun, biggestFan, totalRuns }) => {\r\n  const containerRef = useRef();\r\n  const hasElementEntered = useHasElementEntered(containerRef);\r\n  return (\r\n    <HighlightsContainer ref={containerRef} showBorders={hasElementEntered}>\r\n      <Highlight\r\n        url={`https://www.strava.com/activities/${longestRun.id}`}\r\n        renderTitle={() => (\r\n          <span>\r\n            Your longest run was{' '}\r\n            <strong>\r\n              {truncate(longestRun.name, {\r\n                separator: /,? +/,\r\n              })}\r\n            </strong>\r\n          </span>\r\n        )}\r\n        renderHighlight={() => (\r\n          <strong>{(longestRun.distance / 1000).toPrecision(5)} km</strong>\r\n        )}\r\n        renderSubtitle={() => (\r\n          <span>\r\n            Done on {dateFormat(longestRun.date, 'dddd DD MMMM YYYY')}\r\n          </span>\r\n        )}\r\n      />\r\n      <Highlight\r\n        url={`https://www.strava.com/activities/${mostFrequentRun.id}`}\r\n        renderTitle={() => (\r\n          <span>\r\n            Your most frequent run is{' '}\r\n            <strong>\r\n              {truncate(mostFrequentRun.name, {\r\n                separator: /,? +/,\r\n              })}\r\n            </strong>\r\n          </span>\r\n        )}\r\n        renderHighlight={() => <strong>{mostFrequentRun.count} times</strong>}\r\n        renderSubtitle={() => (\r\n          <span>\r\n            Last run on{' '}\r\n            <em>{dateFormat(mostFrequentRun.date, 'dddd DD MMMM YYYY')}</em>\r\n          </span>\r\n        )}\r\n      />\r\n      <Highlight\r\n        url={`https://www.strava.com/athletes/${biggestFan.id}`}\r\n        renderTitle={() => (\r\n          <span>\r\n            Your biggest fan is <strong>{biggestFan.name}</strong>\r\n          </span>\r\n        )}\r\n        renderHighlight={() => <img src={biggestFan.picture} alt=\"\" />}\r\n        renderSubtitle={() => <strong>{biggestFan.count} total kudos!</strong>}\r\n      />\r\n      <Highlight\r\n        url={`https://www.strava.com/athletes/${totalRuns.athleteId}`}\r\n        renderTitle={() => <span>You have run a total of</span>}\r\n        renderHighlight={() => <strong>{totalRuns.count} times</strong>}\r\n        renderSubtitle={() => <span>so far!</span>}\r\n      />\r\n    </HighlightsContainer>\r\n  );\r\n};\r\n\r\nHighlights.propTypes = {\r\n  longestRun: PropTypes.shape({\r\n    id: PropTypes.number,\r\n    name: PropTypes.string,\r\n    date: PropTypes.string,\r\n    distance: PropTypes.number,\r\n  }).isRequired,\r\n  mostFrequentRun: PropTypes.shape({\r\n    id: PropTypes.number,\r\n    name: PropTypes.string,\r\n    date: PropTypes.string,\r\n    count: PropTypes.number,\r\n  }).isRequired,\r\n  biggestFan: PropTypes.shape({\r\n    id: PropTypes.number,\r\n    name: PropTypes.string,\r\n    picture: PropTypes.string,\r\n    count: PropTypes.number,\r\n  }).isRequired,\r\n  totalRuns: PropTypes.shape({\r\n    athleteId: PropTypes.number,\r\n    count: PropTypes.number,\r\n  }),\r\n};\r\n\r\nexport default Highlights;\r\n","import Highlights from './Highlights';\r\n\r\nexport default Highlights;\r\n","import { createContext } from 'react';\r\n\r\nexport default createContext({\r\n  type: '',\r\n  id: undefined,\r\n  setSelectedItem: () => undefined,\r\n});\r\n","import React, { useRef, useEffect, useContext } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport { maxBy, take, find } from 'lodash-es';\r\nimport { select } from 'd3-selection';\r\nimport { scaleLinear, scaleBand } from 'd3-scale';\r\nimport { axisBottom } from 'd3-axis';\r\nimport { easeQuadOut, easeQuadInOut } from 'd3-ease';\r\nimport 'd3-transition';\r\nimport { secondary, bgSecondary, active } from '../colors';\r\nimport useHasElementEntered from '../../hooks/useHasElementEntered';\r\nimport SelectedItemContext from '../../contexts/SelectedItemContext';\r\n\r\nconst Chart = styled.div`\r\n  & .x-axis text {\r\n    font-size: 16px;\r\n    text-anchor: middle;\r\n    font-family: Acme;\r\n  }\r\n\r\n  & .bar {\r\n    fill: ${secondary};\r\n\r\n    &:hover,\r\n    &--selected {\r\n      fill: ${active};\r\n    }\r\n  }\r\n\r\n  & .kudoser {\r\n    cursor: pointer;\r\n\r\n    & .label {\r\n      text-anchor: start;\r\n      font-size: 24px;\r\n      fill: white;\r\n      pointer-events: none;\r\n    }\r\n  }\r\n`;\r\n\r\nconst ChartTopKudosers = props => {\r\n  const { setSelectedItem, ...selectedItem } = useContext(SelectedItemContext);\r\n  const chart = useRef();\r\n  const hasElementEntered = useHasElementEntered(chart);\r\n  const xScaleRef = useRef();\r\n  const xAxisRef = useRef();\r\n  const yScaleRef = useRef();\r\n  const containerRef = useRef();\r\n  const xAxisContainerRef = useRef();\r\n  const kudosers = take(props.kudosers, 10);\r\n\r\n  // SVG creation (only run once)\r\n  useEffect(\r\n    () => {\r\n      const margin = { top: 10, right: 10, bottom: 30, left: 10 };\r\n      const width = 600 - margin.left - margin.right;\r\n      const height = 500 - margin.top - margin.bottom;\r\n\r\n      const svg = select(chart.current)\r\n        .append('svg')\r\n        .attr(\r\n          'viewBox',\r\n          `0 0 ${width + margin.left + margin.right} ${height +\r\n            margin.top +\r\n            margin.bottom}`\r\n        );\r\n\r\n      // background\r\n      svg\r\n        .append('rect')\r\n        .attr('fill', bgSecondary)\r\n        .attr('x', 0)\r\n        .attr('y', 0)\r\n        .attr('width', width + margin.left + margin.right)\r\n        .attr('height', height + margin.top + margin.bottom);\r\n\r\n      // main container\r\n      const container = svg\r\n        .append('g')\r\n        .attr('class', 'container')\r\n        .attr('transform', `translate(${margin.left}, ${margin.top})`);\r\n      containerRef.current = container;\r\n\r\n      // x-axis container\r\n      xAxisContainerRef.current = container\r\n        .append('g')\r\n        .attr('class', 'x-axis')\r\n        .attr('transform', `translate(0, ${height})`);\r\n\r\n      xScaleRef.current = scaleLinear().range([0, width]);\r\n      yScaleRef.current = scaleBand()\r\n        .padding(0.2)\r\n        .range([0, height]);\r\n      xAxisRef.current = axisBottom(xScaleRef.current);\r\n    },\r\n    [chart]\r\n  );\r\n\r\n  // SVG drawing and update\r\n  useEffect(\r\n    () => {\r\n      if (hasElementEntered) {\r\n        const xScale = xScaleRef.current;\r\n        const yScale = yScaleRef.current;\r\n        const xAxis = xAxisRef.current;\r\n        const container = containerRef.current;\r\n        const xAxisContainer = xAxisContainerRef.current;\r\n\r\n        // set domains\r\n        xScale.domain([\r\n          0,\r\n          maxBy(kudosers, ({ kudosCount }) => kudosCount).kudosCount,\r\n        ]);\r\n        yScale.domain(kudosers.map(d => d.id));\r\n\r\n        // update scales\r\n        xAxis.scale(xScale);\r\n        xAxisContainer.call(xAxis).selectAll('text');\r\n\r\n        const enter = container\r\n          .selectAll('rect')\r\n          .data(kudosers)\r\n          .enter();\r\n\r\n        const g = enter\r\n          .append('g')\r\n          .attr('class', 'kudoser')\r\n          .on('click', d =>\r\n            window.open(`https://www.strava.com/athletes/${d.id}`, '_blank')\r\n          )\r\n          .on('mouseover', ({ id }) => setSelectedItem({ type: 'KUDOSER', id }))\r\n          .on('mouseout', () => setSelectedItem());\r\n        g.append('rect')\r\n          .attr('class', 'bar')\r\n          .attr('y', d => yScale(d.id))\r\n          .attr('height', yScale.bandwidth())\r\n          .transition()\r\n          .duration(750)\r\n          .ease(easeQuadOut)\r\n          .attr('x', () => 0)\r\n          .attr('width', d => xScale(d.kudosCount));\r\n        const textContainer = g.append('g');\r\n        textContainer\r\n          .attr('opacity', 0)\r\n          .transition()\r\n          .duration(500)\r\n          .delay((d, i) => 750 + i * 50)\r\n          .ease(easeQuadInOut)\r\n          .attr('opacity', 1);\r\n        textContainer\r\n          .append('text')\r\n          .attr('class', 'label')\r\n          .attr('y', d => yScale(d.id) + 28)\r\n          .transition()\r\n          .duration(500)\r\n          .delay((d, i) => 750 + i * 50)\r\n          .ease(easeQuadInOut)\r\n          .attr('x', () => 5)\r\n          .text(d => `${d.firstname} ${d.lastname}`);\r\n      }\r\n    },\r\n    [kudosers, chart, hasElementEntered]\r\n  );\r\n\r\n  // selected item\r\n  useEffect(\r\n    () => {\r\n      if (hasElementEntered) {\r\n        const { id, type } = selectedItem;\r\n\r\n        let selectedKudoser;\r\n        switch (type) {\r\n          case 'KUDOSER':\r\n            selectedKudoser = find(kudosers, k => k.id === id);\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n        const container = containerRef.current;\r\n        const update = container\r\n          .selectAll('.bar')\r\n          .data(selectedKudoser ? [selectedKudoser] : [], d => d.id);\r\n        update.classed('bar--selected', true);\r\n        update.exit().classed('bar--selected', false);\r\n      }\r\n    },\r\n    [selectedItem, kudosers, hasElementEntered, chart]\r\n  );\r\n\r\n  return <Chart className=\"ChartTopKudosers\" ref={chart} />;\r\n};\r\n\r\nChartTopKudosers.propTypes = {\r\n  kudosers: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number,\r\n      firstname: PropTypes.string,\r\n      lastname: PropTypes.string,\r\n      kudosCount: PropTypes.number,\r\n    })\r\n  ),\r\n};\r\n\r\nChartTopKudosers.defaultProps = {\r\n  kudosers: [],\r\n};\r\n\r\nexport default ChartTopKudosers;\r\n","import ChartTopKudosers from './ChartTopKudosers';\r\n\r\nexport default ChartTopKudosers;\r\n","import React, { useContext } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport SelectedItemContext from '../../contexts/SelectedItemContext';\r\nimport { primary, secondary, active } from '../colors';\r\n\r\nconst OList = styled.ol``;\r\n\r\nconst UList = styled.ul``;\r\n\r\nconst ListItem = styled.li`\r\n  font-size: 24px;\r\n  line-height: 32px;\r\n`;\r\n\r\nconst Link = styled.a`\r\n  color: ${primary};\r\n  text-decoration: underline;\r\n\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    color: ${secondary};\r\n  }\r\n\r\n  &:active,\r\n  &.selected {\r\n    color: ${active};\r\n  }\r\n`;\r\n\r\nconst Text = styled.span`\r\n  &.selected {\r\n    color: ${active};\r\n  }\r\n`;\r\n\r\nconst ReferenceList = ({ items, ordered }) => {\r\n  const { setSelectedItem, ...selectedItem } = useContext(SelectedItemContext);\r\n  const ReferenceList = ordered ? OList : UList;\r\n  return (\r\n    <ReferenceList>\r\n      {items.map(({ label, onClick, id, type }, key) => {\r\n        const props = {\r\n          onMouseOver: () => setSelectedItem({ type, id }),\r\n          onMouseOut: () => setSelectedItem(),\r\n          className:\r\n            selectedItem.type === type && id === selectedItem.id\r\n              ? 'selected'\r\n              : '',\r\n        };\r\n        return (\r\n          <ListItem key={key}>\r\n            {onClick ? (\r\n              <Link {...props} onClick={onClick}>\r\n                {label}\r\n              </Link>\r\n            ) : (\r\n              <Text {...props}>{label}</Text>\r\n            )}\r\n          </ListItem>\r\n        );\r\n      })}\r\n    </ReferenceList>\r\n  );\r\n};\r\n\r\nReferenceList.propTypes = {\r\n  items: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      label: PropTypes.string,\r\n      onClick: PropTypes.func,\r\n      id: PropTypes.number,\r\n      type: PropTypes.string,\r\n    })\r\n  ),\r\n  ordered: PropTypes.bool,\r\n};\r\n\r\nReferenceList.defaultProps = {\r\n  items: [],\r\n  ordered: false,\r\n};\r\n\r\nexport default ReferenceList;\r\n","import ReferenceList from './ReferenceList';\r\n\r\nexport default ReferenceList;\r\n","import { axisBottom, axisLeft } from 'd3-axis';\r\nimport { easeQuadOut } from 'd3-ease';\r\nimport { scaleLinear, scaleQuantize, scaleTime } from 'd3-scale';\r\nimport { select } from 'd3-selection';\r\nimport { transition } from 'd3-transition';\r\nimport dateSubYears from 'date-fns/sub_years';\r\nimport { maxBy, minBy, random, find } from 'lodash-es';\r\nimport PropTypes from 'prop-types';\r\nimport React, { useEffect, useMemo, useRef, useContext } from 'react';\r\nimport styled from 'styled-components';\r\nimport { active, bgSecondary, primary, secondary } from '../colors';\r\nimport useHasElementEntered from '../../hooks/useHasElementEntered';\r\nimport SelectedItemContext from '../../contexts/SelectedItemContext';\r\n\r\nconst Chart = styled.div`\r\n  font-size: 16px;\r\n\r\n  & .x-axis,\r\n  & .y-axis {\r\n    fill: ${bgSecondary};\r\n\r\n    & text {\r\n      font-size: 16px;\r\n      font-family: Acme;\r\n    }\r\n  }\r\n\r\n  & .runs {\r\n    cursor: pointer;\r\n\r\n    & .circle {\r\n      fill: ${secondary};\r\n      stroke: ${primary};\r\n      stroke-width: 1;\r\n      position: relative;\r\n      z-index: 5;\r\n\r\n      &:hover,\r\n      &--selected {\r\n        fill: ${active};\r\n\r\n        + .text {\r\n          visibility: visible;\r\n        }\r\n      }\r\n    }\r\n\r\n    & .text {\r\n      font-family: sans-serif;\r\n      text-anchor: middle;\r\n      fill: ${primary};\r\n      position: relative;\r\n      z-index: 10;\r\n      pointer-events: none;\r\n      visibility: hidden;\r\n    }\r\n  }\r\n`;\r\n\r\nconst ChartRunsByFrequency = ({\r\n  matchingRunsBySegmentGroups,\r\n  matchingRunsByHighestBestEfforts,\r\n  matchingRunsBySegments,\r\n  showSegmentGroupRuns,\r\n  showSegmentRuns,\r\n  showBestEffortRuns,\r\n}) => {\r\n  const margin = { top: 60, right: 60, bottom: 60, left: 60 };\r\n  const width = 800 - margin.left - margin.right;\r\n  const height = 600 - margin.top - margin.bottom;\r\n  const { setSelectedItem, ...selectedItem } = useContext(SelectedItemContext);\r\n  const chart = useRef();\r\n  const hasElementEntered = useHasElementEntered(chart);\r\n  const xScaleRef = useRef();\r\n  const xAxisRef = useRef();\r\n  const yScaleRef = useRef();\r\n  const yAxisRef = useRef();\r\n  const radiusScaleRef = useRef();\r\n  const containerRef = useRef();\r\n  const xAxisContainerRef = useRef();\r\n  const yAxisContainerRef = useRef();\r\n  const runsBySegmentGroupsWithType = useMemo(\r\n    () =>\r\n      showSegmentGroupRuns\r\n        ? matchingRunsBySegmentGroups.map(r => ({\r\n            ...r,\r\n            type: 'SEGMENT_GROUP',\r\n          }))\r\n        : [],\r\n    [matchingRunsBySegmentGroups, showSegmentGroupRuns]\r\n  );\r\n  const runsByHighestBestEffortsWithType = useMemo(\r\n    () =>\r\n      showBestEffortRuns\r\n        ? matchingRunsByHighestBestEfforts.map(r => ({\r\n            ...r,\r\n            type: 'HIGHEST_BEST_EFFORT',\r\n          }))\r\n        : [],\r\n    [matchingRunsByHighestBestEfforts, showBestEffortRuns]\r\n  );\r\n  const runsBySegmentsWithType = useMemo(\r\n    () =>\r\n      showSegmentRuns\r\n        ? matchingRunsBySegments.map(r => ({ ...r, type: 'SEGMENT' }))\r\n        : [],\r\n    [matchingRunsBySegments, showSegmentRuns]\r\n  );\r\n  const allRuns = useMemo(\r\n    () => [\r\n      ...runsByHighestBestEffortsWithType,\r\n      ...runsBySegmentGroupsWithType,\r\n      ...runsBySegmentsWithType,\r\n    ],\r\n    [\r\n      matchingRunsByHighestBestEfforts,\r\n      matchingRunsBySegmentGroups,\r\n      matchingRunsBySegments,\r\n      showBestEffortRuns,\r\n      showSegmentGroupRuns,\r\n      showSegmentRuns,\r\n    ]\r\n  );\r\n\r\n  // SVG creation\r\n  useEffect(\r\n    () => {\r\n      const svg = select(chart.current)\r\n        .append('svg')\r\n        .attr(\r\n          'viewBox',\r\n          `0 0 ${width + margin.left + margin.right} ${height +\r\n            margin.top +\r\n            margin.bottom}`\r\n        );\r\n\r\n      // main container\r\n      const container = svg\r\n        .append('g')\r\n        .attr('class', 'container')\r\n        .attr('transform', `translate(${margin.left}, ${margin.top})`);\r\n      containerRef.current = container;\r\n\r\n      // x-axis container\r\n      xAxisContainerRef.current = container\r\n        .append('g')\r\n        .attr('class', 'x-axis')\r\n        .attr('transform', `translate(0, ${height})`);\r\n\r\n      // y-axis container\r\n      yAxisContainerRef.current = container.append('g').attr('class', 'y-axis');\r\n\r\n      xScaleRef.current = scaleTime().range([0, width]);\r\n      yScaleRef.current = scaleLinear().range([0, height]);\r\n      radiusScaleRef.current = scaleQuantize().range([5, 10, 20, 30, 50]);\r\n      xAxisRef.current = axisBottom(xScaleRef.current);\r\n      yAxisRef.current = axisLeft(yAxisRef.current).ticks(10, '~s');\r\n    },\r\n    [chart]\r\n  );\r\n\r\n  // SVG drawing and updating\r\n  useEffect(\r\n    () => {\r\n      if (hasElementEntered) {\r\n        const xScale = xScaleRef.current;\r\n        const yScale = yScaleRef.current;\r\n        const radiusScale = radiusScaleRef.current;\r\n        const xAxis = xAxisRef.current;\r\n        const yAxis = yAxisRef.current;\r\n        const container = containerRef.current;\r\n        const xAxisContainer = xAxisContainerRef.current;\r\n        const yAxisContainer = yAxisContainerRef.current;\r\n\r\n        if (allRuns.length === 0) {\r\n          const now = Date.now();\r\n          xScale.domain([dateSubYears(now, 1), now]);\r\n          yScale.domain([21097, 0]);\r\n          radiusScale.domain([0, 5]);\r\n        } else {\r\n          xScale.domain([\r\n            minBy(allRuns, ({ date }) => date).date,\r\n            maxBy(allRuns, ({ date }) => date).date,\r\n          ]);\r\n          yScale.domain([\r\n            maxBy(allRuns, ({ distance }) => distance).distance,\r\n            0,\r\n          ]);\r\n          radiusScale.domain([0, maxBy(allRuns, ({ count }) => count).count]);\r\n        }\r\n\r\n        const axisTransition = transition()\r\n          .duration(750)\r\n          .ease(easeQuadOut);\r\n\r\n        xAxis.scale(xScale);\r\n        yAxis.scale(yScale);\r\n\r\n        xAxisContainer.transition(axisTransition).call(xAxis);\r\n\r\n        yAxisContainer.transition(axisTransition).call(yAxis);\r\n\r\n        const update = container.selectAll('g.runs').data(allRuns, d => d.id);\r\n        const enter = update.enter();\r\n        const exit = update.exit();\r\n\r\n        // fade away exit selection\r\n        const t = transition().duration(250);\r\n        exit\r\n          .select('circle')\r\n          .transition(t)\r\n          .attr('r', 0);\r\n        exit\r\n          .transition(t)\r\n          .attr('opacity', 0)\r\n          .remove();\r\n\r\n        // resize update selection\r\n        update\r\n          .select('circle')\r\n          .transition(t)\r\n          .attr('r', d => radiusScale(d.count));\r\n\r\n        // enter selection\r\n        const g = enter\r\n          .append('g')\r\n          .attr('opacity', 1)\r\n          .attr('class', 'runs')\r\n          .on('click', d => {\r\n            switch (d.type) {\r\n              case 'HIGHEST_BEST_EFFORT':\r\n                window.open(`/BestEffort/${d.id}`, '_self');\r\n                break;\r\n              case 'SEGMENT_GROUP':\r\n                window.open(`/SegmentGroup/${d.id}`, '_self');\r\n                break;\r\n              case 'SEGMENT':\r\n                window.open(`/Segment/${d.id}`, '_self');\r\n                break;\r\n              default:\r\n                break;\r\n            }\r\n          })\r\n          .on('mouseover', setSelectedItem)\r\n          .on('mouseout', () => setSelectedItem());\r\n        g.append('circle')\r\n          .attr('class', 'circle')\r\n          .attr('r', 0)\r\n          .attr('cx', d => xScale(d.date))\r\n          .attr('cy', d => yScale(d.distance))\r\n          .transition(t)\r\n          .delay(() => random(750))\r\n          .attr('r', d => radiusScale(d.count));\r\n        g.append('text')\r\n          .attr('class', 'text')\r\n          .attr('x', d => xScale(d.date))\r\n          .attr('y', d => yScale(d.distance))\r\n          .text(d => d.label);\r\n      }\r\n    },\r\n    [allRuns, chart, hasElementEntered]\r\n  );\r\n\r\n  // selected item\r\n  useEffect(\r\n    () => {\r\n      if (hasElementEntered) {\r\n        const yScale = yScaleRef.current;\r\n        const radiusScale = radiusScaleRef.current;\r\n        const container = containerRef.current;\r\n\r\n        const { type, id } = selectedItem;\r\n        let runsToScan = [];\r\n        switch (type) {\r\n          case 'HIGHEST_BEST_EFFORT':\r\n            runsToScan = runsByHighestBestEffortsWithType;\r\n            break;\r\n          case 'SEGMENT_GROUP':\r\n            runsToScan = runsBySegmentGroupsWithType;\r\n            break;\r\n          case 'SEGMENT':\r\n            runsToScan = runsBySegmentsWithType;\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n        const selectedRun = find(runsToScan, run => run.id === id);\r\n        const t = transition().duration(250);\r\n        const update = container\r\n          .selectAll('g.runs')\r\n          .data(selectedRun ? [selectedRun] : [], d => d.id);\r\n        update.select('.circle').classed('circle--selected', true);\r\n        update\r\n          .select('.text')\r\n          .transition(t)\r\n          .attr('y', d => yScale(d.distance) - radiusScale(d.count) - 5);\r\n\r\n        const exit = update.exit();\r\n        exit.select('.circle').classed('circle--selected', false);\r\n        exit.select('.text').attr('y', d => yScale(d.distance));\r\n      }\r\n    },\r\n    [allRuns, chart, hasElementEntered, selectedItem]\r\n  );\r\n\r\n  return <Chart className=\"ChartRunsByFrequency\" ref={chart} />;\r\n};\r\n\r\nChartRunsByFrequency.defaultProps = {\r\n  matchingRunsPerSegmentGroups: [],\r\n  matchingRunsByHighestBestEfforts: [],\r\n  matchingRunsPerSegments: [],\r\n  showBestEffortRuns: false,\r\n  showSegmentGroupRuns: false,\r\n  showSegmentRuns: false,\r\n};\r\n\r\nChartRunsByFrequency.propTypes = {\r\n  matchingRunsBySegmentGroups: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number,\r\n      count: PropTypes.number,\r\n      label: PropTypes.string,\r\n      distance: PropTypes.number,\r\n      date: PropTypes.instanceOf(Date),\r\n    })\r\n  ),\r\n  matchingRunsByHighestBestEfforts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number,\r\n      count: PropTypes.number,\r\n      label: PropTypes.string,\r\n      distance: PropTypes.number,\r\n      date: PropTypes.instanceOf(Date),\r\n    })\r\n  ),\r\n  matchingRunsBySegments: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number,\r\n      count: PropTypes.number,\r\n      label: PropTypes.string,\r\n      distance: PropTypes.number,\r\n      date: PropTypes.instanceOf(Date),\r\n    })\r\n  ),\r\n  showBestEffortRuns: PropTypes.bool,\r\n  showSegmentGroupRuns: PropTypes.bool,\r\n  showSegmentRuns: PropTypes.bool,\r\n};\r\n\r\nexport default ChartRunsByFrequency;\r\n","import ChartRunsByFrequency from './ChartRunsByFrequency';\r\n\r\nexport default ChartRunsByFrequency;\r\n","import {\r\n  values,\r\n  mapValues,\r\n  find,\r\n  maxBy,\r\n  pickBy,\r\n  isEmpty,\r\n  head,\r\n  last,\r\n  orderBy,\r\n  truncate,\r\n} from 'lodash-es';\r\nimport React, { useMemo } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport Highlights from '../Highlights';\r\nimport ChartTopKudosers from '../ChartTopKudosers';\r\nimport ReferenceList from '../ReferenceList';\r\nimport ChartRunsByFrequency from '../ChartRunsByFrequency';\r\n\r\nconst Section = styled.section`\r\n  margin: 50px 20px;\r\n  position: relative;\r\n  display: flex;\r\n`;\r\n\r\nconst SectionTitle = styled.h2`\r\n  font-size: 48px;\r\n  text-align: center;\r\n`;\r\n\r\nconst SectionGraph = styled.div`\r\n  flex: 2;\r\n  max-height: 600px;\r\n`;\r\n\r\nconst SectionList = styled.div`\r\n  flex: 1;\r\n`;\r\n\r\nexport const Summary = props => {\r\n  const {\r\n    athleteId,\r\n    longestRun,\r\n    biggestFan,\r\n    totalRuns,\r\n    topKudosers,\r\n    matchingRunsBySegmentGroups,\r\n    matchingRunsByHighestBestEfforts,\r\n    matchingRunsBySegments,\r\n    history,\r\n  } = props;\r\n  const chartDataForSegmentGroups = useMemo(\r\n    () =>\r\n      values(\r\n        mapValues(matchingRunsBySegmentGroups, (v, k) => {\r\n          const { distance } = maxBy(v, a => a.distance);\r\n          const { name, id } = head(v);\r\n\r\n          return {\r\n            id,\r\n            count: v.length,\r\n            label: name,\r\n            distance: distance,\r\n            date: new Date(maxBy(v, a => a.start_date).start_date),\r\n          };\r\n        })\r\n      ),\r\n    [matchingRunsBySegmentGroups]\r\n  );\r\n  const chartDataForSegments = useMemo(\r\n    () =>\r\n      values(\r\n        mapValues(matchingRunsBySegments, (v, k) => {\r\n          const { name, distance, id } = find(\r\n            v[0].segment_efforts,\r\n            segE => segE.segment.id.toString() === k\r\n          ).segment;\r\n\r\n          return {\r\n            id,\r\n            count: v.length,\r\n            label: name,\r\n            distance: distance,\r\n            date: new Date(maxBy(v, a => a.start_date).start_date),\r\n          };\r\n        })\r\n      ),\r\n    [matchingRunsBySegments]\r\n  );\r\n  const chartDataForBestEfforts = useMemo(\r\n    () =>\r\n      values(\r\n        mapValues(\r\n          pickBy(matchingRunsByHighestBestEfforts, v => !isEmpty(v)),\r\n          (v, k) => {\r\n            const { name, distance } = find(\r\n              v[0].best_efforts,\r\n              be => be.distance.toString() === k\r\n            );\r\n            return {\r\n              id: distance,\r\n              count: v.length,\r\n              label: name,\r\n              distance: distance,\r\n              date: new Date(maxBy(v, a => a.start_date).start_date),\r\n            };\r\n          }\r\n        )\r\n      ),\r\n    [matchingRunsByHighestBestEfforts]\r\n  );\r\n  const [mostFrequentRun, mostFrequentCount] = useMemo(\r\n    () => {\r\n      const mostFrequentRuns = maxBy(\r\n        values(matchingRunsBySegmentGroups),\r\n        v => v.length\r\n      );\r\n      return [last(mostFrequentRuns), mostFrequentRuns.length];\r\n    },\r\n    [matchingRunsBySegmentGroups]\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <Highlights\r\n        longestRun={{\r\n          id: longestRun.id,\r\n          name: longestRun.name,\r\n          distance: longestRun.distance,\r\n          date: longestRun.start_date,\r\n        }}\r\n        mostFrequentRun={{\r\n          id: mostFrequentRun.id,\r\n          name: mostFrequentRun.name,\r\n          count: mostFrequentCount,\r\n          date: new Date(mostFrequentRun.start_date).toISOString(),\r\n        }}\r\n        biggestFan={{\r\n          id: biggestFan.id,\r\n          name: `${biggestFan.firstname} ${biggestFan.lastname}`,\r\n          count: biggestFan.kudosCount,\r\n          picture: biggestFan.profile,\r\n        }}\r\n        totalRuns={{ athleteId, count: totalRuns.count }}\r\n      />\r\n      <SectionTitle>Your most frequent runs</SectionTitle>\r\n      <Section>\r\n        <SectionGraph>\r\n          <ChartRunsByFrequency\r\n            matchingRunsBySegmentGroups={chartDataForSegmentGroups}\r\n            matchingRunsByHighestBestEfforts={chartDataForBestEfforts}\r\n            matchingRunsBySegments={chartDataForSegments}\r\n            showBestEffortRuns\r\n            showSegmentGroupRuns\r\n          />\r\n        </SectionGraph>\r\n        <SectionList>\r\n          <ReferenceList\r\n            ordered\r\n            items={orderBy(\r\n              [\r\n                ...chartDataForSegmentGroups.map(v => ({\r\n                  ...v,\r\n                  type: 'SEGMENT_GROUP',\r\n                  onClick: () => history.push(`/SegmentGroup/${v.id}`),\r\n                })),\r\n                ...chartDataForBestEfforts.map(v => ({\r\n                  ...v,\r\n                  type: 'HIGHEST_BEST_EFFORT',\r\n                  onClick: () => history.push(`/HighestBestEffort/${v.id}`),\r\n                })),\r\n              ],\r\n              'count',\r\n              'desc'\r\n            ).map(({ label, count, id, type, onClick }) => ({\r\n              onClick,\r\n              label: `${truncate(label, {\r\n                separator: /,? +/,\r\n              })} (${count})`,\r\n              id,\r\n              type,\r\n            }))}\r\n          />\r\n        </SectionList>\r\n      </Section>\r\n      <SectionTitle>People who give you the most kudos</SectionTitle>\r\n      <Section>\r\n        <SectionGraph>\r\n          <ChartTopKudosers kudosers={topKudosers} />\r\n        </SectionGraph>\r\n        <SectionList>\r\n          <ReferenceList\r\n            ordered\r\n            items={topKudosers.map(\r\n              ({ id, kudosCount, firstname, lastname }) => ({\r\n                onClick: () =>\r\n                  window.open(\r\n                    `https://www.strava.com/athletes/${id}`,\r\n                    '_blank'\r\n                  ),\r\n                label: `${firstname} ${lastname} (${kudosCount})`,\r\n                id,\r\n                type: 'KUDOSER',\r\n              })\r\n            )}\r\n          />\r\n        </SectionList>\r\n      </Section>\r\n    </div>\r\n  );\r\n};\r\n\r\nSummary.propTypes = {\r\n  athleteId: PropTypes.number,\r\n  longestRun: PropTypes.shape({\r\n    id: PropTypes.number,\r\n    name: PropTypes.string,\r\n    distance: PropTypes.number,\r\n    start_date: PropTypes.string,\r\n  }),\r\n  biggestFan: PropTypes.shape({\r\n    id: PropTypes.number,\r\n    kudosCount: PropTypes.number,\r\n    firstname: PropTypes.string,\r\n    lastname: PropTypes.string,\r\n    profile: PropTypes.string,\r\n  }),\r\n  totalRuns: PropTypes.shape({\r\n    count: PropTypes.number,\r\n  }),\r\n  topKudosers: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number,\r\n      kudosCount: PropTypes.number,\r\n      firstname: PropTypes.string,\r\n      lastname: PropTypes.string,\r\n    })\r\n  ),\r\n  matchingRunsBySegmentGroups: PropTypes.objectOf(\r\n    PropTypes.arrayOf(\r\n      PropTypes.shape({\r\n        id: PropTypes.number,\r\n        distance: PropTypes.number,\r\n        name: PropTypes.string,\r\n        start_date: PropTypes.string,\r\n      })\r\n    )\r\n  ),\r\n  matchingRunsByBestEfforts: PropTypes.objectOf(\r\n    PropTypes.arrayOf(\r\n      PropTypes.shape({\r\n        id: PropTypes.number,\r\n        distance: PropTypes.number,\r\n        name: PropTypes.string,\r\n        start_date: PropTypes.string,\r\n      })\r\n    )\r\n  ),\r\n  matchingRunsByHighestBestEfforts: PropTypes.objectOf(\r\n    PropTypes.arrayOf(\r\n      PropTypes.shape({\r\n        id: PropTypes.number,\r\n        distance: PropTypes.number,\r\n        name: PropTypes.string,\r\n        start_date: PropTypes.string,\r\n      })\r\n    )\r\n  ),\r\n  matchingRunsBySegments: PropTypes.objectOf(\r\n    PropTypes.arrayOf(\r\n      PropTypes.shape({\r\n        id: PropTypes.number,\r\n        distance: PropTypes.number,\r\n        name: PropTypes.string,\r\n        start_date: PropTypes.string,\r\n      })\r\n    )\r\n  ),\r\n  history: PropTypes.shape({\r\n    push: PropTypes.func,\r\n  }),\r\n};\r\n\r\nSummary.defaultProps = {\r\n  longestRun: undefined,\r\n  biggestFan: undefined,\r\n  totalRuns: undefined,\r\n  topKudosers: [],\r\n  matchingRunsBySegmentGroups: {},\r\n  matchingRunsByBestEfforts: {},\r\n  matchingRunsByHighestBestEfforts: {},\r\n  matchingRunsBySegments: {},\r\n  history: {\r\n    push: () => undefined,\r\n  },\r\n};\r\n\r\nexport default Summary;\r\n","import Summary from './Summary';\r\n\r\nexport default Summary;\r\n","import { axisBottom, axisLeft } from 'd3-axis';\r\nimport { easeLinear, easeQuadOut } from 'd3-ease';\r\nimport { scaleLinear } from 'd3-scale';\r\nimport { select } from 'd3-selection';\r\nimport { curveCardinal, line, area } from 'd3-shape';\r\nimport { transition } from 'd3-transition';\r\nimport dateAddHours from 'date-fns/add_hours';\r\nimport { find, maxBy, random, sumBy, take } from 'lodash-es';\r\nimport PropTypes from 'prop-types';\r\nimport React, { useContext, useEffect, useMemo, useRef } from 'react';\r\nimport styled from 'styled-components';\r\nimport SelectedItemContext from '../../contexts/SelectedItemContext';\r\nimport useHasElementEntered from '../../hooks/useHasElementEntered';\r\nimport { bgSecondary, secondary, active } from '../colors';\r\n\r\nconst Chart = styled.div`\r\n  font-size: 16px;\r\n\r\n  & .x-axis,\r\n  & .y-axis {\r\n    fill: ${bgSecondary};\r\n\r\n    & text {\r\n      font-size: 16px;\r\n      font-family: Acme;\r\n    }\r\n  }\r\n`;\r\n\r\nconst ChartDistanceComparison = ({ runs, type }) => {\r\n  const margin = { top: 60, right: 60, bottom: 60, left: 60 };\r\n  const width = 800 - margin.left - margin.right;\r\n  const height = 600 - margin.top - margin.bottom;\r\n  const { setSelectedItem, ...selectedItem } = useContext(SelectedItemContext);\r\n  const chart = useRef();\r\n  const hasElementEntered = useHasElementEntered(chart);\r\n  const xScaleRef = useRef();\r\n  const xAxisRef = useRef();\r\n  const yScaleRef = useRef();\r\n  const yAxisRef = useRef();\r\n  const containerRef = useRef();\r\n  const xAxisContainerRef = useRef();\r\n  const yAxisContainerRef = useRef();\r\n  const runsWithColors = useMemo(() =>\r\n    runs.map(\r\n      r => ({\r\n        ...r,\r\n        color: `rgb(${random(64)}, ${random(64)}, ${random(128)})`,\r\n      }),\r\n      [runs]\r\n    )\r\n  );\r\n\r\n  const getTotalTime = r => sumBy(r, ({ time }) => time);\r\n  const getTotalDistance = r => sumBy(r, ({ distance }) => distance);\r\n\r\n  // SVG creation\r\n  useEffect(\r\n    () => {\r\n      const svg = select(chart.current)\r\n        .append('svg')\r\n        .attr(\r\n          'viewBox',\r\n          `0 0 ${width + margin.left + margin.right} ${height +\r\n            margin.top +\r\n            margin.bottom}`\r\n        );\r\n\r\n      // gradient defs\r\n      const areaGradient = svg\r\n        .append('defs')\r\n        .append('linearGradient')\r\n        .attr('id', 'areaGradient');\r\n      areaGradient\r\n        .append('stop')\r\n        .attr('offset', '0%')\r\n        .attr('stop-color', bgSecondary);\r\n      areaGradient\r\n        .append('stop')\r\n        .attr('offset', '100%')\r\n        .attr('stop-color', active);\r\n\r\n      // main container\r\n      const container = svg\r\n        .append('g')\r\n        .attr('class', 'container')\r\n        .attr('transform', `translate(${margin.left}, ${margin.top})`);\r\n      containerRef.current = container;\r\n\r\n      // x-axis container\r\n      xAxisContainerRef.current = container\r\n        .append('g')\r\n        .attr('class', 'x-axis')\r\n        .attr('transform', `translate(0, ${height})`);\r\n\r\n      // y-axis container\r\n      yAxisContainerRef.current = container.append('g').attr('class', 'y-axis');\r\n\r\n      xScaleRef.current = scaleLinear().range([0, width]);\r\n      yScaleRef.current = scaleLinear().range([0, height]);\r\n      xAxisRef.current = axisBottom(xScaleRef.current);\r\n      yAxisRef.current = axisLeft(yAxisRef.current);\r\n    },\r\n    [chart]\r\n  );\r\n\r\n  // SVG drawing and updating\r\n  useEffect(\r\n    () => {\r\n      if (hasElementEntered) {\r\n        const xScale = xScaleRef.current;\r\n        const yScale = yScaleRef.current;\r\n        const xAxis = xAxisRef.current;\r\n        const yAxis = yAxisRef.current;\r\n        const container = containerRef.current;\r\n        const xAxisContainer = xAxisContainerRef.current;\r\n        const yAxisContainer = yAxisContainerRef.current;\r\n\r\n        if (Object.keys(runs).length === 0) {\r\n          xScale.domain([0, dateAddHours(new Date(0), 1).getTime()]);\r\n          yScale.domain([21097, 0]);\r\n        } else {\r\n          xScale.domain([\r\n            0,\r\n            getTotalTime(maxBy(runs.map(({ splits }) => splits), getTotalTime)),\r\n          ]);\r\n          yScale.domain([\r\n            getTotalDistance(\r\n              maxBy(runs.map(({ splits }) => splits), getTotalDistance)\r\n            ),\r\n            0,\r\n          ]);\r\n        }\r\n\r\n        const axisTransition = transition()\r\n          .duration(750)\r\n          .ease(easeQuadOut);\r\n\r\n        xAxis.scale(xScale);\r\n        yAxis.scale(yScale);\r\n\r\n        xAxisContainer.transition(axisTransition).call(xAxis);\r\n        yAxisContainer.transition(axisTransition).call(yAxis);\r\n\r\n        const lineFn = line()\r\n          .x(d => xScale(d.time))\r\n          .y(d => yScale(d.distance))\r\n          .curve(curveCardinal);\r\n\r\n        const update = container\r\n          .selectAll('g.runs')\r\n          .data(runsWithColors, d => d.id);\r\n        const enter = update.enter();\r\n        const exit = update.exit();\r\n\r\n        // enter selection\r\n        enter\r\n          .append('path')\r\n          .attr('class', 'line')\r\n          .attr('d', d =>\r\n            lineFn([\r\n              {\r\n                speed: 0,\r\n                distance: 0,\r\n                time: 0,\r\n              },\r\n              ...d.splits.map((split, i) =>\r\n                take(d.splits, i + 1).reduce((acc, cur) => ({\r\n                  ...acc,\r\n                  time: acc.time + cur.time,\r\n                  distance: acc.distance + cur.distance,\r\n                }))\r\n              ),\r\n            ])\r\n          )\r\n          .attr('stroke', d => d.color)\r\n          .attr('stroke-width', 2)\r\n          .attr('fill', 'none')\r\n          .attr('stroke-dasharray', function() {\r\n            const totalLength = this.getTotalLength();\r\n            return totalLength + ' ' + totalLength;\r\n          })\r\n          .attr('stroke-dashoffset', function() {\r\n            return this.getTotalLength();\r\n          })\r\n          .on('mouseover', d => setSelectedItem(d))\r\n          .on('mouseout', () => setSelectedItem())\r\n          .transition()\r\n          .duration(10000)\r\n          .ease(easeLinear)\r\n          .attr('stroke-dashoffset', 0);\r\n\r\n        // exit selection\r\n        exit.remove();\r\n      }\r\n    },\r\n    [runs, chart, hasElementEntered]\r\n  );\r\n\r\n  // selected item\r\n  useEffect(\r\n    () => {\r\n      if (hasElementEntered) {\r\n        const xScale = xScaleRef.current;\r\n        const yScale = yScaleRef.current;\r\n        const container = containerRef.current;\r\n\r\n        const { type, id } = selectedItem;\r\n        const selectedRun = find(\r\n          runs,\r\n          run => run.id === id && run.type === type\r\n        );\r\n        console.log('====================================');\r\n        console.log(selectedRun, runs, selectedItem);\r\n        console.log('====================================');\r\n        if (selectedRun) {\r\n          // stroke colors\r\n          const update = container\r\n            .selectAll('.line')\r\n            .data([selectedRun], d => d.id);\r\n          update.attr('stroke', 'white');\r\n          const exit = update.exit();\r\n          exit.attr('stroke', 'black');\r\n\r\n          // km areas\r\n          const areaFn = area()\r\n            .x(d => xScale(d.time))\r\n            .y1(0)\r\n            .y0(yScale(0));\r\n\r\n          let data = [\r\n            {\r\n              speed: 0,\r\n              distance: 0,\r\n              time: 0,\r\n            },\r\n            ...selectedRun.splits.map((split, i) =>\r\n              take(selectedRun.splits, i + 1).reduce((acc, cur) => ({\r\n                ...acc,\r\n                time: acc.time + cur.time,\r\n                distance: acc.distance + cur.distance,\r\n              }))\r\n            ),\r\n          ];\r\n\r\n          data = data\r\n            .map((split, i) => {\r\n              if (data[i + 1]) {\r\n                return [split, data[i + 1]];\r\n              }\r\n              return undefined;\r\n            })\r\n            .filter(v => v);\r\n          const enter = container\r\n            .selectAll('.area')\r\n            .data(data)\r\n            .enter();\r\n          const g = enter\r\n            .append('g')\r\n            .attr('class', 'area')\r\n            .attr('opacity', 0);\r\n          g.transition()\r\n            .duration(250)\r\n            .attr('opacity', 0.2);\r\n          g.append('path')\r\n            .attr('d', d => areaFn(d))\r\n            .attr('fill', 'url(#areaGradient)')\r\n            .attr('stroke', secondary);\r\n        } else {\r\n          container\r\n            .selectAll('.line')\r\n            .data(runsWithColors, d => d.id)\r\n            .attr('stroke', d => d.color);\r\n          container.selectAll('.area').remove();\r\n        }\r\n      }\r\n    },\r\n    [runs, chart, hasElementEntered, selectedItem]\r\n  );\r\n\r\n  return <Chart className=\"ChartEvolutionOverTime\" ref={chart} />;\r\n};\r\n\r\nChartDistanceComparison.defaultProps = {\r\n  runs: [],\r\n};\r\n\r\nChartDistanceComparison.propTypes = {\r\n  runs: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number,\r\n      type: PropTypes.string,\r\n      splits: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n          // speed in mps\r\n          speed: PropTypes.number,\r\n          // distance in m\r\n          distance: PropTypes.number,\r\n          // time in s\r\n          time: PropTypes.number,\r\n        })\r\n      ),\r\n    })\r\n  ),\r\n};\r\n\r\nexport default ChartDistanceComparison;\r\n","import ChartDistanceComparison from './ChartEvolutionOverTime';\r\n\r\nexport default ChartDistanceComparison;\r\n","import { axisLeft } from 'd3-axis';\r\nimport { easeQuadOut } from 'd3-ease';\r\nimport { scaleBand, scaleLinear } from 'd3-scale';\r\nimport { select } from 'd3-selection';\r\nimport { transition } from 'd3-transition';\r\nimport { find, maxBy } from 'lodash-es';\r\nimport PropTypes from 'prop-types';\r\nimport React, { useContext, useEffect, useRef } from 'react';\r\nimport styled from 'styled-components';\r\nimport SelectedItemContext from '../../contexts/SelectedItemContext';\r\nimport useHasElementEntered from '../../hooks/useHasElementEntered';\r\nimport { active, primary, bgSecondary, secondary } from '../colors';\r\n\r\nconst Chart = styled.div`\r\n  font-size: 16px;\r\n\r\n  & .x-axis,\r\n  & .y-axis {\r\n    fill: ${bgSecondary};\r\n\r\n    & text {\r\n      font-size: 16px;\r\n      font-family: Acme;\r\n    }\r\n  }\r\n\r\n  & .bar {\r\n    rect {\r\n      fill: ${secondary};\r\n    }\r\n\r\n    text {\r\n      fill: white;\r\n\r\n      &.bar-label {\r\n        fill: ${primary};\r\n        opacity: 0;\r\n        text-anchor: middle;\r\n      }\r\n    }\r\n\r\n    &--selected,\r\n    &:hover,\r\n    &:focus {\r\n      rect {\r\n        fill: ${active};\r\n      }\r\n\r\n      text.bar-label {\r\n        opacity: 1;\r\n      }\r\n    }\r\n  }\r\n\r\n  & .bar-label {\r\n  }\r\n`;\r\n\r\nconst ChartDistanceComparison = ({ runs }) => {\r\n  const margin = { top: 60, right: 60, bottom: 60, left: 60 };\r\n  const width = 800 - margin.left - margin.right;\r\n  const height = 600 - margin.top - margin.bottom;\r\n  const { setSelectedItem, ...selectedItem } = useContext(SelectedItemContext);\r\n  const chart = useRef();\r\n  const hasElementEntered = useHasElementEntered(chart);\r\n  const xScaleRef = useRef();\r\n  const yScaleRef = useRef();\r\n  const yAxisRef = useRef();\r\n  const containerRef = useRef();\r\n  const yAxisContainerRef = useRef();\r\n\r\n  // SVG creation\r\n  useEffect(\r\n    () => {\r\n      const svg = select(chart.current)\r\n        .append('svg')\r\n        .attr(\r\n          'viewBox',\r\n          `0 0 ${width + margin.left + margin.right} ${height +\r\n            margin.top +\r\n            margin.bottom}`\r\n        );\r\n\r\n      // background\r\n      // svg\r\n      //   .append('rect')\r\n      //   .attr('fill', bgSecondary)\r\n      //   .attr('x', 0)\r\n      //   .attr('y', 0)\r\n      //   .attr('width', width + margin.left + margin.right)\r\n      //   .attr('height', height + margin.top + margin.bottom);\r\n\r\n      // main container\r\n      const container = svg\r\n        .append('g')\r\n        .attr('class', 'container')\r\n        .attr('transform', `translate(${margin.left}, ${margin.top})`);\r\n      containerRef.current = container;\r\n\r\n      // y-axis container\r\n      yAxisContainerRef.current = container.append('g').attr('class', 'y-axis');\r\n\r\n      xScaleRef.current = scaleBand()\r\n        .padding(0.2)\r\n        .range([0, width]);\r\n      yScaleRef.current = scaleLinear().range([height, 0]);\r\n      yAxisRef.current = axisLeft(yAxisRef.current).ticks(10, '~s');\r\n    },\r\n    [chart]\r\n  );\r\n\r\n  // SVG drawing and updating\r\n  useEffect(\r\n    () => {\r\n      if (hasElementEntered) {\r\n        const xScale = xScaleRef.current;\r\n        const yScale = yScaleRef.current;\r\n        const yAxis = yAxisRef.current;\r\n        const container = containerRef.current;\r\n        const yAxisContainer = yAxisContainerRef.current;\r\n\r\n        if (Object.keys(runs).length === 0) {\r\n          xScale.domain([]);\r\n          yScale.domain([21097, 0]);\r\n        } else {\r\n          xScale.domain(runs.map(r => r.id));\r\n          yScale.domain([0, maxBy(runs, r => r.distance).distance]);\r\n        }\r\n\r\n        const axisTransition = transition()\r\n          .duration(750)\r\n          .ease(easeQuadOut);\r\n\r\n        yAxis.scale(yScale);\r\n\r\n        yAxisContainer.transition(axisTransition).call(yAxis);\r\n\r\n        const update = container.selectAll('g.bar').data(runs, d => d.id);\r\n        const enter = update.enter();\r\n\r\n        // enter selection\r\n        const g = enter.append('g').attr('class', 'bar');\r\n        g.append('rect')\r\n          .attr('x', d => xScale(d.id))\r\n          .attr('y', d => height - yScale(d.distance))\r\n          .attr('width', () => xScale.bandwidth())\r\n          .on('mouseover', setSelectedItem)\r\n          .on('mouseout', () => setSelectedItem())\r\n          .transition()\r\n          .duration(750)\r\n          .ease(easeQuadOut)\r\n          .attr('y', d => yScale(d.distance))\r\n          .attr('height', d => height - yScale(d.distance));\r\n        g.append('text')\r\n          .attr('class', 'bar-label')\r\n          .attr('x', d => xScale(d.id) + xScale.bandwidth() / 2)\r\n          .attr('y', d => height + 20)\r\n          .text(d => d.name);\r\n        g.append('text')\r\n          .attr('x', d => xScale(d.id) + xScale.bandwidth() - 5)\r\n          .attr('y', d => height)\r\n          .attr(\r\n            'transform',\r\n            d =>\r\n              `rotate(-90, ${xScale(d.id) + xScale.bandwidth() - 5}, ${height})`\r\n          )\r\n          .text(d => `${d.distance} meters`);\r\n      }\r\n    },\r\n    [runs, chart, hasElementEntered]\r\n  );\r\n\r\n  // selected item\r\n  useEffect(\r\n    () => {\r\n      if (hasElementEntered) {\r\n        const container = containerRef.current;\r\n        const { type, id } = selectedItem;\r\n        const selectedRun = find(\r\n          runs,\r\n          run => run.id === id && run.type === type\r\n        );\r\n        // stroke colors\r\n        const update = container\r\n          .selectAll('.bar')\r\n          .data(selectedRun ? [selectedRun] : [], d => d.id);\r\n        update.classed('bar--selected', true);\r\n        const exit = update.exit();\r\n        exit.classed('bar--selected', false);\r\n      }\r\n    },\r\n    [runs, chart, hasElementEntered, selectedItem]\r\n  );\r\n\r\n  return <Chart className=\"ChartDistanceComparison\" ref={chart} />;\r\n};\r\n\r\nChartDistanceComparison.defaultProps = {\r\n  runs: [],\r\n};\r\n\r\nChartDistanceComparison.propTypes = {\r\n  runs: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number,\r\n      name: PropTypes.string,\r\n      type: PropTypes.string,\r\n      distance: PropTypes.number,\r\n    })\r\n  ),\r\n};\r\n\r\nexport default ChartDistanceComparison;\r\n","import ChartDistanceComparison from './ChartDistanceComparison';\r\n\r\nexport default ChartDistanceComparison;\r\n","import { axisLeft } from 'd3-axis';\r\nimport { easeQuadOut } from 'd3-ease';\r\nimport { scaleBand, scaleLinear } from 'd3-scale';\r\nimport { select } from 'd3-selection';\r\nimport { transition } from 'd3-transition';\r\nimport { find, maxBy } from 'lodash-es';\r\nimport PropTypes from 'prop-types';\r\nimport React, { useContext, useEffect, useRef } from 'react';\r\nimport styled from 'styled-components';\r\nimport SelectedItemContext from '../../contexts/SelectedItemContext';\r\nimport useHasElementEntered from '../../hooks/useHasElementEntered';\r\nimport { active, primary, bgSecondary, secondary } from '../colors';\r\n\r\nconst Chart = styled.div`\r\n  font-size: 16px;\r\n\r\n  & .x-axis,\r\n  & .y-axis {\r\n    fill: ${bgSecondary};\r\n\r\n    & text {\r\n      font-size: 16px;\r\n      font-family: Acme;\r\n    }\r\n  }\r\n\r\n  & .bar {\r\n    rect {\r\n      &.average {\r\n        fill: black;\r\n      }\r\n      &.max {\r\n        fill: ${secondary};\r\n      }\r\n    }\r\n\r\n    text {\r\n      &.bar-label {\r\n        fill: ${primary};\r\n        opacity: 0;\r\n        text-anchor: middle;\r\n      }\r\n      &.speed {\r\n        fill: white;\r\n        font-size: 12px;\r\n      }\r\n    }\r\n\r\n    &--selected,\r\n    &:hover,\r\n    &:focus {\r\n      rect {\r\n        &.average,\r\n        &.max {\r\n          fill: ${active};\r\n        }\r\n      }\r\n\r\n      text.bar-label {\r\n        opacity: 1;\r\n      }\r\n    }\r\n  }\r\n\r\n  & .bar-label {\r\n  }\r\n`;\r\n\r\nconst ChartPaceComparison = ({ runs, mode }) => {\r\n  const margin = { top: 60, right: 60, bottom: 60, left: 60 };\r\n  const width = 800 - margin.left - margin.right;\r\n  const height = 600 - margin.top - margin.bottom;\r\n  const { setSelectedItem, ...selectedItem } = useContext(SelectedItemContext);\r\n  const chart = useRef();\r\n  const hasElementEntered = useHasElementEntered(chart);\r\n  const xScaleRef = useRef();\r\n  const yScaleRef = useRef();\r\n  const yAxisRef = useRef();\r\n  const containerRef = useRef();\r\n  const yAxisContainerRef = useRef();\r\n\r\n  const convertMPSToKMPH = mps => (mps * 3600) / 1000;\r\n  const convertMPSToMinPKM = mps => 16.666666666667 / mps;\r\n\r\n  // SVG creation\r\n  useEffect(\r\n    () => {\r\n      const svg = select(chart.current)\r\n        .append('svg')\r\n        .attr(\r\n          'viewBox',\r\n          `0 0 ${width + margin.left + margin.right} ${height +\r\n            margin.top +\r\n            margin.bottom}`\r\n        );\r\n\r\n      // main container\r\n      const container = svg\r\n        .append('g')\r\n        .attr('class', 'container')\r\n        .attr('transform', `translate(${margin.left}, ${margin.top})`);\r\n      containerRef.current = container;\r\n\r\n      // y-axis container\r\n      yAxisContainerRef.current = container.append('g').attr('class', 'y-axis');\r\n\r\n      xScaleRef.current = scaleBand()\r\n        .padding(0.2)\r\n        .range([0, width]);\r\n      yScaleRef.current = scaleLinear().range([height, 0]);\r\n      yAxisRef.current = axisLeft(yAxisRef.current).ticks(10, '~s');\r\n    },\r\n    [chart]\r\n  );\r\n\r\n  // SVG drawing and updating\r\n  useEffect(\r\n    () => {\r\n      if (hasElementEntered) {\r\n        const xScale = xScaleRef.current;\r\n        const yScale = yScaleRef.current;\r\n        const yAxis = yAxisRef.current;\r\n        const container = containerRef.current;\r\n        const yAxisContainer = yAxisContainerRef.current;\r\n\r\n        if (Object.keys(runs).length === 0) {\r\n          xScale.domain([]);\r\n          yScale.domain([0, 25]);\r\n        } else {\r\n          xScale.domain(runs.map(r => r.id));\r\n          yScale.domain([\r\n            0,\r\n            convertMPSToKMPH(maxBy(runs, r => r.max_speed).max_speed),\r\n          ]);\r\n        }\r\n\r\n        const axisTransition = transition()\r\n          .duration(750)\r\n          .ease(easeQuadOut);\r\n\r\n        yAxis.scale(yScale);\r\n\r\n        yAxisContainer.transition(axisTransition).call(yAxis);\r\n\r\n        const update = container.selectAll('g.bar').data(runs, d => d.id);\r\n        const enter = update.enter();\r\n\r\n        // enter selection\r\n        const g = enter.append('g').attr('class', 'bar');\r\n        // avg rect\r\n        g.append('rect')\r\n          .attr('class', 'average')\r\n          .attr('x', d => xScale(d.id))\r\n          .attr('y', d => yScale(convertMPSToKMPH(d.average_speed)))\r\n          .attr('width', () => xScale.bandwidth())\r\n          .on('mouseover', setSelectedItem)\r\n          .on('mouseout', () => setSelectedItem())\r\n          .transition()\r\n          .duration(750)\r\n          .ease(easeQuadOut)\r\n          .attr('y', d => yScale(convertMPSToKMPH(d.average_speed)))\r\n          .attr(\r\n            'height',\r\n            d => height - yScale(convertMPSToKMPH(d.average_speed))\r\n          );\r\n        // max rect\r\n        g.append('rect')\r\n          .attr('class', 'max')\r\n          .attr('x', d => xScale(d.id))\r\n          .attr(\r\n            'y',\r\n            d =>\r\n              height -\r\n              yScale(convertMPSToKMPH(d.max_speed)) +\r\n              yScale(convertMPSToKMPH(d.average_speed))\r\n          )\r\n          .attr('width', () => xScale.bandwidth())\r\n          .on('mouseover', setSelectedItem)\r\n          .on('mouseout', () => setSelectedItem())\r\n          .transition()\r\n          .duration(750)\r\n          .ease(easeQuadOut)\r\n          .attr('y', d => yScale(convertMPSToKMPH(d.max_speed)))\r\n          .attr(\r\n            'height',\r\n            d =>\r\n              height -\r\n              yScale(convertMPSToKMPH(d.max_speed)) -\r\n              (height - yScale(convertMPSToKMPH(d.average_speed)))\r\n          );\r\n        // name label\r\n        g.append('text')\r\n          .attr('class', 'bar-label')\r\n          .attr('x', d => xScale(d.id) + xScale.bandwidth() / 2)\r\n          .attr('y', () => height + 20)\r\n          .text(d => d.name);\r\n        // avg speed label\r\n        g.append('text')\r\n          .attr('class', 'speed')\r\n          .attr('x', d => xScale(d.id) + xScale.bandwidth() - 5)\r\n          .attr('y', () => height)\r\n          .attr(\r\n            'transform',\r\n            d =>\r\n              `rotate(-90, ${xScale(d.id) + xScale.bandwidth() - 5}, ${height})`\r\n          )\r\n          .text(\r\n            d =>\r\n              `${convertMPSToKMPH(d.average_speed).toPrecision(\r\n                2\r\n              )} km/h (${convertMPSToMinPKM(d.average_speed).toPrecision(\r\n                2\r\n              )} min/km)`\r\n          );\r\n        // max speed label\r\n        g.append('text')\r\n          .attr('class', 'speed')\r\n          .attr('x', d => xScale(d.id) + 16)\r\n          .attr(\r\n            'y',\r\n            d => height - (height - yScale(convertMPSToKMPH(d.average_speed)))\r\n          )\r\n          .attr(\r\n            'transform',\r\n            d =>\r\n              `rotate(-90, ${xScale(d.id) + 16}, ${height -\r\n                (height - yScale(convertMPSToKMPH(d.average_speed)))})`\r\n          )\r\n          .text(\r\n            d =>\r\n              `${convertMPSToKMPH(d.max_speed).toPrecision(\r\n                2\r\n              )} km/h (${convertMPSToMinPKM(d.max_speed).toPrecision(\r\n                2\r\n              )} min/km)`\r\n          );\r\n      }\r\n    },\r\n    [runs, chart, hasElementEntered, mode]\r\n  );\r\n\r\n  // selected item\r\n  useEffect(\r\n    () => {\r\n      if (hasElementEntered) {\r\n        const container = containerRef.current;\r\n        const { type, id } = selectedItem;\r\n        const selectedRun = find(\r\n          runs,\r\n          run => run.id === id && run.type === type\r\n        );\r\n        // stroke colors\r\n        const update = container\r\n          .selectAll('.bar')\r\n          .data(selectedRun ? [selectedRun] : [], d => d.id);\r\n        update.classed('bar--selected', true);\r\n        const exit = update.exit();\r\n        exit.classed('bar--selected', false);\r\n      }\r\n    },\r\n    [runs, chart, hasElementEntered, selectedItem]\r\n  );\r\n\r\n  return <Chart className=\"ChartPaceComparison\" ref={chart} />;\r\n};\r\n\r\nChartPaceComparison.defaultProps = {\r\n  runs: [],\r\n  mode: 'absolute',\r\n};\r\n\r\nChartPaceComparison.propTypes = {\r\n  runs: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number,\r\n      name: PropTypes.string,\r\n      max_speed: PropTypes.number,\r\n      average_speed: PropTypes.number,\r\n      type: PropTypes.string,\r\n    })\r\n  ),\r\n  mode: PropTypes.string,\r\n};\r\n\r\nexport default ChartPaceComparison;\r\n","import ChartPaceComparison from './ChartPaceComparison';\r\n\r\nexport default ChartPaceComparison;\r\n","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\nimport { orderBy, truncate, pick } from 'lodash-es';\r\nimport ChartEvolutionOverTime from '../ChartEvolutionOverTime';\r\nimport ChartDistanceComparison from '../ChartDistanceComparison';\r\nimport ChartPaceComparison from '../ChartPaceComparison';\r\nimport ReferenceList from '../ReferenceList';\r\nimport { secondary, active, bgSecondary } from '../colors';\r\n\r\nconst Title = styled.h1`\r\n  text-align: center;\r\n`;\r\n\r\nconst ChartList = styled.nav`\r\n  margin: 20px 0;\r\n\r\n  text-align: center;\r\n`;\r\n\r\nconst ChartListItem = styled.a`\r\n  margin-left: 32px;\r\n  margin-right: 32px;\r\n  display: inline-block;\r\n  background: ${bgSecondary}\r\n\r\n  font-size: 48px;\r\n  font-style: oblique;\r\n  letter-spacing: 2px;\r\n  text-decoration: none;\r\n\r\n  cursor: pointer;\r\n\r\n  &:hover, &:active, &:focus, &.selected {\r\n    color: ${secondary};\r\n    text-decoration: underline;\r\n  }\r\n\r\n  &:active {\r\n    color: ${active};\r\n  }\r\n`;\r\n\r\nconst MainView = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nconst Graph = styled.div`\r\n  flex: 2;\r\n`;\r\n\r\nconst List = styled.div`\r\n  flex: 1;\r\n`;\r\n\r\nconst charts = [\r\n  {\r\n    label: 'Progress over time',\r\n  },\r\n  {\r\n    label: 'Pace comparison',\r\n  },\r\n  {\r\n    label: 'Distance comparison',\r\n  },\r\n];\r\n\r\nconst RunComparison = ({ title, runs, type, location, history, match }) => {\r\n  const [currentChart, setChart] = useState(charts[0]);\r\n  return (\r\n    <div>\r\n      <Title>{title}</Title>\r\n      <ChartList>\r\n        {charts.map((c, i) => (\r\n          <ChartListItem\r\n            key={i}\r\n            className={currentChart === c ? 'selected' : ''}\r\n            onClick={() => setChart(c)}\r\n          >\r\n            {c.label}\r\n          </ChartListItem>\r\n        ))}\r\n      </ChartList>\r\n      <MainView>\r\n        <Graph>\r\n          {currentChart === charts[0] && (\r\n            <ChartEvolutionOverTime\r\n              runs={runs.map(({ id, splits_metric }) => ({\r\n                id,\r\n                type,\r\n                splits: splits_metric.map(\r\n                  ({ average_speed, distance, elapsed_time }) => ({\r\n                    speed: average_speed,\r\n                    distance: distance,\r\n                    time: elapsed_time,\r\n                  })\r\n                ),\r\n              }))}\r\n            />\r\n          )}\r\n          {currentChart === charts[1] && (\r\n            <ChartPaceComparison\r\n              runs={runs.map(r => ({\r\n                ...pick(r, 'id', 'name', 'max_speed', 'average_speed'),\r\n                type,\r\n              }))}\r\n            />\r\n          )}\r\n          {currentChart === charts[2] && (\r\n            <ChartDistanceComparison\r\n              runs={runs.map(r => ({\r\n                ...pick(r, 'id', 'name', 'distance'),\r\n                type,\r\n              }))}\r\n            />\r\n          )}\r\n        </Graph>\r\n        <List>\r\n          <ReferenceList\r\n            ordered\r\n            items={orderBy(runs, 'start_date', 'desc').map(({ name, id }) => ({\r\n              label: truncate(name, {\r\n                separator: /,? +/,\r\n              }),\r\n              onClick: () =>\r\n                window.open(\r\n                  `https://www.strava.com/activities/${id}`,\r\n                  '_blank'\r\n                ),\r\n              id,\r\n              type,\r\n            }))}\r\n          />\r\n        </List>\r\n      </MainView>\r\n    </div>\r\n  );\r\n};\r\n\r\nRunComparison.propTypes = {\r\n  title: PropTypes.string,\r\n  type: PropTypes.string,\r\n  history: PropTypes.shape({}),\r\n  location: PropTypes.shape({}),\r\n  match: PropTypes.shape({}),\r\n  runs: PropTypes.arrayOf(PropTypes.object),\r\n};\r\n\r\nexport default RunComparison;\r\n","import RunComparison from './RunComparison';\r\n\r\nexport default RunComparison;\r\n","import React, { useState, useMemo } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport SelectedItemContext from './SelectedItemContext';\r\n\r\nconst SelectedItemProvider = ({ children }) => {\r\n  const [selectedItem, setSelectedItem] = useState({});\r\n  const value = useMemo(\r\n    () => ({\r\n      ...selectedItem,\r\n      setSelectedItem: item => {\r\n        // const nextItem = item\r\n        //   ? { id: item.id, type: item.type }\r\n        //   : { id: undefined, type: '' };\r\n        // if (nextItem.id) console.log(nextItem);\r\n        setSelectedItem(item ? item : { id: undefined, type: '' });\r\n      },\r\n    }),\r\n    [selectedItem]\r\n  );\r\n  return (\r\n    <SelectedItemContext.Provider value={value}>\r\n      {children}\r\n    </SelectedItemContext.Provider>\r\n  );\r\n};\r\n\r\nSelectedItemProvider.propTypes = {\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(PropTypes.node),\r\n    PropTypes.node,\r\n  ]),\r\n};\r\n\r\nSelectedItemProvider.defaultProps = {\r\n  children: undefined,\r\n};\r\n\r\nexport default SelectedItemProvider;\r\n","import Main from './Main';\r\n\r\nexport default Main;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport useStrava from '../../hooks/useStrava';\r\nimport Container from '../Container';\r\nimport Header from '../Header';\r\nimport Footer from '../Footer';\r\nimport Summary from '../Summary';\r\nimport RunComparison from '../RunComparison';\r\nimport SelectedItemProvider from '../../contexts/SelectedItemProvider';\r\n\r\nconst Main = ({ code }) => {\r\n  const {\r\n    isReady,\r\n    athleteId,\r\n    profilePicture,\r\n    fullName,\r\n    longestRun,\r\n    topKudosers,\r\n    biggestFan,\r\n    matchingRunsBySegmentGroups,\r\n    matchingRunsByHighestBestEfforts,\r\n    totalRuns,\r\n  } = useStrava(code);\r\n  return (\r\n    <SelectedItemProvider>\r\n      <Container>\r\n        <Header\r\n          athleteId={athleteId}\r\n          profilePicture={profilePicture}\r\n          fullName={fullName}\r\n        />\r\n        <Switch>\r\n          <Route\r\n            path=\"/\"\r\n            exact\r\n            render={props =>\r\n              isReady ? (\r\n                <Summary\r\n                  {...props}\r\n                  athleteId={athleteId}\r\n                  longestRun={longestRun}\r\n                  biggestFan={biggestFan}\r\n                  totalRuns={totalRuns}\r\n                  topKudosers={topKudosers}\r\n                  matchingRunsBySegmentGroups={matchingRunsBySegmentGroups}\r\n                  matchingRunsByHighestBestEfforts={\r\n                    matchingRunsByHighestBestEfforts\r\n                  }\r\n                />\r\n              ) : null\r\n            }\r\n          />\r\n          <Route\r\n            path=\"/SegmentGroup/:id\"\r\n            render={props => {\r\n              const runs = matchingRunsBySegmentGroups[props.match.params.id];\r\n              const [firstRun] = runs;\r\n              return (\r\n                <RunComparison\r\n                  {...props}\r\n                  runs={runs}\r\n                  title={firstRun && firstRun.name}\r\n                  type=\"SEGMENT_GROUP\"\r\n                />\r\n              );\r\n            }}\r\n          />\r\n          <Route\r\n            path=\"/HighestBestEffort/:id\"\r\n            render={props => {\r\n              const runs =\r\n                matchingRunsByHighestBestEfforts[props.match.params.id];\r\n              const [firstRun] = runs;\r\n              return (\r\n                <RunComparison\r\n                  {...props}\r\n                  runs={runs}\r\n                  title={firstRun && firstRun.name}\r\n                  type=\"HIGHEST_BEST_EFFORT\"\r\n                />\r\n              );\r\n            }}\r\n          />\r\n        </Switch>\r\n        <Footer />\r\n      </Container>\r\n    </SelectedItemProvider>\r\n  );\r\n};\r\n\r\nMain.propTypes = {\r\n  code: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Main;\r\n","import {\r\n  countBy,\r\n  differenceBy,\r\n  find,\r\n  flatten,\r\n  head,\r\n  map,\r\n  mapKeys,\r\n  mapValues,\r\n  maxBy,\r\n  orderBy,\r\n  uniqBy,\r\n  values,\r\n  without,\r\n} from 'lodash-es';\r\nimport { useEffect, useState } from 'react';\r\nimport StravaAPI from '../strava';\r\n\r\nexport default token => {\r\n  const [stravaApi] = useState(new StravaAPI());\r\n  const [isReady, setIsReady] = useState(false);\r\n  const [longestRun, setLongestRun] = useState(undefined);\r\n  const [fastestRun, setFastestRun] = useState(undefined);\r\n  const [topKudosers, setTopKudosers] = useState([]);\r\n  const [biggestFan, setBiggestFan] = useState(undefined);\r\n  const [profilePicture, setProfilePicture] = useState(undefined);\r\n  const [fullName, setFullName] = useState(undefined);\r\n  const [totalRuns, setTotalRuns] = useState(undefined);\r\n  const [athleteId, setAthleteId] = useState(undefined);\r\n  const [matchingRunsByBestEfforts, setMatchingRunsByBestEfforts] = useState(\r\n    undefined\r\n  );\r\n  const [\r\n    matchingRunsByHighestBestEfforts,\r\n    setMatchingRunsByHighestBestEfforts,\r\n  ] = useState(undefined);\r\n  const [matchingRunsBySegments, setMatchingRunsBySegments] = useState(\r\n    undefined\r\n  );\r\n  const [\r\n    matchingRunsBySegmentGroups,\r\n    setMatchingRunsBySegmentGroups,\r\n  ] = useState(undefined);\r\n\r\n  useEffect(\r\n    () => {\r\n      stravaApi\r\n        .init(token)\r\n        .then(({ currentAthlete, activities, kudos, totalRuns }) => {\r\n          // Strava ID\r\n          setAthleteId(currentAthlete.id);\r\n\r\n          // URL to Profile picture\r\n          setProfilePicture(currentAthlete.profile);\r\n\r\n          // Full name\r\n          setFullName(`${currentAthlete.firstname} ${currentAthlete.lastname}`);\r\n\r\n          // Total stats\r\n          setTotalRuns(totalRuns);\r\n\r\n          // Array of all kudosers\r\n          const allKudosers = uniqBy(\r\n            flatten(values(kudos)),\r\n            kudoser => kudoser.id\r\n          );\r\n\r\n          // All kudosers sorted by kudos count\r\n          const _topKudosers = orderBy(\r\n            map(\r\n              countBy(flatten(values(kudos)), kudoser => kudoser.id),\r\n              (value, key) => {\r\n                const kudoser = find(allKudosers, kudoser => {\r\n                  return kudoser.id.toString() === key;\r\n                });\r\n                return {\r\n                  ...kudoser,\r\n                  kudosCount: value,\r\n                };\r\n              }\r\n            ),\r\n            'kudosCount',\r\n            'desc'\r\n          );\r\n          setTopKudosers(_topKudosers);\r\n\r\n          // Biggest fan / Top kudoser\r\n          setBiggestFan(head(_topKudosers));\r\n\r\n          // Longest run (highest distance)\r\n          setLongestRun(head(orderBy(activities, 'distance', 'desc')));\r\n\r\n          // Fastest run (fastest pace)\r\n          setFastestRun(head(orderBy(activities, 'average_speed', 'desc')));\r\n\r\n          // Runs matched by highest best efforts\r\n          const allBestEfforts = orderBy(\r\n            uniqBy(\r\n              flatten(\r\n                map(activities, ({ best_efforts }) =>\r\n                  best_efforts.map(({ name, distance }) => ({\r\n                    name,\r\n                    distance,\r\n                  }))\r\n                )\r\n              ),\r\n              b => b.distance\r\n            ),\r\n            'distance',\r\n            'asc'\r\n          );\r\n          setMatchingRunsByHighestBestEfforts({\r\n            ...mapValues(mapKeys(allBestEfforts, v => v.distance), be =>\r\n              values(activities).filter(\r\n                ({ best_efforts }) =>\r\n                  maxBy(best_efforts, be2 => be2.distance).distance ===\r\n                  be.distance\r\n              )\r\n            ),\r\n          });\r\n          // Runs matched by best efforts\r\n          setMatchingRunsByBestEfforts({\r\n            ...mapValues(mapKeys(allBestEfforts, v => v.distance), be =>\r\n              values(activities).filter(({ best_efforts }) =>\r\n                best_efforts.some(be2 => be2.distance === be.distance)\r\n              )\r\n            ),\r\n          });\r\n\r\n          // Runs matched by segments\r\n          const allSegments = orderBy(\r\n            uniqBy(\r\n              flatten(\r\n                map(activities, ({ segment_efforts }) => segment_efforts)\r\n              ),\r\n              ({ segment: { id } }) => id\r\n            ),\r\n            'distance',\r\n            'asc'\r\n          );\r\n          setMatchingRunsBySegments({\r\n            ...mapValues(mapKeys(allSegments, v => v.segment.id), seg =>\r\n              values(activities).filter(({ segment_efforts }) =>\r\n                segment_efforts.some(seg2 => seg2.segment.id === seg.segment.id)\r\n              )\r\n            ),\r\n          });\r\n\r\n          // Runs matched by segment groups\r\n          let activitiesPool = [...values(activities)];\r\n          let groups = {};\r\n\r\n          const doesActivitySegmentsMatch = (activity1, activity2) => {\r\n            const segments1 = activity1.segment_efforts;\r\n            const segments2 = activity2.segment_efforts;\r\n            const uniqueSegments = uniqBy(\r\n              [...segments1, ...segments2],\r\n              ({ segment: { id } }) => id\r\n            );\r\n            const differences = uniqBy(\r\n              [\r\n                ...differenceBy(\r\n                  segments1,\r\n                  segments2,\r\n                  ({ segment: { id } }) => id\r\n                ),\r\n                ...differenceBy(\r\n                  segments2,\r\n                  segments1,\r\n                  ({ segment: { id } }) => id\r\n                ),\r\n              ],\r\n              ({ segment: { id } }) => id\r\n            );\r\n            return differences.length / uniqueSegments.length < 0.9;\r\n          };\r\n\r\n          for (const a1 of values(activities)) {\r\n            let newGroup = [];\r\n            for (const a2 of activitiesPool) {\r\n              if (doesActivitySegmentsMatch(a1, a2)) {\r\n                newGroup.push(a2);\r\n              }\r\n            }\r\n            activitiesPool = without(activitiesPool, ...newGroup);\r\n            if (newGroup.length > 0) {\r\n              groups[a1.id] = newGroup;\r\n            }\r\n          }\r\n          setMatchingRunsBySegmentGroups(groups);\r\n\r\n          // Strava loaded!\r\n          setIsReady(true);\r\n        });\r\n    },\r\n    [token]\r\n  );\r\n\r\n  return {\r\n    isReady,\r\n    athleteId,\r\n    profilePicture,\r\n    fullName,\r\n    longestRun,\r\n    fastestRun,\r\n    topKudosers,\r\n    biggestFan,\r\n    totalRuns,\r\n    matchingRunsByBestEfforts,\r\n    matchingRunsByHighestBestEfforts,\r\n    matchingRunsBySegments,\r\n    matchingRunsBySegmentGroups,\r\n  };\r\n};\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './Router';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'normalize.css';\r\nimport './styles.css';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import React from 'react';\r\nimport { BrowserRouter, Route } from 'react-router-dom';\r\nimport Introduction from './components/Introduction';\r\nimport Main from './components/Main';\r\n\r\nexport default () => {\r\n  const searchParams = new URLSearchParams(window.location.search);\r\n  const code = searchParams.get('code');\r\n  const error = searchParams.get('error');\r\n\r\n  if (code && error !== 'access_denied') {\r\n    return (\r\n      <BrowserRouter>\r\n        <Route render={() => <Main code={code} />} />\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n  return (\r\n    <Introduction\r\n      onStart={() =>\r\n        window.open(\r\n          `https://www.strava.com/oauth/authorize?client_id=${\r\n            process.env.REACT_APP_STRAVA_ID\r\n          }&redirect_uri=${\r\n            process.env.REACT_APP_STRAVA_REDIRECT_URI\r\n          }&response_type=code&approval_prompt=auto&scope=profile:read_all,activity:read_all`,\r\n          '_self'\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n"],"sourceRoot":""}